2025-08-25 12:33:04,960 - evaluation_logger_Cross-376 - INFO - Test Example Cross-376
2025-08-25 12:33:04,960 - evaluation_logger_Cross-376 - INFO - Query: Today is December 3rd, 2024. Check the sightseeing routes for attractions near the Santorini Palace for the day after tomorrow. Also, reserve a taxi to pick me up from the hotel eight hours after the tour starts and take me to Santorini International Airport.
2025-08-25 12:33:14,067 - evaluation_logger_Cross-376 - INFO - Function Calls: 
[
    {
        "name": "Search_Hotel_Destination",
        "arguments": {
            "query": "Santorini Palace"
        }
    }
]

2025-08-25 12:33:14,067 - evaluation_logger_Cross-376 - INFO - Golden Function Call: 
[
    {
        "name": "Search_Hotel_Destination",
        "arguments": {
            "query": "Santorini Palace"
        }
    },
    {
        "name": "Taxi_Search_Location",
        "arguments": {
            "query": "Santorini Palace"
        }
    },
    {
        "name": "Taxi_Search_Location",
        "arguments": {
            "query": "Santorini International Airport"
        }
    },
    {
        "name": "Get_Popular_Attraction_Near_By",
        "arguments": {
            "hotel_id": "95621"
        }
    }
]

2025-08-25 12:33:14,067 - evaluation_logger_Cross-376 - INFO - Start compare_single_call: 
{'name': 'Search_Hotel_Destination', 'arguments': {'query': 'Santorini Palace'}}
{'name': 'Search_Hotel_Destination', 'arguments': {'query': 'Santorini Palace'}}
2025-08-25 12:33:14,067 - evaluation_logger_Cross-376 - INFO - Rule-based compare success.
2025-08-25 12:33:14,067 - evaluation_logger_Cross-376 - INFO - Success matched: [{'name': 'Search_Hotel_Destination', 'arguments': {'query': 'Santorini Palace'}}]
2025-08-25 12:33:14,067 - evaluation_logger_Cross-376 - INFO - Observations:
[
    {
        "status": true,
        "message": "Success",
        "data": [
            {
                "dest_id": "95621",
                "search_type": "hotel",
                "type": "ho",
                "latitude": 36.423622,
                "cc1": "gr",
                "city_ufi": -829275,
                "city_name": "Fira",
                "name": "Santorini Palace",
                "label": "Santorini Palace, Fira, Cyclades, Greece",
                "nr_hotels": 1,
                "dest_type": "hotel",
                "roundtrip": "GgEwIAAoATICZW46EFNhbnRvcmluaSBQYWxhY2VAAEoAUAA=",
                "lc": "en",
                "longitude": 25.429155,
                "country": "Greece",
                "region": "Cyclades",
                "hotels": 1
            }
        ]
    }
]

2025-08-25 12:33:24,311 - evaluation_logger_Cross-376 - INFO - Function Calls: 
[
    {
        "name": "Get_Popular_Attraction_Near_By",
        "arguments": {
            "hotel_id": "95621"
        }
    },
    {
        "name": "Search_Attraction_Location",
        "arguments": {
            "query": "Santorini International Airport"
        }
    }
]

2025-08-25 12:33:24,311 - evaluation_logger_Cross-376 - INFO - Golden Function Call: 
[
    {
        "name": "Taxi_Search_Location",
        "arguments": {
            "query": "Santorini Palace"
        }
    },
    {
        "name": "Taxi_Search_Location",
        "arguments": {
            "query": "Santorini International Airport"
        }
    },
    {
        "name": "Get_Popular_Attraction_Near_By",
        "arguments": {
            "hotel_id": "95621"
        }
    },
    {
        "name": "Search_Attraction_Location",
        "arguments": {
            "query": "Red Beach"
        }
    }
]

2025-08-25 12:33:24,919 - evaluation_logger_Cross-376 - INFO - Start compare_single_call: 
{'name': 'Get_Popular_Attraction_Near_By', 'arguments': {'hotel_id': '95621'}}
{'name': 'Get_Popular_Attraction_Near_By', 'arguments': {'hotel_id': '95621'}}
2025-08-25 12:33:24,919 - evaluation_logger_Cross-376 - INFO - Rule-based compare success.
2025-08-25 12:33:24,919 - evaluation_logger_Cross-376 - INFO - Start compare_single_call: 
{'name': 'Search_Attraction_Location', 'arguments': {'query': 'Santorini International Airport'}}
{'name': 'Taxi_Search_Location', 'arguments': {'query': 'Santorini International Airport'}}
2025-08-25 12:33:24,919 - evaluation_logger_Cross-376 - INFO - {'error_type': 'func_error', 'content': 'Do not call the correct function.'}
2025-08-25 12:33:24,919 - evaluation_logger_Cross-376 - INFO - Success matched: [{'name': 'Get_Popular_Attraction_Near_By', 'arguments': {'hotel_id': '95621'}}]
2025-08-25 12:33:24,919 - evaluation_logger_Cross-376 - INFO - Observations:
[
    {
        "status": true,
        "message": "Success",
        "data": {
            "popular_landmarks": [
                {
                    "distance": 5.52730879354255,
                    "total_votes": 334,
                    "tag": "Red Beach",
                    "longitude": 25.3941679000854,
                    "average_out_of_10": 8.6,
                    "latitude": 36.3488218162167
                }
            ]
        }
    },
    {
        "api_status": true,
        "content": "There is a problem with your api call, please double-check for possible problems."
    }
]

2025-08-25 12:33:35,752 - evaluation_logger_Cross-376 - INFO - Function Calls: 
[
    {
        "name": "Taxi_Search_Location",
        "arguments": {
            "query": "Santorini International Airport"
        }
    }
]

2025-08-25 12:33:35,752 - evaluation_logger_Cross-376 - INFO - Golden Function Call: 
[
    {
        "name": "Taxi_Search_Location",
        "arguments": {
            "query": "Santorini Palace"
        }
    },
    {
        "name": "Taxi_Search_Location",
        "arguments": {
            "query": "Santorini International Airport"
        }
    },
    {
        "name": "Search_Attraction_Location",
        "arguments": {
            "query": "Red Beach"
        }
    },
    {
        "name": "Get_Availability",
        "arguments": {
            "slug": "prxmiart2uyb-shared-basic-sunset-trip-of-santorini-via-red-beach-white-beach"
        }
    }
]

2025-08-25 12:33:35,753 - evaluation_logger_Cross-376 - INFO - Start compare_single_call: 
{'name': 'Taxi_Search_Location', 'arguments': {'query': 'Santorini International Airport'}}
{'name': 'Taxi_Search_Location', 'arguments': {'query': 'Santorini International Airport'}}
2025-08-25 12:33:35,753 - evaluation_logger_Cross-376 - INFO - Rule-based compare success.
2025-08-25 12:33:35,753 - evaluation_logger_Cross-376 - INFO - Success matched: [{'name': 'Taxi_Search_Location', 'arguments': {'query': 'Santorini International Airport'}}]
2025-08-25 12:33:35,753 - evaluation_logger_Cross-376 - INFO - Observations:
[
    {
        "status": true,
        "message": "Success",
        "data": [
            {
                "latitude": 36.4026,
                "longitude": 25.4733,
                "city": "Fira",
                "iata": "JTR",
                "name": "Santorini International Airport",
                "types": "airport",
                "countryCode": "gr",
                "googlePlaceId": "ChIJaQ8u6AHSmRQRyucy6DJUXlA",
                "country": "Greece"
            }
        ]
    }
]

2025-08-25 12:33:44,617 - evaluation_logger_Cross-376 - INFO - Function Calls: 
[
    {
        "name": "Taxi_Search_Location",
        "arguments": {
            "query": "Santorini Palace"
        }
    }
]

2025-08-25 12:33:44,618 - evaluation_logger_Cross-376 - INFO - Golden Function Call: 
[
    {
        "name": "Taxi_Search_Location",
        "arguments": {
            "query": "Santorini Palace"
        }
    },
    {
        "name": "Search_Attraction_Location",
        "arguments": {
            "query": "Red Beach"
        }
    },
    {
        "name": "Get_Availability",
        "arguments": {
            "slug": "prxmiart2uyb-shared-basic-sunset-trip-of-santorini-via-red-beach-white-beach"
        }
    },
    {
        "name": "Search_Taxi",
        "arguments": {
            "pick_up_place_id": "ChIJYzT1qc_NmRQRXqi-QoeTQno",
            "drop_off_place_id": "ChIJaQ8u6AHSmRQRyucy6DJUXlA",
            "pick_up_date": "2024-12-05",
            "pick_up_time": "22:30"
        }
    }
]

2025-08-25 12:33:44,618 - evaluation_logger_Cross-376 - INFO - Start compare_single_call: 
{'name': 'Taxi_Search_Location', 'arguments': {'query': 'Santorini Palace'}}
{'name': 'Taxi_Search_Location', 'arguments': {'query': 'Santorini Palace'}}
2025-08-25 12:33:44,618 - evaluation_logger_Cross-376 - INFO - Rule-based compare success.
2025-08-25 12:33:44,618 - evaluation_logger_Cross-376 - INFO - Success matched: [{'name': 'Taxi_Search_Location', 'arguments': {'query': 'Santorini Palace'}}]
2025-08-25 12:33:44,618 - evaluation_logger_Cross-376 - INFO - Observations:
[
    {
        "status": true,
        "message": "Success",
        "data": [
            {
                "countryCode": "gr",
                "latitude": 36.423622,
                "country": "Greece",
                "city": "Fira",
                "name": "Santorini Palace",
                "googlePlaceId": "ChIJYzT1qc_NmRQRXqi-QoeTQno",
                "types": "hotel",
                "longitude": 25.429155
            }
        ]
    }
]

2025-08-25 12:36:47,057 - evaluation_logger_Cross-376 - INFO - Final Response: <｜begin▁of▁sentence｜><｜fim▁begin｜>
Sistema-de-gestion-de-tareas


src/main/java/com/mycompany/sistemagestiondetareas/App.java


package com.mycompany.sistemagestiondetareas;

import java.util.Scanner;

public class App {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        SistemaGestionTareas sistema = new SistemaGestionTareas();
        boolean salir = false;

        while (!salir) {
            System.out.println("\n--- Sistema de Gestión de Tareas ---");
            System.out.println("1. Agregar tarea");
            System.out.println("2. Marcar tarea como completada");
            System.out.println("3. Eliminar tarea");
            System.out.println("4. Mostrar todas las tareas");
            System.out.println("5. Mostrar tareas pendientes");
            System.out.println("6. Mostrar tareas completadas");
            System.out.println("7. Salir");
            System.out.print("Seleccione una opción: ");

            int opcion = scanner.nextInt();
            scanner.nextLine(); // Consumir el salto de línea

            switch (opcion) {
                case 1:
                    System.out.print("Ingrese la descripción de la tarea: ");
                    String descripcion = scanner.nextLine();
                    sistema.agregarTarea(descripcion);
                    break;
                case 2:
                    System.out.print("Ingrese el ID de la tarea a marcar como completada: ");
                    int idCompletar = scanner.nextInt();
                    sistema.marcarComoCompletada(idCompletar);
                    break;
                case 3:
                    System.out.print("Ingrese el ID de la tarea a eliminar: ");
                    int idEliminar = scanner.nextInt();
                    sistema.eliminarTarea(idEliminar);
                    break;
                case 4:
                    sistema.mostrarTodasLasTareas();
                    break;
                case 5:
                    sistema.mostrarTareasPendientes();
                    break;
                case 6:
                    sistema.mostrarTareasCompletadas();
                    break;
                case 7:
                    salir = true;
                    System.out.println("Saliendo del sistema...");
                    break;
                default:
                    System.out.println("Opción no válida. Intente de nuevo.");
            }
        }

        scanner.close();
    }
}


src/main/java/com/mycompany/sistemagestiondetareas/Tarea.java


package com.mycompany.sistemagestiondetareas;

public class Tarea {
    private static int contadorId = 1;
    private int id;
    private String descripcion;
    private boolean completada;

    public Tarea(String descripcion) {
        this.id = contadorId++;
        this.descripcion = descripcion;
        this.completada = false;
    }

    public int getId() {
        return id;
    }

    public String getDescripcion() {
        return descripcion;
    }

    public boolean isCompletada() {
        return completada;
    }

    public void marcarComoCompletada() {
        this.completada = true;
    }

    @Override
    public String toString() {
        String estado = completada ? "Completada" : "Pendiente";
        return "ID: " + id + " | Descripción: " + descripcion + " | Estado: " + estado;
    }
}


README.md


# Sistema de Gestión de Tareas

Este es un sistema simple de gestión de tareas desarrollado en Java que permite a los usuarios agregar, completar, eliminar y visualizar tareas.

## Características

- **Agregar tareas**: Permite ingresar nuevas tareas con una descripción.
- **Marcar tareas como completadas**: Cambia el estado de una tarea a completada.
- **Eliminar tareas**: Remueve tareas del sistema.
- **Visualizar tareas**: Muestra todas las tareas, solo las pendientes o solo las completadas.
- **Interfaz de consola**: Interacción simple a través de menús en la terminal.

## Estructura del Proyecto

El proyecto está organizado en tres clases principales:

1. **Tarea**: Representa una tarea individual con id, descripción y estado.
2. **SistemaGestionTareas**: Contiene la lógica para gestionar la lista de tareas.
3. **App**: Clase principal que maneja la interacción con el usuario.

## Cómo Ejecutar

1. Asegúrate de tener Java instalado en tu sistema.
2. Clona o descarga el proyecto.
3. Navega hasta el directorio del proyecto.
4. Compila los archivos Java:
   ```bash
   javac -d bin src/main/java/com/mycompany/sistemagestiondetareas/*.java
   ```
5. Ejecuta la aplicación:
   ```bash
   java -cp bin com.mycompany.sistemagestiondetareas.App
   ```

## Uso

Al ejecutar la aplicación, se mostrará un menú con las siguientes opciones:

1. **Agregar tarea**: Solicita una descripción y agrega la tarea.
2. **Marcar tarea como completada**: Pide el ID de la tarea y la marca como completada.
3. **Eliminar tarea**: Pide el ID de la tarea y la elimina.
4. **Mostrar todas las tareas**: Muestra todas las tareas registradas.
5. **Mostrar tareas pendientes**: Muestra solo las tareas pendientes.
6. **Mostrar tareas completadas**: Muestra solo las tareas completadas.
7. **Salir**: Termina la aplicación.

## Ejemplo de Uso

```
--- Sistema de Gestión de Tareas ---
1. Agregar tarea
2. Marcar tarea como completada
3. Eliminar tarea
4. Mostrar todas las tareas
5. Mostrar tareas pendientes
6. Mostrar tareas completadas
7. Salir
Seleccione una opción: 1
Ingrese la descripción de la tarea: Estudiar para el examen
Tarea agregada con éxito.

--- Sistema de Gestión de Tareas ---
1. Agregar tarea
2. Marcar tarea como completada
3. Eliminar tarea
4. Mostrar todas las tareas
5. Mostrar tareas pendientes
6. Mostrar tareas completadas
7. Salir
Seleccione una opción: 4
Todas las tareas:
ID: 1 | Descripción: Estudiar para el examen | Estado: Pendiente
```

## Tecnologías Utilizadas

- Java SE
- Programación orientada a objetos
- Colecciones (ArrayList)

## Autor

Desarrollado como parte de un proyecto educativo para practicar conceptos de Java y gestión de tareas.


src/main/java/com/mycompany/sistemagestiondetareas/SistemaGestionTareas.java


package com.mycompany.sistemagestiondetareas;

import java.util.ArrayList;
import java.util.List;

public class SistemaGestionTareas {
    private List<Tarea> tareas;

    public SistemaGestionTareas() {
        this.tareas = new ArrayList<>();
    }

    public void agregarTarea(String descripcion) {
        Tarea nuevaTarea = new Tarea(descripcion);
        tareas.add(nuevaTarea);
        System.out.println("Tarea agregada con éxito.");
    }

    public void marcarComoCompletada(int id) {
        for (Tarea tarea : tareas) {
            if (tarea.getId() == id) {
                tarea.marcarComoCompletada();
                System.out.println("Tarea marcada como completada.");
                return;
            }
        }
        System.out.println("No se encontró una tarea con el ID: " + id);
    }

    public void eliminarTarea(int id) {
        Tarea tareaAEliminar = null;
        for (Tarea tarea : tareas) {
            if (tarea.getId() == id) {
                tareaAEliminar = tarea;
                break;
            }
        }
        if (tareaAEliminar != null) {
            tareas.remove(tareaAEliminar);
            System.out.println("Tarea eliminada con éxito.");
        } else {
            System.out.println("No se encontró una tarea con el ID: " + id);
        }
    }

    public void mostrarTodasLasTareas() {
        if (tareas.isEmpty()) {
            System.out.println("No hay tareas registradas.");
            return;
        }
        System.out.println("Todas las tareas:");
        for (Tarea tarea : tareas) {
            System.out.println(tarea);
        }
    }

    public void mostrarTareasPendientes() {
        boolean hayPendientes = false;
        System.out.println("Tareas pendientes:");
        for (Tarea tarea : tareas) {
            if (!tarea.isCompletada()) {
                System.out.println(tarea);
                hayPendientes = true;
            }
        }
        if (!hayPendientes) {
            System.out.println("No hay tareas pendientes.");
        }
    }

    public void mostrarTareasCompletadas() {
        boolean hayCompletadas = false;
        System.out.println("Tareas completadas:");
        for (Tarea tarea : tareas) {
            if (tarea.isCompletada()) {
                System.out.println(tarea);
                hayCompletadas = true;
            }
        }
        if (!hayCompletadas) {
            System.out.println("No hay tareas completadas.");
        }
    }
}

src/test/java/com/mycompany/sistemagestiondetareas/AppTest.java


package com.mycompany.sistemagestiondetareas;

import junit.framework.Test;
import junit.framework.TestCase;
import junit.framework.TestSuite;

/**
 * Unit test for simple App.
 */
public class AppTest 
    extends TestCase
{
    /**
     * Create the test case
     *
     * @param testName name of the test case
     */
    public AppTest( String testName )
    {
        super( testName );
    }

    /**
     * @return the suite of tests being tested
     */
    public static Test suite()
    {
        return new TestSuite( AppTest.class );
    }

    /**
     * Rigourous Test :-)
     */
    public void testApp()
    {
        assertTrue( true );
    }
}


pom.xml


<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.mycompany</groupId>
  <artifactId>SistemaGestionDeTareas</artifactId>
  <version>1.0-SNAPSHOT</version>
  <name>Archetype - SistemaGestionDeTareas</name>
  <url>http://maven.apache.org</url>
  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>8</source>
          <target>8</target>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>


src/test/java/com/mycompany/sistemagestiondetareas/SistemaGestionTareasTest.java


package com.mycompany.sistemagestiondetareas;

import static org.junit.Assert.*;
import org.junit.Before;
import org.junit.Test;

public class SistemaGestionTareasTest {
    private SistemaGestionTareas sistema;

    @Before
    public void setUp() {
        sistema = new SistemaGestionTareas();
    }

    @Test
    public void testAgregarTarea() {
        sistema.agregarTarea("Tarea de prueba");
        // Verificar que la tarea se agregó correctamente
        // Este test es básico ya que no tenemos métodos para obtener la lista directamente
        // Podemos verificar a través de los métodos de visualización
        sistema.mostrarTodasLasTareas(); // Esto debería mostrar la tarea agregada
    }

    @Test
    public void testMarcarComoCompletada() {
        sistema.agregarTarea("Tarea para completar");
        // Asumiendo que la primera tarea tiene ID 1
        sistema.marcarComoCompletada(1);
        sistema.mostrarTareasCompletadas(); // Debería mostrar la tarea completada
    }

    @Test
    public void testEliminarTarea() {
        sistema.agregarTarea("Tarea para eliminar");
        sistema.eliminarTarea(1);
        sistema.mostrarTodasLasTareas(); // No debería mostrar tareas
    }

    @Test
    public void testMostrarTareasPendientes() {
        sistema.agregarTarea("Tarea pendiente");
        sistema.mostrarTareasPendientes(); // Debería mostrar la tarea pendiente
    }
}


src/test/java/com/mycompany/sistemagestiondetareas/TareaTest.java


package com.mycompany.sistemagestiondetareas;

import static org.junit.Assert.*;
import org.junit.Before;
import org.junit.Test;

public class TareaTest {
    private Tarea tarea;

    @Before
    public void setUp() {
        tarea = new Tarea("Tarea de prueba");
    }

    @Test
    public void testCrearTarea() {
        assertNotNull(tarea);
        assertEquals("Tarea de prueba", tarea.getDescripcion());
        assertFalse(tarea.isCompletada());
    }

    @Test
    public void testMarcarComoCompletada() {
        tarea.marcarComoCompletada();
        assertTrue(tarea.isCompletada());
    }

    @Test
    public void testToString() {
        String resultado = tarea.toString();
        assertTrue(resultado.contains("ID:"));
        assertTrue(resultado.contains("Descripción: Tarea de prueba"));
        assertTrue(resultado.contains("Estado: Pendiente"));
    }

    @Test
    public void testIdsIncrementales() {
        Tarea tarea2 = new Tarea("Segunda tarea");
        Tarea tarea3 = new Tarea("Tercera tarea");
        
        // Verificar que los IDs son incrementales
        assertEquals(1, tarea.getId());
        assertEquals(2, tarea2.getId());
        assertEquals(3, tarea3.getId());
    }
}


.vscode/settings.json


{
    "java.configuration.updateBuildConfiguration": "interactive"
}

src/test/java/com/mycompany/sistemagestiondetareas/IntegrationTest.java


package com.mycompany.sistemagestiondetareas;

import static org.junit.Assert.*;
import org.junit.Before;
import org.junit.Test;

public class IntegrationTest {
    private SistemaGestionTareas sistema;

    @Before
    public void setUp() {
        sistema = new SistemaGestionTareas();
    }

    @Test
    public void testFlujoCompleto() {
        // Agregar múltiples tareas
        sistema.agregarTarea("Estudiar Java");
        sistema.agregarTarea("Hacer ejercicio");
        sistema.agregarTarea("Leer un libro");

        // Marcar una tarea como completada
        sistema.marcarComoCompletada(2); // Marcar "Hacer ejercicio" como completada

        // Eliminar una tarea
        sistema.eliminarTarea(3); // Eliminar "Leer un libro"

        // Verificar el estado final
        // Este test es más de integración y verifica que el sistema funciona correctamente
        // en conjunto
        sistema.mostrarTodasLasTareas(); // Debería mostrar 2 tareas: una pendiente y una completada
        sistema.mostrarTareasPendientes(); // Debería mostrar solo "Estudiar Java"
        sistema.mostrarTareasCompletadas(); // Debería mostrar solo "Hacer ejercicio"
    }

    @Test
    public void testManejoErrores() {
        // Intentar operaciones con IDs que no existen
        sistema.marcarComoCompletada(999); // Debería mostrar mensaje de error
        sistema.eliminarTarea(999); // Debería mostrar mensaje de error

        // Verificar que el sistema no se cae y maneja los errores adecuadamente
        sistema.mostrarTodasLasTareas(); // No debería mostrar tareas
    }
}

src/test/java/com/mycompany/sistemagestiondetareas/EdgeCasesTest.java


package com.mycompany.sistemagestiondetareas;

import static org.junit.Assert.*;
import org.junit.Before;
import org.junit.Test;

public class EdgeCasesTest {
    private SistemaGestionTareas sistema;

    @Before
    public void setUp() {
        sistema = new SistemaGestionTareas();
    }

    @Test
    public void testTareaConDescripcionVacia() {
        sistema.agregarTarea("");
        sistema.mostrarTodasLasTareas(); // Debería mostrar una tarea con descripción vacía
    }

    @Test
    public void testTareaConDescripcionLarga() {
        String descripcionLarga = "Esta es una tarea con una descripción muy larga que podría "
            + "exceder los límites normales pero debería ser manejada correctamente por el sistema";
        sistema.agregarTarea(descripcionLarga);
        sistema.mostrarTodasLasTareas(); // Debería mostrar la tarea con la descripción completa
    }

    @Test
    public void testMultiplesOperacionesMismaTarea() {
        sistema.agregarTarea("Tarea para múltiples operaciones");
        
        // Intentar marcar como completada múltiples veces
        sistema.marcarComoCompletada(1);
        sistema.marcarComoCompletada(1); // Segunda vez
        
        // Intentar eliminar una tarea ya eliminada
        sistema.eliminar

2025-08-25 12:36:47,057 - evaluation_logger_Cross-376 - INFO - turn id  = 5; len(golden_answer) = 5
2025-08-25 12:36:47,057 - evaluation_logger_Cross-376 - INFO - golden_function_calls = [{'name': 'Get_Availability', 'arguments': {'slug': 'prxmiart2uyb-shared-basic-sunset-trip-of-santorini-via-red-beach-white-beach'}}, {'name': 'Search_Taxi', 'arguments': {'drop_off_place_id': 'ChIJaQ8u6AHSmRQRyucy6DJUXlA', 'pick_up_date': '2024-12-05', 'pick_up_place_id': 'ChIJYzT1qc_NmRQRXqi-QoeTQno', 'pick_up_time': '22:30'}}]
2025-08-25 12:36:51,750 - evaluation_logger_Cross-376 - INFO - Complete Result: {'score': 0, 'reason': "The response does not address any part of the user's query about sightseeing routes or taxi reservation."}
2025-08-25 12:36:58,799 - evaluation_logger_Cross-376 - INFO - Correct Result: {'score': 0, 'reason': 'All information in the response is incorrect.'}
2025-08-25 12:36:58,799 - evaluation_logger_Cross-376 - INFO - Message: {'error_type': 'stop_early', 'content': 'Stop early.'}
2025-08-25 12:36:58,799 - evaluation_logger_Cross-376 - INFO - Success turn num = 3
2025-08-25 12:36:58,799 - evaluation_logger_Cross-376 - INFO - ----------------------------------------------------------------------------------------------------
