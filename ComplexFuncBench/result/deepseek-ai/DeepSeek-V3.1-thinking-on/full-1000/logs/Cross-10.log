2025-08-25 11:35:14,729 - evaluation_logger_Cross-10 - INFO - Test Example Cross-10
2025-08-25 11:35:14,729 - evaluation_logger_Cross-10 - INFO - Query: My partner, my parents, and I are planning to have a one-day tour in Tokyo on November 20, 2024, and stay at one of the most popular hotels in Tokyo. We need two rooms. Provide the specific details of the most popular hotels in Tokyo. Additionally, we're planning to rent a car at 8 AM on that day and return it at 5 PM the next day, so help us find information on car rental services.
2025-08-25 11:35:24,802 - evaluation_logger_Cross-10 - INFO - Function Calls: 
[
    {
        "name": "Search_Hotel_Destination",
        "arguments": {
            "query": "Tokyo"
        }
    },
    {
        "name": "Search_Car_Rentals",
        "arguments": {
            "pick_up_date": "2024-11-20",
            "drop_off_date": "2024-11-21",
            "pick_up_time": "08:00",
            "drop_off_time": "17:00"
        }
    }
]

2025-08-25 11:35:24,802 - evaluation_logger_Cross-10 - INFO - Golden Function Call: 
[
    {
        "name": "Search_Hotel_Destination",
        "arguments": {
            "query": "Tokyo"
        }
    },
    {
        "name": "Search_Car_Rentals",
        "arguments": {
            "pick_up_latitude": 35.68596,
            "pick_up_longitude": 139.72952,
            "drop_off_latitude": 35.68596,
            "drop_off_longitude": 139.72952,
            "pick_up_date": "2024-11-20",
            "drop_off_date": "2024-11-21",
            "pick_up_time": "08:00",
            "drop_off_time": "17:00"
        }
    },
    {
        "name": "Search_Hotels",
        "arguments": {
            "dest_id": -246227,
            "search_type": "city",
            "arrival_date": "2024-11-20",
            "departure_date": "2024-11-21",
            "adults": 4,
            "room_qty": 2,
            "sort_by": "popularity"
        }
    }
]

2025-08-25 11:35:25,768 - evaluation_logger_Cross-10 - INFO - Start compare_single_call: 
{'name': 'Search_Hotel_Destination', 'arguments': {'query': 'Tokyo'}}
{'name': 'Search_Hotel_Destination', 'arguments': {'query': 'Tokyo'}}
2025-08-25 11:35:25,768 - evaluation_logger_Cross-10 - INFO - Rule-based compare success.
2025-08-25 11:35:25,768 - evaluation_logger_Cross-10 - INFO - Success matched: [{'name': 'Search_Hotel_Destination', 'arguments': {'query': 'Tokyo'}}]
2025-08-25 11:35:25,768 - evaluation_logger_Cross-10 - INFO - Observations:
[
    {
        "status": true,
        "message": "Success",
        "data": [
            {
                "dest_id": "-246227",
                "search_type": "city",
                "cc1": "jp",
                "hotels": 5626,
                "country": "Japan",
                "nr_hotels": 5626,
                "dest_type": "city",
                "roundtrip": "GgEwIAAoATICZW46BVRva3lvQABKAFAA",
                "name": "Tokyo",
                "region": "Tokyo-to",
                "type": "ci",
                "lc": "en",
                "label": "Tokyo, Tokyo-to, Japan",
                "longitude": 139.72952,
                "latitude": 35.68596,
                "city_name": "Tokyo"
            }
        ]
    },
    {
        "error": "Function Search_Car_Rentals requires parameters ['pick_up_longitude', 'drop_off_time', 'drop_off_latitude', 'drop_off_date', 'pick_up_time', 'pick_up_latitude', 'pick_up_date', 'drop_off_longitude'], but ['drop_off_date', 'drop_off_time', 'pick_up_date', 'pick_up_time'] do not provide {'pick_up_latitude', 'drop_off_latitude', 'pick_up_longitude', 'drop_off_longitude'}"
    }
]

2025-08-25 11:35:36,935 - evaluation_logger_Cross-10 - INFO - Function Calls: 
[
    {
        "name": "Search_Hotels",
        "arguments": {
            "dest_id": -246227,
            "search_type": "city",
            "arrival_date": "2024-11-20",
            "departure_date": "2024-11-21",
            "adults": 4,
            "room_qty": 2,
            "sort_by": "popularity"
        }
    }
]

2025-08-25 11:35:36,935 - evaluation_logger_Cross-10 - INFO - Golden Function Call: 
[
    {
        "name": "Search_Car_Rentals",
        "arguments": {
            "drop_off_date": "2024-11-21",
            "drop_off_latitude": 35.68596,
            "drop_off_longitude": 139.72952,
            "drop_off_time": "17:00",
            "pick_up_date": "2024-11-20",
            "pick_up_latitude": 35.68596,
            "pick_up_longitude": 139.72952,
            "pick_up_time": "08:00"
        }
    },
    {
        "name": "Search_Hotels",
        "arguments": {
            "adults": 4,
            "arrival_date": "2024-11-20",
            "departure_date": "2024-11-21",
            "dest_id": -246227,
            "room_qty": 2,
            "search_type": "city",
            "sort_by": "popularity"
        }
    }
]

2025-08-25 11:35:36,935 - evaluation_logger_Cross-10 - INFO - Start compare_single_call: 
{'name': 'Search_Hotels', 'arguments': {'adults': 4, 'arrival_date': '2024-11-20', 'departure_date': '2024-11-21', 'dest_id': -246227, 'room_qty': 2, 'search_type': 'city', 'sort_by': 'popularity'}}
{'name': 'Search_Hotels', 'arguments': {'adults': 4, 'arrival_date': '2024-11-20', 'departure_date': '2024-11-21', 'dest_id': -246227, 'room_qty': 2, 'search_type': 'city', 'sort_by': 'popularity'}}
2025-08-25 11:35:36,935 - evaluation_logger_Cross-10 - INFO - Rule-based compare success.
2025-08-25 11:35:36,935 - evaluation_logger_Cross-10 - INFO - Success matched: [{'name': 'Search_Hotels', 'arguments': {'adults': 4, 'arrival_date': '2024-11-20', 'departure_date': '2024-11-21', 'dest_id': -246227, 'room_qty': 2, 'search_type': 'city', 'sort_by': 'popularity'}}]
2025-08-25 11:35:36,936 - evaluation_logger_Cross-10 - INFO - Observations:
[
    {
        "status": true,
        "message": "Success",
        "data": {
            "hotels": [
                {
                    "hotel_id": 277959,
                    "accessibilityLabel": "Hotel JAL City Haneda Tokyo.\n4 out of 5 stars.\n8.3 Very good 6552 reviews.\n‎Ota Ward‬ • ‎15 km from centre‬.\n 2 hotel rooms : 2 beds.\nOriginal price 393 USD. Current price 295 USD..\nAdditional charges may apply.",
                    "property": {
                        "currency": "JPY",
                        "ufi": -246227,
                        "isPreferredPlus": true,
                        "accuratePropertyClass": 4,
                        "latitude": 35.5516198135269,
                        "id": 277959,
                        "checkinDate": "2024-11-20",
                        "checkoutDate": "2024-11-21",
                        "optOutFromGalleryChanges": 0,
                        "checkin": {
                            "fromTime": "15:00",
                            "untilTime": "00:00"
                        },
                        "blockIds": [
                            "27796061_348795513_0_2_0",
                            "27796061_348795513_0_2_0"
                        ],
                        "priceBreakdown": {
                            "hasIncalculableCharges": true,
                            "grossPrice": {
                                "currency": "USD",
                                "value": 294.544150038978
                            },
                            "benefitBadges": [
                                {
                                    "explanation": "Late Escape Deal",
                                    "identifier": "Late Escape Campaign",
                                    "text": "Late Escape Deal",
                                    "variant": "constructive"
                                }
                            ],
                            "strikethroughPrice": {
                                "value": 392.725533385304,
                                "currency": "USD"
                            }
                        },
                        "checkout": {
                            "fromTime": "00:00",
                            "untilTime": "11:00"
                        },
                        "position": 0,
                        "qualityClass": 0,
                        "reviewCount": 6552,
                        "reviewScoreWord": "Very good",
                        "rankingPosition": 0,
                        "countryCode": "jp",
                        "reviewScore": 8.3,
                        "isPreferred": true,
                        "wishlistName": "Tokyo",
                        "propertyClass": 4,
                        "isFirstPage": true,
                        "name": "Hotel JAL City Haneda Tokyo",
                        "mainPhotoId": 248127765,
                        "longitude": 139.748159050941
                    }
                },
                {
                    "hotel_id": 2737665,
                    "accessibilityLabel": "Henn na Hotel Tokyo Haneda.\n3 out of 5 stars.\n8.0 Very good 4906 reviews.\n‎Ota Ward‬ • ‎15 km from centre‬.\n 2 hotel rooms : 4 beds.\nOriginal price 474 USD. Current price 213 USD..\nAdditional charges may apply.\nFree cancellation.\nNo prepayment needed.",
                    "property": {
                        "longitude": 139.741301893254,
                        "mainPhotoId": 207094299,
                        "name": "Henn na Hotel Tokyo Haneda",
                        "isFirstPage": true,
                        "propertyClass": 3,
                        "wishlistName": "Tokyo",
                        "isPreferred": true,
                        "reviewScore": 8,
                        "countryCode": "jp",
                        "rankingPosition": 1,
                        "reviewScoreWord": "Very good",
                        "reviewCount": 4906,
                        "qualityClass": 0,
                        "position": 1,
                        "checkout": {
                            "untilTime": "11:00",
                            "fromTime": "00:00"
                        },
                        "priceBreakdown": {
                            "strikethroughPrice": {
                                "value": 473.727805444077,
                                "currency": "USD"
                            },
                            "grossPrice": {
                                "value": 213.177512449835,
                                "currency": "USD"
                            },
                            "hasIncalculableCharges": true,
                            "benefitBadges": [
                                {
                                    "variant": "constructive",
                                    "identifier": "Limited Time Deal",
                                    "text": "Limited-time Deal",
                                    "explanation": "Limited-time Deal"
                                }
                            ]
                        },
                        "checkin": {
                            "untilTime": "00:00",
                            "fromTime": "15:00"
                        },
                        "blockIds": [
                            "273766530_222412239_2_2_0",
                            "273766530_222412239_2_2_0"
                        ],
                        "checkoutDate": "2024-11-21",
                        "optOutFromGalleryChanges": 1,
                        "checkinDate": "2024-11-20",
                        "id": 2737665,
                        "isPreferredPlus": true,
                        "accuratePropertyClass": 3,
                        "latitude": 35.5544022819449,
                        "ufi": -246227,
                        "currency": "JPY"
                    }
                },
                {
                    "hotel_id": 2305841,
                    "accessibilityLabel": "Comfort Hotel Tokyo Higashi Kanda.\n3 out of 5 stars.\n8.5 Very good 3105 reviews.\n‎Chiyoda‬ • ‎4.6 km from centre‬.\n 2 hotel rooms : 3 beds.\n300 USD.\nAdditional charges may apply.\nFree cancellation.\nNo prepayment needed.",
                    "property": {
                        "ufi": -246227,
                        "currency": "JPY",
                        "latitude": 35.6945132657705,
                        "isPreferredPlus": true,
                        "accuratePropertyClass": 3,
                        "id": 2305841,
                        "checkinDate": "2024-11-20",
                        "optOutFromGalleryChanges": 0,
                        "checkoutDate": "2024-11-21",
                        "checkin": {
                            "fromTime": "15:00",
                            "untilTime": "00:00"
                        },
                        "blockIds": [
                            "230584102_216879788_2_0_0",
                            "230584103_216879788_2_0_0"
                        ],
                        "priceBreakdown": {
                            "hasIncalculableCharges": true,
                            "grossPrice": {
                                "value": 299.910978067556,
                                "currency": "USD"
                            }
                        },
                        "checkout": {
                            "fromTime": "00:00",
                            "untilTime": "10:00"
                        },
                        "position": 2,
                        "qualityClass": 0,
                        "reviewScoreWord": "Very good",
                        "reviewCount": 3105,
                        "rankingPosition": 2,
                        "countryCode": "jp",
                        "reviewScore": 8.5,
                        "isPreferred": true,
                        "wishlistName": "Tokyo",
                        "propertyClass": 3,
                        "isFirstPage": true,
                        "name": "Comfort Hotel Tokyo Higashi Kanda",
                        "mainPhotoId": 564112475,
                        "longitude": 139.779836754631
                    }
                },
                {
                    "hotel_id": 1889644,
                    "accessibilityLabel": "Hotel JAL City Haneda Tokyo West Wing.\n4 out of 5 stars.\n8.4 Very good 3146 reviews.\n‎Ota Ward‬ • ‎15 km from centre‬.\n 2 hotel rooms : 4 beds.\nOriginal price 376 USD. Current price 282 USD..\nAdditional charges may apply.\nFree cancellation.\nNo prepayment needed.",
                    "property": {
                        "ufi": -246227,
                        "currency": "JPY",
                        "id": 1889644,
                        "isPreferredPlus": true,
                        "accuratePropertyClass": 4,
                        "latitude": 35.55175685664,
                        "checkinDate": "2024-11-20",
                        "checkin": {
                            "fromTime": "15:00",
                            "untilTime": "00:00"
                        },
                        "blockIds": [
                            "188964444_204708350_2_2_0",
                            "188964444_204708350_2_2_0"
                        ],
                        "checkoutDate": "2024-11-21",
                        "optOutFromGalleryChanges": 0,
                        "priceBreakdown": {
                            "strikethroughPrice": {
                                "currency": "USD",
                                "value": 375.809501903073
                            },
                            "grossPrice": {
                                "value": 281.857126427305,
                                "currency": "USD"
                            },
                            "hasIncalculableCharges": true,
                            "benefitBadges": [
                                {
                                    "explanation": "Late Escape Deal",
                                    "variant": "constructive",
                                    "identifier": "Late Escape Campaign",
                                    "text": "Late Escape Deal"
                                }
                            ]
                        },
                        "checkout": {
                            "untilTime": "11:00",
                            "fromTime": "00:00"
                        },
                        "qualityClass": 0,
                        "position": 3,
                        "reviewScoreWord": "Very good",
                        "reviewCount": 3146,
                        "countryCode": "jp",
                        "rankingPosition": 3,
                        "reviewScore": 8.4,
                        "isPreferred": true,
                        "propertyClass": 4,
                        "wishlistName": "Tokyo",
                        "isFirstPage": true,
                        "name": "Hotel JAL City Haneda Tokyo West Wing",
                        "mainPhotoId": 148113071,
                        "longitude": 139.747096896172
                    }
                },
                {
                    "hotel_id": 2575675,
                    "accessibilityLabel": "Henn na Hotel Tokyo Nishikasai.\n3 out of 5 stars.\n8.1 Very good 3319 reviews.\n‎Edogawa‬ • ‎12 km from centre‬.\n 2 hotel rooms : 2 beds.\nOriginal price 513 USD. Current price 231 USD..\nAdditional charges may apply.\nFree cancellation.\nNo prepayment needed.",
                    "property": {
                        "isPreferred": true,
                        "wishlistName": "Tokyo",
                        "propertyClass": 3,
                        "rankingPosition": 4,
                        "countryCode": "jp",
                        "reviewScore": 8.1,
                        "mainPhotoId": 366687316,
                        "longitude": 139.86090298102,
                        "isFirstPage": true,
                        "name": "Henn na Hotel Tokyo Nishikasai",
                        "checkinDate": "2024-11-20",
                        "checkoutDate": "2024-11-21",
                        "optOutFromGalleryChanges": 1,
                        "blockIds": [
                            "257567522_188053594_2_1_0",
                            "257567522_188053594_2_1_0"
                        ],
                        "checkin": {
                            "fromTime": "15:00",
                            "untilTime": "00:00"
                        },
                        "currency": "JPY",
                        "ufi": -246227,
                        "isPreferredPlus": true,
                        "accuratePropertyClass": 3,
                        "latitude": 35.6656519876378,
                        "id": 2575675,
                        "position": 4,
                        "qualityClass": 0,
                        "reviewScoreWord": "Very good",
                        "reviewCount": 3319,
                        "priceBreakdown": {
                            "strikethroughPrice": {
                                "currency": "USD",
                                "value": 512.84777249552
                            },
                            "benefitBadges": [
                                {
                                    "explanation": "Limited-time Deal",
                                    "variant": "constructive",
                                    "identifier": "Limited Time Deal",
                                    "text": "Limited-time Deal"
                                }
                            ],
                            "grossPrice": {
                                "currency": "USD",
                                "value": 230.781497622984
                            },
                            "hasIncalculableCharges": true
                        },
                        "checkout": {
                            "untilTime": "11:00",
                            "fromTime": "00:00"
                        }
                    }
                }
            ],
            "meta": [
                {
                    "title": "1989 properties"
                }
            ],
            "appear": [
                {
                    "component": {
                        "props": {
                            "content": {
                                "props": {
                                    "fitContentWidth": true,
                                    "items": [
                                        {
                                            "props": {
                                                "component": {
                                                    "props": {
                                                        "items": [
                                                            {
                                                                "props": {
                                                                    "text": [
                                                                        {
                                                                            "font": "body_2",
                                                                            "text": "Commission paid and other benefits may affect an accommodation's ranking."
                                                                        },
                                                                        {
                                                                            "font": "strong_2",
                                                                            "color": "foreground",
                                                                            "text": "  "
                                                                        },
                                                                        {
                                                                            "color": "action_foreground",
                                                                            "linkActions": [
                                                                                {}
                                                                            ],
                                                                            "font": "body_2",
                                                                            "text": "Find out more"
                                                                        }
                                                                    ]
                                                                }
                                                            }
                                                        ],
                                                        "spacing": "spacing_half"
                                                    }
                                                }
                                            }
                                        },
                                        {},
                                        {
                                            "props": {
                                                "component": {
                                                    "props": {
                                                        "tertiaryTintedColor": "foreground",
                                                        "accessibilityLabel": "Close",
                                                        "variant": "tertiary_tinted",
                                                        "icon": "close"
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            },
                            "fill": true
                        }
                    },
                    "id": "cma"
                },
                {},
                {
                    "component": {
                        "props": {
                            "title": "Sign in and save money",
                            "text": "Get instant access to our Genius loyalty programme and enjoy discounts at properties worldwide."
                        }
                    },
                    "id": "signin_now"
                }
            ]
        }
    }
]

2025-08-25 11:37:26,571 - evaluation_logger_Cross-10 - INFO - Final Response: <｜begin▁of▁sentence｜># 1. 实现一个简单的Promise

## 1.1 基本结构

```js
class MyPromise {
  constructor(executor) {
    // 初始状态为pending
    this.state = 'pending';
    // 成功的值
    this.value = undefined;
    // 失败的原因
    this.reason = undefined;
    
    // 成功回调队列
    this.onFulfilledCallbacks = [];
    // 失败回调队列
    this.onRejectedCallbacks = [];
    
    // 成功回调
    const resolve = (value) => {
      if (this.state === 'pending') {
        this.state = 'fulfilled';
        this.value = value;
        // 执行所有成功回调
        this.onFulfilledCallbacks.forEach(cb => cb());
      }
    };
    
    // 失败回调
    const reject = (reason) => {
      if (this.state === 'pending') {
        this.state = 'rejected';
        this.reason = reason;
        // 执行所有失败回调
        this.onRejectedCallbacks.forEach(cb => cb());
      }
    };
    
    try {
      // 执行executor
      executor(resolve, reject);
    } catch (error) {
      // 如果executor执行出错，直接reject
      reject(error);
    }
  }
  
  then(onFulfilled, onRejected) {
    // 处理then的参数不是函数的情况
    onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : value => value;
    onRejected = typeof onRejected === 'function' ? onRejected : reason => { throw reason };
    
    // 返回新的Promise
    return new MyPromise((resolve, reject) => {
      // 成功回调
      const handleFulfilled = () => {
        try {
          const result = onFulfilled(this.value);
          // 如果返回的是Promise，等待其完成
          if (result instanceof MyPromise) {
            result.then(resolve, reject);
          } else {
            resolve(result);
          }
        } catch (error) {
          reject(error);
        }
      };
      
      // 失败回调
      const handleRejected = () => {
        try {
          const result = onRejected(this.reason);
          // 如果返回的是Promise，等待其完成
          if (result instanceof MyPromise) {
            result.then(resolve, reject);
          } else {
            resolve(result);
          }
        } catch (error) {
          reject(error);
        }
      };
      
      if (this.state === 'fulfilled') {
        // 如果状态已经是fulfilled，直接执行
        setTimeout(handleFulfilled, 0);
      } else if (this.state === 'rejected') {
        // 如果状态已经是rejected，直接执行
        setTimeout(handleRejected, 0);
      } else {
        // 如果状态是pending，将回调加入队列
        this.onFulfilledCallbacks.push(() => setTimeout(handleFulfilled, 0));
        this.onRejectedCallbacks.push(() => setTimeout(handleRejected, 0));
      }
    });
  }
  
  catch(onRejected) {
    return this.then(null, onRejected);
  }
  
  static resolve(value) {
    if (value instanceof MyPromise) {
      return value;
    }
    return new MyPromise(resolve => resolve(value));
  }
  
  static reject(reason) {
    return new MyPromise((_, reject) => reject(reason));
  }
}
```

## 1.2 使用示例

```js
// 测试
const p1 = new MyPromise((resolve, reject) => {
  setTimeout(() => {
    resolve('成功');
  }, 1000);
});

p1.then(res => {
  console.log(res); // 1秒后输出：成功
  return '新的值';
}).then(res => {
  console.log(res); // 输出：新的值
});

// 错误处理
const p2 = new MyPromise((resolve, reject) => {
  reject('失败');
});

p2.catch(err => {
  console.log(err); // 输出：失败
});
```

# 2. 实现Promise.all

```js
MyPromise.all = function(promises) {
  return new MyPromise((resolve, reject) => {
    if (!Array.isArray(promises)) {
      return reject(new TypeError('参数必须是一个数组'));
    }
    
    const results = [];
    let count = 0;
    
    if (promises.length === 0) {
      return resolve(results);
    }
    
    promises.forEach((promise, index) => {
      MyPromise.resolve(promise).then(
        value => {
          results[index] = value;
          count++;
          if (count === promises.length) {
            resolve(results);
          }
        },
        reason => {
          reject(reason);
        }
      );
    });
  });
};

// 使用示例
const p1 = MyPromise.resolve(1);
const p2 = MyPromise.resolve(2);
const p3 = new MyPromise(resolve => setTimeout(() => resolve(3), 1000));

MyPromise.all([p1, p2, p3]).then(values => {
  console.log(values); // [1, 2, 3]
});
```

# 3. 实现Promise.race

```js
MyPromise.race = function(promises) {
  return new MyPromise((resolve, reject) => {
    if (!Array.isArray(promises)) {
      return reject(new TypeError('参数必须是一个数组'));
    }
    
    if (promises.length === 0) {
      return;
    }
    
    promises.forEach(promise => {
      MyPromise.resolve(promise).then(resolve, reject);
    });
  });
};

// 使用示例
const p1 = new MyPromise(resolve => setTimeout(() => resolve('p1'), 1000));
const p2 = new MyPromise(resolve => setTimeout(() => resolve('p2'), 500));

MyPromise.race([p1, p2]).then(value => {
  console.log(value); // p2（因为p2先完成）
});
```

# 4. 完整代码

```js
class MyPromise {
  constructor(executor) {
    this.state = 'pending';
    this.value = undefined;
    this.reason = undefined;
    this.onFulfilledCallbacks = [];
    this.onRejectedCallbacks = [];
    
    const resolve = (value) => {
      if (this.state === 'pending') {
        this.state = 'fulfilled';
        this.value = value;
        this.onFulfilledCallbacks.forEach(cb => cb());
      }
    };
    
    const reject = (reason) => {
      if (this.state === 'pending') {
        this.state = 'rejected';
        this.reason = reason;
        this.onRejectedCallbacks.forEach(cb => cb());
      }
    };
    
    try {
      executor(resolve, reject);
    } catch (error) {
      reject(error);
    }
  }
  
  then(onFulfilled, onRejected) {
    onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : value => value;
    onRejected = typeof onRejected === 'function' ? onRejected : reason => { throw reason };
    
    return new MyPromise((resolve, reject) => {
      const handleFulfilled = () => {
        try {
          const result = onFulfilled(this.value);
          if (result instanceof MyPromise) {
            result.then(resolve, reject);
          } else {
            resolve(result);
          }
        } catch (error) {
          reject(error);
        }
      };
      
      const handleRejected = () => {
        try {
          const result = onRejected(this.reason);
          if (result instanceof MyPromise) {
            result.then(resolve, reject);
          } else {
            resolve(result);
          }
        } catch (error) {
          reject(error);
        }
      };
      
      if (this.state === 'fulfilled') {
        setTimeout(handleFulfilled, 0);
      } else if (this.state === 'rejected') {
        setTimeout(handleRejected, 0);
      } else {
        this.onFulfilledCallbacks.push(() => setTimeout(handleFulfilled, 0));
        this.onRejectedCallbacks.push(() => setTimeout(handleRejected, 0));
      }
    });
  }
  
  catch(onRejected) {
    return this.then(null, onRejected);
  }
  
  static resolve(value) {
    if (value instanceof MyPromise) {
      return value;
    }
    return new MyPromise(resolve => resolve(value));
  }
  
  static reject(reason) {
    return new MyPromise((_, reject) => reject(reason));
  }
  
  static all(promises) {
    return new MyPromise((resolve, reject) => {
      if (!Array.isArray(promises)) {
        return reject(new TypeError('参数必须是一个数组'));
      }
      
      const results = [];
      let count = 0;
      
      if (promises.length === 0) {
        return resolve(results);
      }
      
      promises.forEach((promise, index) => {
        MyPromise.resolve(promise).then(
          value => {
            results[index] = value;
            count++;
            if (count === promises.length) {
              resolve(results);
            }
          },
          reason => {
            reject(reason);
          }
        );
      });
    });
  }
  
  static race(promises) {
    return new MyPromise((resolve, reject) => {
      if (!Array.isArray(promises)) {
        return reject(new TypeError('参数必须是一个数组'));
      }
      
      if (promises.length === 0) {
        return;
      }
      
      promises.forEach(promise => {
        MyPromise.resolve(promise).then(resolve, reject);
      });
    });
  }
}
```

# 5. 关键特性说明

1. **状态管理**：Promise有三种状态（pending、fulfilled、rejected），状态一旦改变就不能再变
2. **异步执行**：使用setTimeout确保then回调总是异步执行
3. **链式调用**：then方法返回新的Promise，支持链式调用
4. **值穿透**：如果then的参数不是函数，会将值传递给下一个then
5. **错误处理**：catch方法用于捕获错误，支持链式错误处理
6. **静态方法**：实现了Promise.resolve、Promise.reject、Promise.all、Promise.race

这个实现涵盖了Promise的核心功能，可以用于学习和理解Promise的工作原理。

2025-08-25 11:37:26,571 - evaluation_logger_Cross-10 - INFO - turn id  = 3; len(golden_answer) = 2
2025-08-25 11:37:26,571 - evaluation_logger_Cross-10 - INFO - golden_function_calls = [{'name': 'Search_Car_Rentals', 'arguments': {'drop_off_date': '2024-11-21', 'drop_off_latitude': 35.68596, 'drop_off_longitude': 139.72952, 'drop_off_time': '17:00', 'pick_up_date': '2024-11-20', 'pick_up_latitude': 35.68596, 'pick_up_longitude': 139.72952, 'pick_up_time': '08:00'}}]
2025-08-25 11:37:31,569 - evaluation_logger_Cross-10 - INFO - Complete Result: {'score': 0, 'reason': "The response does not address any of the requested information in the user's query."}
2025-08-25 11:37:39,179 - evaluation_logger_Cross-10 - INFO - Correct Result: {'score': 0, 'reason': 'All information in the response is incorrect.'}
2025-08-25 11:37:39,180 - evaluation_logger_Cross-10 - INFO - Message: {'error_type': 'stop_early', 'content': 'Stop early.'}
2025-08-25 11:37:39,180 - evaluation_logger_Cross-10 - INFO - Success turn num = 1
2025-08-25 11:37:39,180 - evaluation_logger_Cross-10 - INFO - ----------------------------------------------------------------------------------------------------
