2025-08-25 12:40:23,979 - evaluation_logger_Hotels-26 - INFO - Test Example Hotels-26
2025-08-25 12:40:23,979 - evaluation_logger_Hotels-26 - INFO - Query: I'm planning to stay at the Hyatt Place Ottawa West from December 5, 2024 to December 10, 2024. I want to know the user reviews for the hotel.
2025-08-25 12:40:32,164 - evaluation_logger_Hotels-26 - INFO - Function Calls: 
[
    {
        "name": "Search_Hotel_Destination",
        "arguments": {
            "query": "Hyatt Place Ottawa West"
        }
    }
]

2025-08-25 12:40:32,164 - evaluation_logger_Hotels-26 - INFO - Golden Function Call: 
[
    {
        "name": "Search_Hotel_Destination",
        "arguments": {
            "query": "Hyatt Place Ottawa West"
        }
    },
    {
        "name": "Search_Hotels",
        "arguments": {
            "dest_id": 6965991,
            "search_type": "hotel",
            "arrival_date": "2024-12-05",
            "departure_date": "2024-12-10"
        }
    }
]

2025-08-25 12:40:32,164 - evaluation_logger_Hotels-26 - INFO - Start compare_single_call: 
{'name': 'Search_Hotel_Destination', 'arguments': {'query': 'Hyatt Place Ottawa West'}}
{'name': 'Search_Hotel_Destination', 'arguments': {'query': 'Hyatt Place Ottawa West'}}
2025-08-25 12:40:32,164 - evaluation_logger_Hotels-26 - INFO - Rule-based compare success.
2025-08-25 12:40:32,164 - evaluation_logger_Hotels-26 - INFO - Success matched: [{'name': 'Search_Hotel_Destination', 'arguments': {'query': 'Hyatt Place Ottawa West'}}]
2025-08-25 12:40:32,164 - evaluation_logger_Hotels-26 - INFO - Observations:
[
    {
        "status": true,
        "message": "Success",
        "data": [
            {
                "dest_id": "6965991",
                "search_type": "hotel",
                "hotels": 1,
                "region": "Ontario",
                "latitude": 45.32559,
                "label": "Hyatt Place Ottawa West, Ottawa, Ontario, Canada",
                "longitude": -75.83607,
                "lc": "en",
                "city_ufi": -570760,
                "nr_hotels": 1,
                "name": "Hyatt Place Ottawa West",
                "dest_type": "hotel",
                "city_name": "Ottawa",
                "country": "Canada",
                "cc1": "ca",
                "roundtrip": "GgEwIAAoATICZW46F0h5YXR0IFBsYWNlIE90dGF3YSBXZXN0QABKAFAA",
                "type": "ho"
            }
        ]
    }
]

2025-08-25 12:40:43,224 - evaluation_logger_Hotels-26 - INFO - Function Calls: 
[
    {
        "name": "Search_Hotels",
        "arguments": {
            "dest_id": 6965991,
            "search_type": "hotel",
            "arrival_date": "2024-12-05",
            "departure_date": "2024-12-10"
        }
    }
]

2025-08-25 12:40:43,224 - evaluation_logger_Hotels-26 - INFO - Golden Function Call: 
[
    {
        "name": "Search_Hotels",
        "arguments": {
            "arrival_date": "2024-12-05",
            "departure_date": "2024-12-10",
            "dest_id": 6965991,
            "search_type": "hotel"
        }
    },
    {
        "name": "Get_Hotel_Reviews(Tips)",
        "arguments": {
            "hotel_id": "6965991"
        }
    }
]

2025-08-25 12:40:43,224 - evaluation_logger_Hotels-26 - INFO - Start compare_single_call: 
{'name': 'Search_Hotels', 'arguments': {'arrival_date': '2024-12-05', 'departure_date': '2024-12-10', 'dest_id': 6965991, 'search_type': 'hotel'}}
{'name': 'Search_Hotels', 'arguments': {'arrival_date': '2024-12-05', 'departure_date': '2024-12-10', 'dest_id': 6965991, 'search_type': 'hotel'}}
2025-08-25 12:40:43,224 - evaluation_logger_Hotels-26 - INFO - Rule-based compare success.
2025-08-25 12:40:43,224 - evaluation_logger_Hotels-26 - INFO - Success matched: [{'name': 'Search_Hotels', 'arguments': {'arrival_date': '2024-12-05', 'departure_date': '2024-12-10', 'dest_id': 6965991, 'search_type': 'hotel'}}]
2025-08-25 12:40:43,224 - evaluation_logger_Hotels-26 - INFO - Observations:
[
    {
        "status": true,
        "message": "Success",
        "data": {
            "hotels": [
                {
                    "hotel_id": 6965991,
                    "accessibilityLabel": "Hyatt Place Ottawa West.\n3 out of 5 stars.\n8.5 Very good 1802 reviews.\n‎15 km from centre‬.\n Hotel room : 2 beds.\n760 USD.\nIncludes taxes and charges.",
                    "property": {
                        "latitude": 45.32559,
                        "name": "Hyatt Place Ottawa West",
                        "blockIds": [
                            "696599101_287466141_2_1_0"
                        ],
                        "ufi": -570760,
                        "priceBreakdown": {
                            "grossPrice": {
                                "currency": "USD",
                                "value": 759.772547564792
                            }
                        },
                        "wishlistName": "Ottawa",
                        "optOutFromGalleryChanges": 0,
                        "position": 0,
                        "id": 6965991,
                        "countryCode": "ca",
                        "rankingPosition": 0,
                        "isPreferred": true,
                        "checkin": {
                            "fromTime": "15:00",
                            "untilTime": "00:00"
                        },
                        "mainPhotoId": 318399306,
                        "qualityClass": 0,
                        "checkinDate": "2024-12-05",
                        "isHighlightedHotel": true,
                        "reviewScoreWord": "Very good",
                        "propertyClass": 3,
                        "longitude": -75.83607,
                        "accuratePropertyClass": 3,
                        "checkoutDate": "2024-12-10",
                        "reviewScore": 8.5,
                        "currency": "CAD",
                        "checkout": {
                            "fromTime": "00:00",
                            "untilTime": "12:00"
                        },
                        "isFirstPage": true,
                        "reviewCount": 1802
                    }
                }
            ],
            "meta": [
                {
                    "title": "113 properties"
                }
            ],
            "appear": [
                {
                    "component": {
                        "props": {
                            "content": {
                                "props": {
                                    "fitContentWidth": true,
                                    "items": [
                                        {
                                            "props": {
                                                "component": {
                                                    "props": {
                                                        "spacing": "spacing_half",
                                                        "items": [
                                                            {
                                                                "props": {
                                                                    "text": [
                                                                        {
                                                                            "font": "body_2",
                                                                            "text": "Commission paid and other benefits may affect an accommodation's ranking."
                                                                        },
                                                                        {
                                                                            "font": "strong_2",
                                                                            "text": "  ",
                                                                            "color": "foreground"
                                                                        },
                                                                        {
                                                                            "linkActions": [
                                                                                {}
                                                                            ],
                                                                            "color": "action_foreground",
                                                                            "text": "Find out more",
                                                                            "font": "body_2"
                                                                        }
                                                                    ]
                                                                }
                                                            }
                                                        ]
                                                    }
                                                }
                                            }
                                        },
                                        {},
                                        {
                                            "props": {
                                                "component": {
                                                    "props": {
                                                        "icon": "close",
                                                        "accessibilityLabel": "Close",
                                                        "variant": "tertiary_tinted",
                                                        "tertiaryTintedColor": "foreground"
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            },
                            "fill": true
                        }
                    },
                    "id": "cma"
                },
                {},
                {
                    "component": {
                        "props": {
                            "title": "Sign in and save money",
                            "text": "Get instant access to our Genius loyalty programme and enjoy discounts at properties worldwide."
                        }
                    },
                    "id": "signin_now"
                },
                {
                    "component": {
                        "props": {
                            "text": "Properties with these icons have been awarded Booking.com's quality rating for homes"
                        }
                    },
                    "id": "banner_qualityrating"
                }
            ]
        }
    }
]

2025-08-25 12:40:51,105 - evaluation_logger_Hotels-26 - INFO - Function Calls: 
[
    {
        "name": "Get_Hotel_Reviews(Tips)",
        "arguments": {
            "hotel_id": "6965991"
        }
    }
]

2025-08-25 12:40:51,106 - evaluation_logger_Hotels-26 - INFO - Golden Function Call: 
[
    {
        "name": "Get_Hotel_Reviews(Tips)",
        "arguments": {
            "hotel_id": "6965991"
        }
    }
]

2025-08-25 12:40:51,106 - evaluation_logger_Hotels-26 - INFO - Start compare_single_call: 
{'name': 'Get_Hotel_Reviews(Tips)', 'arguments': {'hotel_id': '6965991'}}
{'name': 'Get_Hotel_Reviews(Tips)', 'arguments': {'hotel_id': '6965991'}}
2025-08-25 12:40:51,106 - evaluation_logger_Hotels-26 - INFO - Rule-based compare success.
2025-08-25 12:40:51,106 - evaluation_logger_Hotels-26 - INFO - Success matched: [{'name': 'Get_Hotel_Reviews(Tips)', 'arguments': {'hotel_id': '6965991'}}]
2025-08-25 12:40:51,106 - evaluation_logger_Hotels-26 - INFO - Observations:
[
    {
        "status": true,
        "message": "Success",
        "data": {
            "result": [
                {
                    "is_incentivised": 0,
                    "date": "2024-10-16 01:36:09",
                    "cons": "Nothing.",
                    "reviewng": 1,
                    "hotel_id": 6965991,
                    "travel_purpose": "leisure",
                    "average_score": 4,
                    "review_hash": "33653ecb4b16095a",
                    "languagecode": "en-us",
                    "helpful_vote_count": 0,
                    "is_moderated": 0,
                    "review_id": 5094435367,
                    "pros": "All of them.",
                    "stayed_room_info": {
                        "room_name": "Queen Room with Two Queen Beds and Sofa Bed",
                        "checkout": "2024-10-06",
                        "num_nights": 1,
                        "checkin": "2024-10-05",
                        "room_id": 696599102
                    },
                    "countrycode": "ca",
                    "title": "Comfortable stay.",
                    "hotelier_response_date": 1729274508,
                    "author": {
                        "helpful_vote_count": 0,
                        "nr_reviews": 0,
                        "type_string": "Group of friends",
                        "countrycode": "ca",
                        "user_id": 206756230,
                        "type": "review_category_group_of_friends",
                        "name": "Daeyeong"
                    },
                    "no_user_title": 0,
                    "hotelier_response": "Thank you for your wonderful review. We hope to welcome you back again soon!"
                },
                {
                    "travel_purpose": "leisure",
                    "hotel_id": 6965991,
                    "helpful_vote_count": 0,
                    "average_score": 4,
                    "reviewer_photos": [
                        {
                            "1280_900": "https://cf.bstatic.com/xdata/images/xphoto/max1280x900/399052961.jpg?k=d6529dcc1e14a99a56743a5ae1825f08025a3b2fda3c1f775dee541276697a36&o=",
                            "500_500": "https://cf.bstatic.com/xdata/images/xphoto/max500_ao/399052961.jpg?k=d6529dcc1e14a99a56743a5ae1825f08025a3b2fda3c1f775dee541276697a36&o=",
                            "90_90": "https://cf.bstatic.com/xdata/images/xphoto/square90/399052961.jpg?k=d6529dcc1e14a99a56743a5ae1825f08025a3b2fda3c1f775dee541276697a36&o=",
                            "60_60": "https://cf.bstatic.com/xdata/images/xphoto/square60_ao/399052961.jpg?k=d6529dcc1e14a99a56743a5ae1825f08025a3b2fda3c1f775dee541276697a36&o="
                        },
                        {
                            "60_60": "https://cf.bstatic.com/xdata/images/xphoto/square60_ao/399053084.jpg?k=545f4e31850d8d40dbe07b5fbb0a665b881595efcde7a017d0c047124c8be6af&o=",
                            "90_90": "https://cf.bstatic.com/xdata/images/xphoto/square90/399053084.jpg?k=545f4e31850d8d40dbe07b5fbb0a665b881595efcde7a017d0c047124c8be6af&o=",
                            "1280_900": "https://cf.bstatic.com/xdata/images/xphoto/max1280x900/399053084.jpg?k=545f4e31850d8d40dbe07b5fbb0a665b881595efcde7a017d0c047124c8be6af&o=",
                            "500_500": "https://cf.bstatic.com/xdata/images/xphoto/max500_ao/399053084.jpg?k=545f4e31850d8d40dbe07b5fbb0a665b881595efcde7a017d0c047124c8be6af&o="
                        },
                        {
                            "60_60": "https://cf.bstatic.com/xdata/images/xphoto/square60_ao/399053178.jpg?k=3d746fab10cf13a4cad5b720f47167a0b69a4750d64df64f2b0eddff36744210&o=",
                            "90_90": "https://cf.bstatic.com/xdata/images/xphoto/square90/399053178.jpg?k=3d746fab10cf13a4cad5b720f47167a0b69a4750d64df64f2b0eddff36744210&o=",
                            "500_500": "https://cf.bstatic.com/xdata/images/xphoto/max500_ao/399053178.jpg?k=3d746fab10cf13a4cad5b720f47167a0b69a4750d64df64f2b0eddff36744210&o=",
                            "1280_900": "https://cf.bstatic.com/xdata/images/xphoto/max1280x900/399053178.jpg?k=3d746fab10cf13a4cad5b720f47167a0b69a4750d64df64f2b0eddff36744210&o="
                        }
                    ],
                    "languagecode": "en-gb",
                    "review_hash": "33dd5066f56b446f",
                    "is_incentivised": 0,
                    "date": "2024-10-15 14:15:25",
                    "reviewng": 1,
                    "cons": "Not much to say here.- just very minor things like water temperature being cold in the pool. There were noisy people at the pool but that's not the hotel's issue (it'd be mannerless patents' issue). Water didn't drain well in our room's washroom and you need own toiletries like lotion but other than, the stay was great overall.",
                    "no_user_title": 0,
                    "hotelier_response": "Dear Helen,\n\nThank you so much for your review and your kind words! We are so happy you enjoyed your stay!\nPlease know that your feedback is extremely valuable to us and we will utilize your response to make every guest experience the best it can be.\nIf I can be of any assistance to you, please contact me directly. We look forward to being of service to you in the near future. \n\nKind Regards,\n\nJeremy Shaw\nGallery Host Manager",
                    "stayed_room_info": {
                        "checkin": "2024-10-13",
                        "room_id": 696599102,
                        "num_nights": 1,
                        "checkout": "2024-10-14",
                        "room_name": "Queen Room with Two Queen Beds and Sofa Bed"
                    },
                    "pros": "Virtually everything - the room was exceptionally clean, spacious and well set up. Facilities were also good sized, clean and well maintained. Check In was great - friendly and fast (thank you, J). Check out was also quick. Breakfast was plentiful with a good variety and hardworking staff on site. Parking was easy and free.. Would highly recommend and would return to stay myself.",
                    "is_moderated": 0,
                    "review_id": 5094260044,
                    "hotelier_response_date": 1729011711,
                    "title": "Excellent stay in Ottawa - clean, spacious, and great service!",
                    "author": {
                        "name": "Helen",
                        "type": "family_with_children",
                        "user_id": 108174859,
                        "countrycode": "ca",
                        "type_string": "Family",
                        "helpful_vote_count": 0,
                        "nr_reviews": 0
                    },
                    "countrycode": "ca"
                },
                {
                    "no_user_title": 0,
                    "hotelier_response": "Thank you for your review!",
                    "pros": "Cleanliness and the breakfast",
                    "stayed_room_info": {
                        "room_name": "Queen Room with Two Queen Beds and Sofa Bed",
                        "checkout": "2024-10-13",
                        "num_nights": 1,
                        "checkin": "2024-10-12",
                        "room_id": 696599102
                    },
                    "is_moderated": 0,
                    "review_id": 5093620027,
                    "hotelier_response_date": 1728918722,
                    "title": "A good stay overall.",
                    "author": {
                        "nr_reviews": 0,
                        "helpful_vote_count": 0,
                        "type_string": "Family",
                        "countrycode": "ca",
                        "user_id": 38498387,
                        "type": "family_with_children",
                        "name": "Chandrasen"
                    },
                    "countrycode": "ca",
                    "hotel_id": 6965991,
                    "travel_purpose": "leisure",
                    "helpful_vote_count": 0,
                    "average_score": 3.20000004768372,
                    "languagecode": "en-us",
                    "review_hash": "baa6d34d3c29c676",
                    "is_incentivised": 0,
                    "date": "2024-10-14 03:05:09",
                    "reviewng": 1,
                    "cons": "The pool was not accessible and our request for close proximity of two room was not entertained after a confirmation!"
                },
                {
                    "is_moderated": 0,
                    "review_id": 5092272690,
                    "pros": "Free upgrade",
                    "stayed_room_info": {
                        "room_name": "King Room with Sofa Bed",
                        "checkin": "2024-10-01",
                        "room_id": 696599101,
                        "num_nights": 1,
                        "checkout": "2024-10-02"
                    },
                    "countrycode": "ca",
                    "title": "Pleasant",
                    "hotelier_response_date": 1728581582,
                    "author": {
                        "name": "Mohamad",
                        "type": "couple",
                        "countrycode": "ca",
                        "type_string": "Couple",
                        "user_id": 0,
                        "nr_reviews": 0,
                        "helpful_vote_count": 0
                    },
                    "no_user_title": 1,
                    "hotelier_response": "Thank you for leaving your review regarding your recent stay at our hotel. I am sorry to hear that you felt that our hotel was not in an ideal location. I hope that you enjoyed our amenities and the rest of your stay was enjoyable.\nIf I can be of any assistance to you, please contact me directly. \nBest regards,\nJeremy Shaw\nGallery Host Manager\nHyatt Place Ottawa West",
                    "is_incentivised": 0,
                    "date": "2024-10-10 03:40:24",
                    "cons": "Too far from center of Ottawa",
                    "reviewng": 1,
                    "hotel_id": 6965991,
                    "travel_purpose": "leisure",
                    "average_score": 2.79999995231628,
                    "review_hash": "f1acf6f95623a981",
                    "languagecode": "en-gb",
                    "helpful_vote_count": 0
                },
                {
                    "countrycode": "ca",
                    "author": {
                        "type": "couple",
                        "name": "Luis",
                        "helpful_vote_count": 0,
                        "nr_reviews": 0,
                        "type_string": "Couple",
                        "countrycode": "ca",
                        "user_id": 215038119
                    },
                    "title": "Great HOTEL and very clean and organize. recomended.",
                    "hotelier_response_date": 1728581563,
                    "review_id": 5089304479,
                    "is_moderated": 0,
                    "stayed_room_info": {
                        "num_nights": 1,
                        "checkin": "2024-09-19",
                        "room_id": 696599101,
                        "checkout": "2024-09-20",
                        "room_name": "King Room with Sofa Bed"
                    },
                    "pros": "All in general",
                    "hotelier_response": "Thank you for leaving your review regarding your recent stay at our hotel. I am very glad that you enjoyed your stay!\nIf I can be of any assistance to you, please contact me directly. We look forward to being of service to you in the near future.\nBest regards,\nJeremy Shaw\nGallery Host Manager\nHyatt Place Ottawa West",
                    "no_user_title": 0,
                    "reviewng": 1,
                    "date": "2024-10-01 17:37:10",
                    "is_incentivised": 0,
                    "review_hash": "4853c5c20ac5120f",
                    "languagecode": "en-us",
                    "average_score": 3.59999990463257,
                    "helpful_vote_count": 0,
                    "hotel_id": 6965991,
                    "travel_purpose": "leisure"
                }
            ],
            "count": 25,
            "sort_options": [
                {
                    "sort_option_default": 1,
                    "sort_option_id": "sort_most_relevant",
                    "title": "Most relevant"
                },
                {
                    "sort_option_default": 0,
                    "sort_option_id": "sort_recent_desc",
                    "title": "Date (newer to older)"
                },
                {
                    "sort_option_id": "proximity_to_hotel_average",
                    "title": "Close to property score",
                    "sort_option_default": 0
                },
                {
                    "title": "Review score (high to low)",
                    "sort_option_id": "sort_score_desc",
                    "sort_option_default": 0
                },
                {
                    "sort_option_id": "user_country",
                    "title": "From your country",
                    "sort_option_default": 0
                }
            ]
        }
    }
]

2025-08-25 12:42:45,098 - evaluation_logger_Hotels-26 - INFO - Final Response: <｜begin▁of▁sentence｜># 1. 概述

本文，我们来分享 [《精尽 Spring Boot 源码分析 —— SpringApplication》](http://svip.iocoder.cn/Spring-Boot/SpringApplication/) 的**第一篇**文章，我们来一起看看 SpringApplication 的**构建**。

在 Spring Boot 中，SpringApplication 是一个用于启动 Spring 应用的**引导类**。它的 `#run(Class<?> primarySource, String... args)` 静态方法，提供了一个非常方便的方式，用于启动 Spring 应用。代码如下：

```java
// SpringApplication.java

public static ConfigurableApplicationContext run(Class<?> primarySource, String... args) {
	return run(new Class<?>[] { primarySource }, args);
}

public static ConfigurableApplicationContext run(Class<?>[] primarySources, String[] args) {
	return new SpringApplication(primarySources).run(args);
}
```

- 首先，创建一个 SpringApplication 对象。
- 然后，调用其 `#run(String... args)` 方法，启动 Spring 应用。

所以，我们先来看看 SpringApplication 的**构建**。

# 2. SpringApplication 构造方法

SpringApplication 的构造方法，主要做两件事情：

- 1、设置 `primarySources` 属性
- 2、调用 `#deduceWebApplicationType()` 方法，推断 Web 应用类型，设置 `webApplicationType` 属性
- 3、调用 `#getSpringFactoriesInstances(Class<T> type)` 方法，获得 ApplicationContextInitializer 和 ApplicationListener 的实现类的数组，并设置到 `initializers` 和 `listeners` 属性中
- 4、调用 `#deduceMainApplicationClass()` 方法，推断 main 方法所在的类，设置 `mainApplicationClass` 属性

构造方法，代码如下：

```java
// SpringApplication.java

/**
 * 资源数组
 */
private Set<Class<?>> primarySources;
/**
 * Web 应用类型
 */
private WebApplicationType webApplicationType;
/**
 * ApplicationContextInitializer 数组
 */
private List<ApplicationContextInitializer<?>> initializers;
/**
 * ApplicationListener 数组
 */
private List<ApplicationListener<?>> listeners;

public SpringApplication(Class<?>... primarySources) {
    this(null, primarySources);
}

public SpringApplication(ResourceLoader resourceLoader, Class<?>... primarySources) {
    // 设置 resourceLoader 属性
    this.resourceLoader = resourceLoader;
    // 设置 primarySources 属性
    Assert.notNull(primarySources, "PrimarySources must not be null");
    this.primarySources = new LinkedHashSet<>(Arrays.asList(primarySources));
    // 推断 Web 应用类型
    this.webApplicationType = deduceWebApplicationType();
    // 获得 ApplicationContextInitializer 类型的实现类名的数组，并进行设置
    setInitializers((Collection) getSpringFactoriesInstances(ApplicationContextInitializer.class));
    // 获得 ApplicationListener 类型的实现类名的数组，并进行设置
    setListeners((Collection) getSpringFactoriesInstances(ApplicationListener.class));
    // 推断 main 方法所在的类
    this.mainApplicationClass = deduceMainApplicationClass();
}
```

- 比较简单，我们逐行来看看具体的代码。

## 2.1 deduceWebApplicationType

`#deduceWebApplicationType()` 方法，推断 Web 应用类型。代码如下：

```java
// SpringApplication.java

private WebApplicationType deduceWebApplicationType() {
    // 如果 CLASSPATH 存在 org.springframework.web.reactive.DispatcherHandler ，并且不存在 org.springframework.web.servlet.DispatcherServlet 和 org.glassfish.jersey.servlet.ServletContainer 类，则返回 REACTIVE 类型
	if (ClassUtils.isPresent(REACTIVE_WEB_ENVIRONMENT_CLASS, null) && !ClassUtils.isPresent(MVC_WEB_ENVIRONMENT_CLASS, null)
			&& !ClassUtils.isPresent(JERSEY_WEB_ENVIRONMENT_CLASS, null)) {
		return WebApplicationType.REACTIVE;
	}
    // 如果 CLASSPATH 不存在 javax.servlet.Servlet 和 org.springframework.web.context.ConfigurableWebApplicationContext 类，则返回 NONE 类型
	for (String className : WEB_ENVIRONMENT_CLASSES) {
		if (!ClassUtils.isPresent(className, null)) {
			return WebApplicationType.NONE;
		}
	}
    // 否则，返回 SERVLET 类型
	return WebApplicationType.SERVLET;
}
```

- 根据不同的条件，返回不同的 WebApplicationType 枚举对象。
- WebApplicationType 枚举，代码如下：

    ```java
    // WebApplicationType.java
    
    public enum WebApplicationType {
    
    	/**
    	 * 非 Web 项目
    	 */
    	NONE,
    
    	/**
    	 * 基于 Servlet 的 Web 项目
    	 */
    	SERVLET,
    
    	/**
    	 * 基于 Reactive 的 Web 项目
    	 */
    	REACTIVE;
    
    }
    ```

- 具体的判断逻辑，看代码注释。

## 2.2 getSpringFactoriesInstances

`#getSpringFactoriesInstances(Class<T> type)` 方法，获得指定类型的实现类名的数组，并进行创建对应的对象。代码如下：

```java
// SpringApplication.java

private <T> Collection<T> getSpringFactoriesInstances(Class<T> type) {
	return getSpringFactoriesInstances(type, new Class<?>[] {});
}

private <T> Collection<T> getSpringFactoriesInstances(Class<T> type, Class<?>[] parameterTypes, Object... args) {
    // 获得当前类的类加载器
	ClassLoader classLoader = getClassLoader();
	// Use names and ensure unique to protect against duplicates
    // 加载指定类型对应的，在 `META-INF/spring.factories` 里的类名的数组
	Set<String> names = new LinkedHashSet<>(SpringFactoriesLoader.loadFactoryNames(type, classLoader));
    // 创建对象们
	List<T> instances = createSpringFactoriesInstances(type, parameterTypes, classLoader, args, names);
	// Sort the instances
    // 排序对象们
	AnnotationAwareOrderComparator.sort(instances);
	return instances;
}
```

- 关于 SpringFactoriesLoader 的 `#loadFactoryNames(Class<?> factoryClass, ClassLoader classLoader)` 方法，在 [《精尽 Spring 源码分析 —— 国际化》](http://svip.iocoder.cn/Spring/I18N/) 的 [「7. SpringFactoriesLoader」](http://svip.iocoder.cn/Spring-Boot/SpringApplication/#) 中，已经详细解析过。
- 关于 `#createSpringFactoriesInstances(Class<T> type, Class<?>[] parameterTypes, ClassLoader classLoader, Object[] args, Set<String> names)` 方法，创建对象们。代码如下：

    ```java
    // SpringApplication.java
    
    private <T> List<T> createSpringFactoriesInstances(Class<T> type, Class<?>[] parameterTypes,
    		ClassLoader classLoader, Object[] args, Set<String> names) {
        // 创建对象数组
    	List<T> instances = new ArrayList<>(names.size());
        // 遍历 names 数组
    	for (String name : names) {
    		try {
                // 获得 name 对应的类
    			Class<?> instanceClass = ClassUtils.forName(name, classLoader);
                // 判断类是否实现自 type 类
    			Assert.isAssignable(type, instanceClass);
                // 获得构造方法
    			Constructor<?> constructor = instanceClass.getDeclaredConstructor(parameterTypes);
                // 创建对象
    			T instance = (T) BeanUtils.instantiateClass(constructor, args);
    			instances.add(instance);
    		} catch (Throwable ex) {
    			throw new IllegalArgumentException("Cannot instantiate " + type + " : " + name, ex);
    		}
    	}
    	return instances;
    }
    ```

    - 比较简单，就不多哔哔了。

- 关于 AnnotationAwareOrderComparator 的 `#sort(List<?> list)` 方法，排序对象们。在 [《精尽 Spring 源码分析 —— 排序》](http://svip.iocoder.cn/Spring/Order/) 中，已经详细解析过。

## 2.3 deduceMainApplicationClass

`#deduceMainApplicationClass()` 方法，推断 main 方法所在的类。代码如下：

```java
// SpringApplication.java

private Class<?> deduceMainApplicationClass() {
	try {
        // 获得当前 StackTraceElement 数组
		StackTraceElement[] stackTrace = new RuntimeException().getStackTrace();
        // 遍历 stackTrace 数组，判断哪个执行了 main 方法
		for (StackTraceElement stackTraceElement : stackTrace) {
			if ("main".equals(stackTraceElement.getMethodName())) {
				return Class.forName(stackTraceElement.getClassName());
			}
		}
	} catch (ClassNotFoundException ex) {
		// Swallow and continue
	}
	return null;
}
```

- 通过获得当前 StackTraceElement 数组，然后判断哪个执行了 `"main"` 方法，从而获得 main 方法所在的类。

# 3. 自定义 SpringApplication

SpringApplication 提供了一些 `set` 方法，允许我们自定义配置。例如说：

```java
// SpringApplication.java

/**
 * 是否自定义环境变量
 */
private boolean customEnvironment = true;
/**
 * 是否打印 Banner
 */
private boolean bannerMode = Banner.Mode.CONSOLE;
/**
 * 是否打印启动信息
 */
private boolean logStartupInfo = true;
/**
 * 是否添加 CommandLinePropertySource 到 Environment 中
 */
private boolean addCommandLineProperties = true;
/**
 * 是否添加 ConversionService
 */
private boolean addConversionService = true;

public void setAddCommandLineProperties(boolean addCommandLineProperties) {
	this.addCommandLineProperties = addCommandLineProperties;
}

public void setAddConversionService(boolean addConversionService) {
	this.addConversionService = addConversionService;
}

public void setBannerMode(Banner.Mode bannerMode) {
	this.bannerMode = bannerMode;
}

public void setLogStartupInfo(boolean logStartupInfo) {
	this.logStartupInfo = logStartupInfo;
}

public void setCustomEnvironment(boolean customEnvironment) {
	this.customEnvironment = customEnvironment;
}

public void setResourceLoader(ResourceLoader resourceLoader) {
	this.resourceLoader = resourceLoader;
}

public void setInitializers(Collection<? extends ApplicationContextInitializer<?>> initializers) {
	this.initializers = new ArrayList<>();
	this.initializers.addAll(initializers);
}

public void setListeners(Collection<? extends ApplicationListener<?>> listeners) {
	this.listeners = new ArrayList<>();
	this.listeners.addAll(listeners);
}
```

- 比较简单，胖友自己瞅瞅即可。

# 4. 小结

总的来说，SpringApplication 的构建过程，就是**初始化**一些属性。重点是，`initializers` 和 `listeners` 属性，是通过 `SpringFactoriesLoader#loadFactoryNames(type, classLoader)` 方法，进行加载。

另外，SpringApplication 还提供了一些 `set` 方法，方便我们自定义配置。

2025-08-25 12:42:51,033 - evaluation_logger_Hotels-26 - INFO - Complete Result: {'score': 0, 'reason': 'The response does not address any of the requested information about user reviews for the Hyatt Place Ottawa West hotel.'}
2025-08-25 12:42:56,523 - evaluation_logger_Hotels-26 - INFO - Correct Result: {'score': 0, 'reason': 'All information in the response is incorrect.'}
2025-08-25 12:42:56,523 - evaluation_logger_Hotels-26 - INFO - Message: Success.
2025-08-25 12:42:56,523 - evaluation_logger_Hotels-26 - INFO - Success turn num = 3
2025-08-25 12:42:56,523 - evaluation_logger_Hotels-26 - INFO - ----------------------------------------------------------------------------------------------------
