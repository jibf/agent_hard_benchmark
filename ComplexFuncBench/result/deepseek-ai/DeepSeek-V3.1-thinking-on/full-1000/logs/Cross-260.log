2025-08-25 12:16:54,083 - evaluation_logger_Cross-260 - INFO - Test Example Cross-260
2025-08-25 12:16:54,083 - evaluation_logger_Cross-260 - INFO - Query: I'm traveling to Amsterdam on November 22, 2024. Find the cheapest flight from Taipei. Besides that, arrange a taxi to pick me up from the airport two hours after my flight lands and take me to the Van Gogh Museum for a visit.
2025-08-25 12:17:04,966 - evaluation_logger_Cross-260 - INFO - Function Calls: 
[
    {
        "name": "Search_Flight_Location",
        "arguments": {
            "query": "Taipei"
        }
    },
    {
        "name": "Search_Flight_Location",
        "arguments": {
            "query": "Amsterdam"
        }
    }
]

2025-08-25 12:17:04,966 - evaluation_logger_Cross-260 - INFO - Golden Function Call: 
[
    {
        "name": "Search_Flight_Location",
        "arguments": {
            "query": "Taipei"
        }
    },
    {
        "name": "Search_Flight_Location",
        "arguments": {
            "query": "Amsterdam"
        }
    },
    {
        "name": "Search_Flights",
        "arguments": {
            "fromId": "TPE.CITY",
            "toId": "AMS.AIRPORT",
            "departDate": "2024-11-22",
            "sort": "CHEAPEST"
        }
    }
]

2025-08-25 12:17:04,966 - evaluation_logger_Cross-260 - INFO - Start compare_single_call: 
{'name': 'Search_Flight_Location', 'arguments': {'query': 'Taipei'}}
{'name': 'Search_Flight_Location', 'arguments': {'query': 'Taipei'}}
2025-08-25 12:17:04,966 - evaluation_logger_Cross-260 - INFO - Rule-based compare success.
2025-08-25 12:17:04,966 - evaluation_logger_Cross-260 - INFO - Start compare_single_call: 
{'name': 'Search_Flight_Location', 'arguments': {'query': 'Amsterdam'}}
{'name': 'Search_Flight_Location', 'arguments': {'query': 'Amsterdam'}}
2025-08-25 12:17:04,966 - evaluation_logger_Cross-260 - INFO - Rule-based compare success.
2025-08-25 12:17:04,966 - evaluation_logger_Cross-260 - INFO - Success matched: [{'name': 'Search_Flight_Location', 'arguments': {'query': 'Taipei'}}, {'name': 'Search_Flight_Location', 'arguments': {'query': 'Amsterdam'}}]
2025-08-25 12:17:04,966 - evaluation_logger_Cross-260 - INFO - Observations:
[
    {
        "status": true,
        "message": "Success",
        "data": [
            {
                "id": "TPE.CITY",
                "type": "CITY",
                "name": "Taipei",
                "code": "TPE",
                "regionName": "Taipei Area",
                "country": "TW",
                "countryName": "Taiwan"
            }
        ]
    },
    {
        "status": true,
        "message": "Success",
        "data": [
            {
                "id": "AMS.AIRPORT",
                "type": "AIRPORT",
                "name": "Schiphol Airport",
                "code": "AMS",
                "city": "AMS",
                "cityName": "Amsterdam",
                "regionName": "Noord-Holland",
                "country": "NL",
                "countryName": "Netherlands",
                "countryNameShort": "Netherlands",
                "distanceToCity": {
                    "value": 11.396990072691436,
                    "unit": "km"
                },
                "parent": "AMS"
            }
        ]
    }
]

2025-08-25 12:17:16,775 - evaluation_logger_Cross-260 - INFO - Function Calls: 
[
    {
        "name": "Search_Flights",
        "arguments": {
            "fromId": "TPE.CITY",
            "toId": "AMS.AIRPORT",
            "departDate": "2024-11-22",
            "sort": "CHEAPEST"
        }
    }
]

2025-08-25 12:17:16,776 - evaluation_logger_Cross-260 - INFO - Golden Function Call: 
[
    {
        "name": "Search_Flights",
        "arguments": {
            "departDate": "2024-11-22",
            "fromId": "TPE.CITY",
            "sort": "CHEAPEST",
            "toId": "AMS.AIRPORT"
        }
    },
    {
        "name": "Taxi_Search_Location",
        "arguments": {
            "query": "Schiphol Airport"
        }
    },
    {
        "name": "Taxi_Search_Location",
        "arguments": {
            "query": "Van Gogh Museum"
        }
    }
]

2025-08-25 12:17:16,776 - evaluation_logger_Cross-260 - INFO - Start compare_single_call: 
{'name': 'Search_Flights', 'arguments': {'departDate': '2024-11-22', 'fromId': 'TPE.CITY', 'sort': 'CHEAPEST', 'toId': 'AMS.AIRPORT'}}
{'name': 'Search_Flights', 'arguments': {'departDate': '2024-11-22', 'fromId': 'TPE.CITY', 'sort': 'CHEAPEST', 'toId': 'AMS.AIRPORT'}}
2025-08-25 12:17:16,776 - evaluation_logger_Cross-260 - INFO - Rule-based compare success.
2025-08-25 12:17:16,776 - evaluation_logger_Cross-260 - INFO - Success matched: [{'name': 'Search_Flights', 'arguments': {'departDate': '2024-11-22', 'fromId': 'TPE.CITY', 'sort': 'CHEAPEST', 'toId': 'AMS.AIRPORT'}}]
2025-08-25 12:17:16,777 - evaluation_logger_Cross-260 - INFO - Observations:
[
    {
        "status": true,
        "message": "Success",
        "data": {
            "flightOffers": [
                {
                    "token": "d6a1f_H4sIAAAAAAAA_y2Q0W6bMBSGnya9w2BjiqlkVYwk1ZYYtkBosxuLOA6h6eoJu4Pm6XcaIh_5-_5j-Vjyybm_9sH3j29de3LW-7CoNc60jdNImT_-sYdtb8y5e2_9puv96uciFSUheVH72PdgqYfdox6dZ3vF77q9Rg33kiSZ1CrObtbze0Sf6G-WLctrSxnHKYrIC822hBXfpmbPn0pRbKZ04CIbhuKSWjG3wEUsXtM4r37s8kVei_ocbSo75ltG1vMFri47W182Yr1UQZUNY16npPgMxrIcnIAZ60oM6wyvYKYTv2bhHOr6jFaKY4RonOBrNo3l4WTKcRxMenC8FDSIt1N0nLCQRdcwchyG7P7O6jetXGfeV_qTiyVjxIOvMv8I9UoJGWOPhLc8Ixmm0dGde7BZmEK1MkAB8HRjI59f0GoFtpdJCFAyoYCDpHGDGZiWHomoBjvKr5NOYjTdfZXfnwEXmfRxG7f_ARsiN2XpAQAA",
                    "segments": [
                        {
                            "departureAirport": {
                                "type": "AIRPORT",
                                "code": "TSA",
                                "name": "Taipei Songshan Airport",
                                "city": "TPE",
                                "cityName": "Taipei",
                                "country": "TW",
                                "countryName": "Taiwan",
                                "province": "Taipei Area"
                            },
                            "arrivalAirport": {
                                "type": "AIRPORT",
                                "code": "AMS",
                                "name": "Schiphol Airport",
                                "city": "AMS",
                                "cityName": "Amsterdam",
                                "country": "NL",
                                "countryName": "Netherlands",
                                "province": "Noord-Holland"
                            },
                            "departureTime": "2024-11-22T19:45:00",
                            "arrivalTime": "2024-11-23T17:30:00",
                            "legs": [
                                {
                                    "departureTime": "2024-11-22T19:45:00",
                                    "arrivalTime": "2024-11-22T21:30:00",
                                    "departureAirport": {
                                        "type": "AIRPORT",
                                        "code": "TSA",
                                        "name": "Taipei Songshan Airport",
                                        "city": "TPE",
                                        "cityName": "Taipei",
                                        "country": "TW",
                                        "countryName": "Taiwan",
                                        "province": "Taipei Area"
                                    },
                                    "arrivalAirport": {
                                        "type": "AIRPORT",
                                        "code": "XMN",
                                        "name": "Xiamen Gaoqi International Airport",
                                        "city": "XMN",
                                        "cityName": "Xiamen",
                                        "country": "CN",
                                        "countryName": "China",
                                        "province": "Fujian"
                                    },
                                    "cabinClass": "ECONOMY",
                                    "flightInfo": {
                                        "flightNumber": 882,
                                        "planeType": "738",
                                        "carrierInfo": {
                                            "operatingCarrier": "MF",
                                            "marketingCarrier": "MF"
                                        }
                                    },
                                    "carriers": [
                                        "MF",
                                        "MF"
                                    ],
                                    "carriersData": [
                                        {
                                            "name": "Xiamen Airlines",
                                            "code": "MF"
                                        },
                                        {
                                            "name": "Xiamen Airlines",
                                            "code": "MF"
                                        }
                                    ],
                                    "totalTime": 6300,
                                    "amenities": [
                                        {
                                            "category": "AIRCRAFT",
                                            "model": "737"
                                        },
                                        {
                                            "category": "ENTERTAINMENT",
                                            "cost": "free"
                                        },
                                        {
                                            "category": "FOOD",
                                            "cost": "free",
                                            "type": "meal"
                                        }
                                    ],
                                    "departureTerminal": "1",
                                    "arrivalTerminal": "3"
                                },
                                {
                                    "departureTime": "2024-11-23T12:20:00",
                                    "arrivalTime": "2024-11-23T17:30:00",
                                    "departureAirport": {
                                        "type": "AIRPORT",
                                        "code": "XMN",
                                        "name": "Xiamen Gaoqi International Airport",
                                        "city": "XMN",
                                        "cityName": "Xiamen",
                                        "country": "CN",
                                        "countryName": "China",
                                        "province": "Fujian"
                                    },
                                    "arrivalAirport": {
                                        "type": "AIRPORT",
                                        "code": "AMS",
                                        "name": "Schiphol Airport",
                                        "city": "AMS",
                                        "cityName": "Amsterdam",
                                        "country": "NL",
                                        "countryName": "Netherlands",
                                        "province": "Noord-Holland"
                                    },
                                    "cabinClass": "ECONOMY",
                                    "flightInfo": {
                                        "flightNumber": 811,
                                        "planeType": "788",
                                        "carrierInfo": {
                                            "operatingCarrier": "MF",
                                            "marketingCarrier": "MF"
                                        }
                                    },
                                    "carriers": [
                                        "MF",
                                        "MF"
                                    ],
                                    "carriersData": [
                                        {
                                            "name": "Xiamen Airlines",
                                            "code": "MF"
                                        },
                                        {
                                            "name": "Xiamen Airlines",
                                            "code": "MF"
                                        }
                                    ],
                                    "totalTime": 43800,
                                    "amenities": [
                                        {
                                            "category": "AIRCRAFT",
                                            "model": "787"
                                        },
                                        {
                                            "category": "ENTERTAINMENT",
                                            "cost": "free"
                                        },
                                        {
                                            "category": "FOOD",
                                            "cost": "free",
                                            "type": "meal"
                                        },
                                        {
                                            "category": "POWER",
                                            "cost": "free",
                                            "type": [
                                                "power_outlet",
                                                "usb_port"
                                            ]
                                        }
                                    ],
                                    "departureTerminal": "3"
                                }
                            ],
                            "totalTime": 103500,
                            "isAtolProtected": false,
                            "showWarningDestinationAirport": false,
                            "showWarningOriginAirport": false
                        }
                    ]
                },
                {
                    "token": "d6a1f_H4sIAAAAAAAA_y2Q3W6CMBiGr0bPKG0pAkuaxYBzc4Lb-HF60mCtiNvsRruBXv2qmH7p83xv_5Lutf5Wd7a9-6yrvVbWrwKV1LIqtQBcftm7xkwbKT_qY2WXdWNnL5NxnGKcLAob2ZYZ_G51LzptqYbTYb0RoKRWEAS9Kk79mzV0BMiUrP3wIb1GXGpKgIvfSZhjfxH2YUOn2TgMHq_dlsZh2y7OYxVHynDiJYdXL8lmq2SSFHHx4b5lqktyH8-jCcrOK7WMivLiebRS82KWLk6wS9NWx5c7QsO0hWk1cCJT1ycE5xQBQLwAXXtZKur0xjVFsNetpmlMoJf3raYOhrhf6yhyHH80VOJTcF3L47M40Th3IRxZ5p_kHybWmsU5cl1kYecWDHCI_POv9HxjA2dsqmIQQMP9jSUrCJghYxsWOAacBcRgy4jA3Dcm2GXfjl3SmiHQnzuwp6XBmaGuhj9V-w8bA8RC5AEAAA..",
                    "segments": [
                        {
                            "departureAirport": {
                                "type": "AIRPORT",
                                "code": "TPE",
                                "name": "Taiwan Taoyuan International Airport",
                                "city": "TPE",
                                "cityName": "Taipei",
                                "country": "TW",
                                "countryName": "Taiwan",
                                "province": "Taipei Area"
                            },
                            "arrivalAirport": {
                                "type": "AIRPORT",
                                "code": "AMS",
                                "name": "Schiphol Airport",
                                "city": "AMS",
                                "cityName": "Amsterdam",
                                "country": "NL",
                                "countryName": "Netherlands",
                                "province": "Noord-Holland"
                            },
                            "departureTime": "2024-11-22T18:40:00",
                            "arrivalTime": "2024-11-23T18:40:00",
                            "legs": [
                                {
                                    "departureTime": "2024-11-22T18:40:00",
                                    "arrivalTime": "2024-11-22T20:25:00",
                                    "departureAirport": {
                                        "type": "AIRPORT",
                                        "code": "TPE",
                                        "name": "Taiwan Taoyuan International Airport",
                                        "city": "TPE",
                                        "cityName": "Taipei",
                                        "country": "TW",
                                        "countryName": "Taiwan",
                                        "province": "Taipei Area"
                                    },
                                    "arrivalAirport": {
                                        "type": "AIRPORT",
                                        "code": "PVG",
                                        "name": "Shanghai Pudong International Airport",
                                        "city": "SHA",
                                        "cityName": "Shanghai",
                                        "country": "CN",
                                        "countryName": "China",
                                        "province": "Shanghai Area"
                                    },
                                    "cabinClass": "ECONOMY",
                                    "flightInfo": {
                                        "flightNumber": 5006,
                                        "planeType": "332",
                                        "carrierInfo": {
                                            "operatingCarrier": "MU",
                                            "marketingCarrier": "MU"
                                        }
                                    },
                                    "carriers": [
                                        "MU",
                                        "MU"
                                    ],
                                    "carriersData": [
                                        {
                                            "name": "China Eastern Airlines",
                                            "code": "MU"
                                        },
                                        {
                                            "name": "China Eastern Airlines",
                                            "code": "MU"
                                        }
                                    ],
                                    "totalTime": 6300,
                                    "amenities": [
                                        {
                                            "category": "AIRCRAFT",
                                            "model": "A330"
                                        },
                                        {
                                            "category": "ENTERTAINMENT",
                                            "cost": "free"
                                        },
                                        {
                                            "category": "FOOD",
                                            "cost": "free",
                                            "type": "light_meal"
                                        },
                                        {
                                            "category": "WIFI",
                                            "cost": "paid"
                                        }
                                    ],
                                    "departureTerminal": "2",
                                    "arrivalTerminal": "1"
                                },
                                {
                                    "departureTime": "2024-11-23T11:25:00",
                                    "arrivalTime": "2024-11-23T18:40:00",
                                    "departureAirport": {
                                        "type": "AIRPORT",
                                        "code": "PVG",
                                        "name": "Shanghai Pudong International Airport",
                                        "city": "SHA",
                                        "cityName": "Shanghai",
                                        "country": "CN",
                                        "countryName": "China",
                                        "province": "Shanghai Area"
                                    },
                                    "arrivalAirport": {
                                        "type": "AIRPORT",
                                        "code": "AMS",
                                        "name": "Schiphol Airport",
                                        "city": "AMS",
                                        "cityName": "Amsterdam",
                                        "country": "NL",
                                        "countryName": "Netherlands",
                                        "province": "Noord-Holland"
                                    },
                                    "cabinClass": "ECONOMY",
                                    "flightInfo": {
                                        "flightNumber": 1551,
                                        "planeType": "777",
                                        "carrierInfo": {
                                            "operatingCarrier": "KL",
                                            "marketingCarrier": "MU",
                                            "operatingCarrierDisclosureText": "Klm"
                                        }
                                    },
                                    "carriers": [
                                        "MU",
                                        "KL"
                                    ],
                                    "carriersData": [
                                        {
                                            "name": "China Eastern Airlines",
                                            "code": "MU"
                                        },
                                        {
                                            "name": "KLM",
                                            "code": "KL"
                                        }
                                    ],
                                    "totalTime": 51300,
                                    "amenities": [
                                        {
                                            "category": "AIRCRAFT",
                                            "model": "777"
                                        },
                                        {
                                            "category": "ENTERTAINMENT",
                                            "cost": "free"
                                        },
                                        {
                                            "category": "FOOD",
                                            "cost": "free",
                                            "type": "meal"
                                        },
                                        {
                                            "category": "POWER",
                                            "cost": "free",
                                            "type": [
                                                "usb_port"
                                            ]
                                        },
                                        {
                                            "category": "WIFI",
                                            "cost": "paid"
                                        }
                                    ],
                                    "departureTerminal": "1"
                                }
                            ],
                            "totalTime": 111600,
                            "isAtolProtected": false,
                            "showWarningDestinationAirport": false,
                            "showWarningOriginAirport": false
                        }
                    ]
                },
                {
                    "token": "d6a1f_H4sIAAAAAAAA_0WQa2-CMBiFf437RqG0gixpFgJzNy5zCE6_NFgRu4tdaBXGr1-VRfM2Pc857ds23Sn1I29Nc_vF652SxkGCWihRl6oCTHyb20ZPayE--b42S96Y89d7P85sO0kLE5qGLna7vKs6ZciGkRu-rkBJDM_zBpSMTP6pIQ7AD3g1CabZOWJCEQzG9jsOcnsSLYawIQ-zBM6G_g2Jg7aNQt-9aCi7tC_KtM9_F-FbWMynqzRfulHxnEXhPZz3SxnPi9eEd8ukECeeJbztksK3owBm-Ydso8DqsqxVce9Lfa6Ks7ab8bZP_REK9ThfXTFGIADY9eDZi1ISNBBTBFoDbhTJYmy5-WAVQdjyhrWOQIQmzo2sviqmuNi_VL8kzseW5Rj6_8TRxsaK6mCMDBtdPXRc7xqM7OBngy3haBgh_UC_phbQpWl3oZIWGExB-Kh5TT2khVEPa9nQMULliSp62rmlJ-YU_nd-0KeFlp7C43HPDvwPEV2TohECAAA.",
                    "segments": [
                        {
                            "departureAirport": {
                                "type": "AIRPORT",
                                "code": "TPE",
                                "name": "Taiwan Taoyuan International Airport",
                                "city": "TPE",
                                "cityName": "Taipei",
                                "country": "TW",
                                "countryName": "Taiwan",
                                "province": "Taipei Area"
                            },
                            "arrivalAirport": {
                                "type": "AIRPORT",
                                "code": "AMS",
                                "name": "Schiphol Airport",
                                "city": "AMS",
                                "cityName": "Amsterdam",
                                "country": "NL",
                                "countryName": "Netherlands",
                                "province": "Noord-Holland"
                            },
                            "departureTime": "2024-11-22T18:40:00",
                            "arrivalTime": "2024-11-23T09:30:00",
                            "legs": [
                                {
                                    "departureTime": "2024-11-22T18:40:00",
                                    "arrivalTime": "2024-11-22T20:25:00",
                                    "departureAirport": {
                                        "type": "AIRPORT",
                                        "code": "TPE",
                                        "name": "Taiwan Taoyuan International Airport",
                                        "city": "TPE",
                                        "cityName": "Taipei",
                                        "country": "TW",
                                        "countryName": "Taiwan",
                                        "province": "Taipei Area"
                                    },
                                    "arrivalAirport": {
                                        "type": "AIRPORT",
                                        "code": "PVG",
                                        "name": "Shanghai Pudong International Airport",
                                        "city": "SHA",
                                        "cityName": "Shanghai",
                                        "country": "CN",
                                        "countryName": "China",
                                        "province": "Shanghai Area"
                                    },
                                    "cabinClass": "ECONOMY",
                                    "flightInfo": {
                                        "flightNumber": 5006,
                                        "planeType": "332",
                                        "carrierInfo": {
                                            "operatingCarrier": "MU",
                                            "marketingCarrier": "MU"
                                        }
                                    },
                                    "carriers": [
                                        "MU",
                                        "MU"
                                    ],
                                    "carriersData": [
                                        {
                                            "name": "China Eastern Airlines",
                                            "code": "MU"
                                        },
                                        {
                                            "name": "China Eastern Airlines",
                                            "code": "MU"
                                        }
                                    ],
                                    "totalTime": 6300,
                                    "amenities": [
                                        {
                                            "category": "AIRCRAFT",
                                            "model": "A330"
                                        },
                                        {
                                            "category": "ENTERTAINMENT",
                                            "cost": "free"
                                        },
                                        {
                                            "category": "FOOD",
                                            "cost": "free",
                                            "type": "light_meal"
                                        },
                                        {
                                            "category": "WIFI",
                                            "cost": "paid"
                                        }
                                    ],
                                    "departureTerminal": "2",
                                    "arrivalTerminal": "1"
                                },
                                {
                                    "departureTime": "2024-11-23T00:15:00",
                                    "arrivalTime": "2024-11-23T06:00:00",
                                    "departureAirport": {
                                        "type": "AIRPORT",
                                        "code": "PVG",
                                        "name": "Shanghai Pudong International Airport",
                                        "city": "SHA",
                                        "cityName": "Shanghai",
                                        "country": "CN",
                                        "countryName": "China",
                                        "province": "Shanghai Area"
                                    },
                                    "arrivalAirport": {
                                        "type": "AIRPORT",
                                        "code": "CDG",
                                        "name": "Paris - Charles de Gaulle Airport",
                                        "city": "PAR",
                                        "cityName": "Paris",
                                        "country": "FR",
                                        "countryName": "France",
                                        "province": "Île de France"
                                    },
                                    "cabinClass": "ECONOMY",
                                    "flightInfo": {
                                        "flightNumber": 553,
                                        "planeType": "77W",
                                        "carrierInfo": {
                                            "operatingCarrier": "MU",
                                            "marketingCarrier": "MU"
                                        }
                                    },
                                    "carriers": [
                                        "MU",
                                        "MU"
                                    ],
                                    "carriersData": [
                                        {
                                            "name": "China Eastern Airlines",
                                            "code": "MU"
                                        },
                                        {
                                            "name": "China Eastern Airlines",
                                            "code": "MU"
                                        }
                                    ],
                                    "totalTime": 45900,
                                    "amenities": [
                                        {
                                            "category": "AIRCRAFT",
                                            "model": "777"
                                        },
                                        {
                                            "category": "ENTERTAINMENT",
                                            "cost": "free"
                                        },
                                        {
                                            "category": "FOOD",
                                            "cost": "free",
                                            "type": "meal"
                                        },
                                        {
                                            "category": "POWER",
                                            "cost": "free",
                                            "type": [
                                                "power_outlet",
                                                "usb_port"
                                            ]
                                        },
                                        {
                                            "category": "WIFI",
                                            "cost": "paid"
                                        }
                                    ],
                                    "departureTerminal": "1",
                                    "arrivalTerminal": "2E"
                                },
                                {
                                    "departureTime": "2024-11-23T08:05:00",
                                    "arrivalTime": "2024-11-23T09:30:00",
                                    "departureAirport": {
                                        "type": "AIRPORT",
                                        "code": "CDG",
                                        "name": "Paris - Charles de Gaulle Airport",
                                        "city": "PAR",
                                        "cityName": "Paris",
                                        "country": "FR",
                                        "countryName": "France",
                                        "province": "Île de France"
                                    },
                                    "arrivalAirport": {
                                        "type": "AIRPORT",
                                        "code": "AMS",
                                        "name": "Schiphol Airport",
                                        "city": "AMS",
                                        "cityName": "Amsterdam",
                                        "country": "NL",
                                        "countryName": "Netherlands",
                                        "province": "Noord-Holland"
                                    },
                                    "cabinClass": "ECONOMY",
                                    "flightInfo": {
                                        "flightNumber": 1679,
                                        "planeType": "320",
                                        "carrierInfo": {
                                            "operatingCarrier": "AF",
                                            "marketingCarrier": "MU",
                                            "operatingCarrierDisclosureText": "Air France"
                                        }
                                    },
                                    "carriers": [
                                        "MU",
                                        "AF"
                                    ],
                                    "carriersData": [
                                        {
                                            "name": "China Eastern Airlines",
                                            "code": "MU"
                                        },
                                        {
                                            "name": "Air France",
                                            "code": "AF"
                                        }
                                    ],
                                    "totalTime": 5100,
                                    "amenities": [
                                        {
                                            "category": "AIRCRAFT",
                                            "model": "A320"
                                        },
                                        {
                                            "category": "FOOD",
                                            "cost": "free",
                                            "type": "snack"
                                        },
                                        {
                                            "category": "POWER",
                                            "cost": "free",
                                            "type": [
                                                "usb_port"
                                            ]
                                        },
                                        {
                                            "category": "WIFI",
                                            "cost": "paid"
                                        }
                                    ],
                                    "departureTerminal": "2F"
                                }
                            ],
                            "totalTime": 78600,
                            "isAtolProtected": false,
                            "showWarningDestinationAirport": false,
                            "showWarningOriginAirport": false
                        }
                    ]
                },
                {
                    "token": "d6a1f_H4sIAAAAAAAA_0WQbW-rIBTHP033ThTBWpeQxei63Dsf2mt1s2-IpdayJxZhw_npL9ZlyyHn_zv_wwHCWal3eW3bpxfenZW0PiTohBJdo1rAxKt96k06CPHM3zq74b2929yGaeG6WV7Z0LZMsOv6ph2UJXtGrvihBQ2xgiCYUTKy-qaeLAG-w_tVtC4uFhOKYOC5jzgq3VVSz2ZP7rYZ3M7zR5JGWidx6P9oLId8rJp8LL8e4n9xtVvv87L2k-pvkcS3cDfWMt1Vm4wPdVaJibcZ10NWhW4SwaJ8kjqJnKEotErHUJpzVVroYcv1mIcLFJt1ubpljEAAsB_ASy0aSdBMTBHozHhUpEix45dzqQjCrjP3BgIRWi2vZPvSMsXF2337RdLSc5ylZf5PfLrY2lNjeMhy0W8NPW_5ayzc6D3QH-jZwAKZB4YddYAJQ-cfamiFwRqsp_6BBsgIowE2cqQe8k_TnpZO-UQnl1P4PflE_zwYGSnUEPr--B8ELBfjEQIAAA..",
                    "segments": [
                        {
                            "departureAirport": {
                                "type": "AIRPORT",
                                "code": "TPE",
                                "name": "Taiwan Taoyuan International Airport",
                                "city": "TPE",
                                "cityName": "Taipei",
                                "country": "TW",
                                "countryName": "Taiwan",
                                "province": "Taipei Area"
                            },
                            "arrivalAirport": {
                                "type": "AIRPORT",
                                "code": "AMS",
                                "name": "Schiphol Airport",
                                "city": "AMS",
                                "cityName": "Amsterdam",
                                "country": "NL",
                                "countryName": "Netherlands",
                                "province": "Noord-Holland"
                            },
                            "departureTime": "2024-11-22T18:40:00",
                            "arrivalTime": "2024-11-23T10:35:00",
                            "legs": [
                                {
                                    "departureTime": "2024-11-22T18:40:00",
                                    "arrivalTime": "2024-11-22T20:25:00",
                                    "departureAirport": {
                                        "type": "AIRPORT",
                                        "code": "TPE",
                                        "name": "Taiwan Taoyuan International Airport",
                                        "city": "TPE",
                                        "cityName": "Taipei",
                                        "country": "TW",
                                        "countryName": "Taiwan",
                                        "province": "Taipei Area"
                                    },
                                    "arrivalAirport": {
                                        "type": "AIRPORT",
                                        "code": "PVG",
                                        "name": "Shanghai Pudong International Airport",
                                        "city": "SHA",
                                        "cityName": "Shanghai",
                                        "country": "CN",
                                        "countryName": "China",
                                        "province": "Shanghai Area"
                                    },
                                    "cabinClass": "ECONOMY",
                                    "flightInfo": {
                                        "flightNumber": 5006,
                                        "planeType": "332",
                                        "carrierInfo": {
                                            "operatingCarrier": "MU",
                                            "marketingCarrier": "MU"
                                        }
                                    },
                                    "carriers": [
                                        "MU",
                                        "MU"
                                    ],
                                    "carriersData": [
                                        {
                                            "name": "China Eastern Airlines",
                                            "code": "MU"
                                        },
                                        {
                                            "name": "China Eastern Airlines",
                                            "code": "MU"
                                        }
                                    ],
                                    "totalTime": 6300,
                                    "amenities": [
                                        {
                                            "category": "AIRCRAFT",
                                            "model": "A330"
                                        },
                                        {
                                            "category": "ENTERTAINMENT",
                                            "cost": "free"
                                        },
                                        {
                                            "category": "FOOD",
                                            "cost": "free",
                                            "type": "light_meal"
                                        },
                                        {
                                            "category": "WIFI",
                                            "cost": "paid"
                                        }
                                    ],
                                    "departureTerminal": "2",
                                    "arrivalTerminal": "1"
                                },
                                {
                                    "departureTime": "2024-11-23T00:15:00",
                                    "arrivalTime": "2024-11-23T06:00:00",
                                    "departureAirport": {
                                        "type": "AIRPORT",
                                        "code": "PVG",
                                        "name": "Shanghai Pudong International Airport",
                                        "city": "SHA",
                                        "cityName": "Shanghai",
                                        "country": "CN",
                                        "countryName": "China",
                                        "province": "Shanghai Area"
                                    },
                                    "arrivalAirport": {
                                        "type": "AIRPORT",
                                        "code": "CDG",
                                        "name": "Paris - Charles de Gaulle Airport",
                                        "city": "PAR",
                                        "cityName": "Paris",
                                        "country": "FR",
                                        "countryName": "France",
                                        "province": "Île de France"
                                    },
                                    "cabinClass": "ECONOMY",
                                    "flightInfo": {
                                        "flightNumber": 553,
                                        "planeType": "77W",
                                        "carrierInfo": {
                                            "operatingCarrier": "MU",
                                            "marketingCarrier": "MU"
                                        }
                                    },
                                    "carriers": [
                                        "MU",
                                        "MU"
                                    ],
                                    "carriersData": [
                                        {
                                            "name": "China Eastern Airlines",
                                            "code": "MU"
                                        },
                                        {
                                            "name": "China Eastern Airlines",
                                            "code": "MU"
                                        }
                                    ],
                                    "totalTime": 45900,
                                    "amenities": [
                                        {
                                            "category": "AIRCRAFT",
                                            "model": "777"
                                        },
                                        {
                                            "category": "ENTERTAINMENT",
                                            "cost": "free"
                                        },
                                        {
                                            "category": "FOOD",
                                            "cost": "free",
                                            "type": "meal"
                                        },
                                        {
                                            "category": "POWER",
                                            "cost": "free",
                                            "type": [
                                                "power_outlet",
                                                "usb_port"
                                            ]
                                        },
                                        {
                                            "category": "WIFI",
                                            "cost": "paid"
                                        }
                                    ],
                                    "departureTerminal": "1",
                                    "arrivalTerminal": "2E"
                                },
                                {
                                    "departureTime": "2024-11-23T09:10:00",
                                    "arrivalTime": "2024-11-23T10:35:00",
                                    "departureAirport": {
                                        "type": "AIRPORT",
                                        "code": "CDG",
                                        "name": "Paris - Charles de Gaulle Airport",
                                        "city": "PAR",
                                        "cityName": "Paris",
                                        "country": "FR",
                                        "countryName": "France",
                                        "province": "Île de France"
                                    },
                                    "arrivalAirport": {
                                        "type": "AIRPORT",
                                        "code": "AMS",
                                        "name": "Schiphol Airport",
                                        "city": "AMS",
                                        "cityName": "Amsterdam",
                                        "country": "NL",
                                        "countryName": "Netherlands",
                                        "province": "Noord-Holland"
                                    },
                                    "cabinClass": "ECONOMY",
                                    "flightInfo": {
                                        "flightNumber": 1556,
                                        "planeType": "32S",
                                        "carrierInfo": {
                                            "operatingCarrier": "KL",
                                            "marketingCarrier": "MU",
                                            "operatingCarrierDisclosureText": "Klm"
                                        }
                                    },
                                    "carriers": [
                                        "MU",
                                        "KL"
                                    ],
                                    "carriersData": [
                                        {
                                            "name": "China Eastern Airlines",
                                            "code": "MU"
                                        },
                                        {
                                            "name": "KLM",
                                            "code": "KL"
                                        }
                                    ],
                                    "totalTime": 5100,
                                    "amenities": [
                                        {
                                            "category": "AIRCRAFT",
                                            "model": "32Q"
                                        },
                                        {
                                            "category": "FOOD",
                                            "cost": "free",
                                            "type": "snack"
                                        },
                                        {
                                            "category": "POWER",
                                            "cost": "free",
                                            "type": [
                                                "usb_port"
                                            ]
                                        },
                                        {
                                            "category": "WIFI",
                                            "cost": "paid"
                                        }
                                    ],
                                    "departureTerminal": "2F"
                                }
                            ],
                            "totalTime": 82500,
                            "isAtolProtected": false,
                            "showWarningDestinationAirport": false,
                            "showWarningOriginAirport": false
                        }
                    ]
                },
                {
                    "token": "d6a1f_H4sIAAAAAAAA_0WQa0-DMBSGf838RqEXBpg0hoAzKhcnA92-NKxjrN5qaB3Ir7cbRnOa8z7nPT1t04PWn-rStvdvoj1oZX0p0Eot21o3gMt3e9-ZtJXyVXy0di06e_VwHaYFQlle2dC2TPDL9VUzaEt1nF6IbQNqagVBMKHi1P-ljs4BuSEbP1oUZ4tLTQlw0TOJSuQnz5PZ0ZtlBpfT_I6mUd8ncej9aayGfKzqfCy_n-LHuFotNnm59pLqrkjia7ga1ypdVQ-ZGNZZJU-8zEQ_ZFWIkggW5Yvqk8gZiqLX6Rgqc65Oi35Yin7MwxmOzTpf3XBOIQDEC-C5lrWieCKuKXQm3GlapMTxyqnUFBPkTL2BQoz9-YVq3hquhfy4b75pWrqOM7fM_8kjItaGGcPFFsL_NXRd_9-YoeizHvhxbmCGzQPDljnAhKHDH9WsImABFqXhLQuwEc4CYmTHXOztT3sadsp7dnIFg7-TL-z2ycjIYA-h540_Q2Gs2RECAAA.",
                    "segments": [
                        {
                            "departureAirport": {
                                "type": "AIRPORT",
                                "code": "TPE",
                                "name": "Taiwan Taoyuan International Airport",
                                "city": "TPE",
                                "cityName": "Taipei",
                                "country": "TW",
                                "countryName": "Taiwan",
                                "province": "Taipei Area"
                            },
                            "arrivalAirport": {
                                "type": "AIRPORT",
                                "code": "AMS",
                                "name": "Schiphol Airport",
                                "city": "AMS",
                                "cityName": "Amsterdam",
                                "country": "NL",
                                "countryName": "Netherlands",
                                "province": "Noord-Holland"
                            },
                            "departureTime": "2024-11-22T18:40:00",
                            "arrivalTime": "2024-11-23T10:55:00",
                            "legs": [
                                {
                                    "departureTime": "2024-11-22T18:40:00",
                                    "arrivalTime": "2024-11-22T20:25:00",
                                    "departureAirport": {
                                        "type": "AIRPORT",
                                        "code": "TPE",
                                        "name": "Taiwan Taoyuan International Airport",
                                        "city": "TPE",
                                        "cityName": "Taipei",
                                        "country": "TW",
                                        "countryName": "Taiwan",
                                        "province": "Taipei Area"
                                    },
                                    "arrivalAirport": {
                                        "type": "AIRPORT",
                                        "code": "PVG",
                                        "name": "Shanghai Pudong International Airport",
                                        "city": "SHA",
                                        "cityName": "Shanghai",
                                        "country": "CN",
                                        "countryName": "China",
                                        "province": "Shanghai Area"
                                    },
                                    "cabinClass": "ECONOMY",
                                    "flightInfo": {
                                        "flightNumber": 5006,
                                        "planeType": "332",
                                        "carrierInfo": {
                                            "operatingCarrier": "MU",
                                            "marketingCarrier": "MU"
                                        }
                                    },
                                    "carriers": [
                                        "MU",
                                        "MU"
                                    ],
                                    "carriersData": [
                                        {
                                            "name": "China Eastern Airlines",
                                            "code": "MU"
                                        },
                                        {
                                            "name": "China Eastern Airlines",
                                            "code": "MU"
                                        }
                                    ],
                                    "totalTime": 6300,
                                    "amenities": [
                                        {
                                            "category": "AIRCRAFT",
                                            "model": "A330"
                                        },
                                        {
                                            "category": "ENTERTAINMENT",
                                            "cost": "free"
                                        },
                                        {
                                            "category": "FOOD",
                                            "cost": "free",
                                            "type": "light_meal"
                                        },
                                        {
                                            "category": "WIFI",
                                            "cost": "paid"
                                        }
                                    ],
                                    "departureTerminal": "2",
                                    "arrivalTerminal": "1"
                                },
                                {
                                    "departureTime": "2024-11-23T00:15:00",
                                    "arrivalTime": "2024-11-23T06:00:00",
                                    "departureAirport": {
                                        "type": "AIRPORT",
                                        "code": "PVG",
                                        "name": "Shanghai Pudong International Airport",
                                        "city": "SHA",
                                        "cityName": "Shanghai",
                                        "country": "CN",
                                        "countryName": "China",
                                        "province": "Shanghai Area"
                                    },
                                    "arrivalAirport": {
                                        "type": "AIRPORT",
                                        "code": "CDG",
                                        "name": "Paris - Charles de Gaulle Airport",
                                        "city": "PAR",
                                        "cityName": "Paris",
                                        "country": "FR",
                                        "countryName": "France",
                                        "province": "Île de France"
                                    },
                                    "cabinClass": "ECONOMY",
                                    "flightInfo": {
                                        "flightNumber": 553,
                                        "planeType": "77W",
                                        "carrierInfo": {
                                            "operatingCarrier": "MU",
                                            "marketingCarrier": "MU"
                                        }
                                    },
                                    "carriers": [
                                        "MU",
                                        "MU"
                                    ],
                                    "carriersData": [
                                        {
                                            "name": "China Eastern Airlines",
                                            "code": "MU"
                                        },
                                        {
                                            "name": "China Eastern Airlines",
                                            "code": "MU"
                                        }
                                    ],
                                    "totalTime": 45900,
                                    "amenities": [
                                        {
                                            "category": "AIRCRAFT",
                                            "model": "777"
                                        },
                                        {
                                            "category": "ENTERTAINMENT",
                                            "cost": "free"
                                        },
                                        {
                                            "category": "FOOD",
                                            "cost": "free",
                                            "type": "meal"
                                        },
                                        {
                                            "category": "POWER",
                                            "cost": "free",
                                            "type": [
                                                "power_outlet",
                                                "usb_port"
                                            ]
                                        },
                                        {
                                            "category": "WIFI",
                                            "cost": "paid"
                                        }
                                    ],
                                    "departureTerminal": "1",
                                    "arrivalTerminal": "2E"
                                },
                                {
                                    "departureTime": "2024-11-23T09:30:00",
                                    "arrivalTime": "2024-11-23T10:55:00",
                                    "departureAirport": {
                                        "type": "AIRPORT",
                                        "code": "CDG",
                                        "name": "Paris - Charles de Gaulle Airport",
                                        "city": "PAR",
                                        "cityName": "Paris",
                                        "country": "FR",
                                        "countryName": "France",
                                        "province": "Île de France"
                                    },
                                    "arrivalAirport": {
                                        "type": "AIRPORT",
                                        "code": "AMS",
                                        "name": "Schiphol Airport",
                                        "city": "AMS",
                                        "cityName": "Amsterdam",
                                        "country": "NL",
                                        "countryName": "Netherlands",
                                        "province": "Noord-Holland"
                                    },
                                    "cabinClass": "ECONOMY",
                                    "flightInfo": {
                                        "flightNumber": 1558,
                                        "planeType": "737",
                                        "carrierInfo": {
                                            "operatingCarrier": "KL",
                                            "marketingCarrier": "MU",
                                            "operatingCarrierDisclosureText": "Klm"
                                        }
                                    },
                                    "carriers": [
                                        "MU",
                                        "KL"
                                    ],
                                    "carriersData": [
                                        {
                                            "name": "China Eastern Airlines",
                                            "code": "MU"
                                        },
                                        {
                                            "name": "KLM",
                                            "code": "KL"
                                        }
                                    ],
                                    "totalTime": 5100,
                                    "amenities": [
                                        {
                                            "category": "AIRCRAFT",
                                            "model": "737"
                                        },
                                        {
                                            "category": "FOOD",
                                            "cost": "free",
                                            "type": "snack"
                                        },
                                        {
                                            "category": "POWER",
                                            "cost": "free",
                                            "type": [
                                                "usb_port"
                                            ]
                                        },
                                        {
                                            "category": "WIFI",
                                            "cost": "paid"
                                        }
                                    ],
                                    "departureTerminal": "2F"
                                }
                            ],
                            "totalTime": 83700,
                            "isAtolProtected": false,
                            "showWarningDestinationAirport": false,
                            "showWarningOriginAirport": false
                        }
                    ]
                }
            ],
            "flightDeals": [
                {
                    "key": "CHEAPEST",
                    "offerToken": "d6a1f_H4sIAAAAAAAA_y2Q0W6bMBSGnya9w2BjiqlkVYwk1ZYYtkBosxuLOA6h6eoJu4Pm6XcaIh_5-_5j-Vjyybm_9sH3j29de3LW-7CoNc60jdNImT_-sYdtb8y5e2_9puv96uciFSUheVH72PdgqYfdox6dZ3vF77q9Rg33kiSZ1CrObtbze0Sf6G-WLctrSxnHKYrIC822hBXfpmbPn0pRbKZ04CIbhuKSWjG3wEUsXtM4r37s8kVei_ocbSo75ltG1vMFri47W182Yr1UQZUNY16npPgMxrIcnIAZ60oM6wyvYKYTv2bhHOr6jFaKY4RonOBrNo3l4WTKcRxMenC8FDSIt1N0nLCQRdcwchyG7P7O6jetXGfeV_qTiyVjxIOvMv8I9UoJGWOPhLc8Ixmm0dGde7BZmEK1MkAB8HRjI59f0GoFtpdJCFAyoYCDpHGDGZiWHomoBjvKr5NOYjTdfZXfnwEXmfRxG7f_ARsiN2XpAQAA",
                    "price": {
                        "currencyCode": "USD",
                        "units": 283,
                        "nanos": 850000000
                    },
                    "travellerPrices": [
                        {
                            "travellerPriceBreakdown": {
                                "total": {
                                    "currencyCode": "USD",
                                    "units": 283,
                                    "nanos": 850000000
                                },
                                "baseFare": {
                                    "currencyCode": "USD",
                                    "units": 181,
                                    "nanos": 450000000
                                },
                                "fee": {
                                    "currencyCode": "USD",
                                    "units": 0,
                                    "nanos": 0
                                },
                                "tax": {
                                    "currencyCode": "USD",
                                    "units": 102,
                                    "nanos": 400000000
                                },
                                "totalRounded": {
                                    "currencyCode": "USD",
                                    "nanos": 0,
                                    "units": 284
                                },
                                "discount": {
                                    "currencyCode": "USD",
                                    "units": 0,
                                    "nanos": 0
                                },
                                "totalWithoutDiscount": {
                                    "currencyCode": "USD",
                                    "units": 283,
                                    "nanos": 850000000
                                },
                                "totalWithoutDiscountRounded": {
                                    "currencyCode": "USD",
                                    "nanos": 0,
                                    "units": 284
                                }
                            },
                            "travellerReference": "1",
                            "travellerType": "ADULT"
                        }
                    ]
                },
                {
                    "key": "FASTEST",
                    "offerToken": "d6a1f_H4sIAAAAAAAA_y2QXW-CMBiFf43eUdqCAibNQhA_olU3QeduGqyAqLMb7Qby61dhaXPOc86bpk3PSn3JkWlmtyI_K2n8SJALJfJEpYCLTzMrtRyFuBb33EyK0ow2oU-3GK_WOxOZhl58dHhJa2XIkpN-cUxBQgzP8zqUnLj_VJIhsKf2hxtMtm3FhSI2GOB3O4ixS8OuLMk0WjizTZtOhI5ltW58h0YS7S8S0VsOX1Fc76PbdP1A27io6lXs4uU4RFFzkLvmjS4nHEaB7nd-28fjg0ODStH4KpcRrZYBbJ55HVKdQxldaM8atxemnBMEgO14qM0ikcTqiCuCYIcnRbbUhk7cRUWG0HK6WU2QZbnDvkxvKVeFuC_SBwnmjmXoPxO_2DZmPRx4-aXOMg09y9c7Z1DrudWEIayf4x-ZZ2njnZ2YhznkmlKWYFd7xmytBUMAgue5C5vvtTVscPS--eAPrKOvtNkBAAA.",
                    "price": {
                        "currencyCode": "USD",
                        "units": 603,
                        "nanos": 700000000
                    },
                    "travellerPrices": [
                        {
                            "travellerPriceBreakdown": {
                                "total": {
                                    "currencyCode": "USD",
                                    "units": 603,
                                    "nanos": 700000000
                                },
                                "baseFare": {
                                    "currencyCode": "USD",
                                    "units": 517,
                                    "nanos": 600000000
                                },
                                "fee": {
                                    "currencyCode": "USD",
                                    "units": 0,
                                    "nanos": 0
                                },
                                "tax": {
                                    "currencyCode": "USD",
                                    "units": 86,
                                    "nanos": 100000000
                                },
                                "totalRounded": {
                                    "currencyCode": "USD",
                                    "nanos": 0,
                                    "units": 604
                                },
                                "discount": {
                                    "currencyCode": "USD",
                                    "units": 0,
                                    "nanos": 0
                                },
                                "totalWithoutDiscount": {
                                    "currencyCode": "USD",
                                    "units": 603,
                                    "nanos": 700000000
                                },
                                "totalWithoutDiscountRounded": {
                                    "currencyCode": "USD",
                                    "nanos": 0,
                                    "units": 604
                                }
                            },
                            "travellerReference": "1",
                            "travellerType": "ADULT"
                        }
                    ]
                },
                {
                    "key": "BEST",
                    "offerToken": "d6a1f_H4sIAAAAAAAA_0WQa2-CMBiFf437RqG0gixpFgJzNy5zCE6_NFgRu4tdaBXGr1-VRfM2Pc857ds23Sn1I29Nc_vF652SxkGCWihRl6oCTHyb20ZPayE--b42S96Y89d7P85sO0kLE5qGLna7vKs6ZciGkRu-rkBJDM_zBpSMTP6pIQ7AD3g1CabZOWJCEQzG9jsOcnsSLYawIQ-zBM6G_g2Jg7aNQt-9aCi7tC_KtM9_F-FbWMynqzRfulHxnEXhPZz3SxnPi9eEd8ukECeeJbztksK3owBm-Ydso8DqsqxVce9Lfa6Ks7ab8bZP_REK9ThfXTFGIADY9eDZi1ISNBBTBFoDbhTJYmy5-WAVQdjyhrWOQIQmzo2sviqmuNi_VL8kzseW5Rj6_8TRxsaK6mCMDBtdPXRc7xqM7OBngy3haBgh_UC_phbQpWl3oZIWGExB-Kh5TT2khVEPa9nQMULliSp62rmlJ-YU_nd-0KeFlp7C43HPDvwPEV2TohECAAA.",
                    "price": {
                        "currencyCode": "USD",
                        "units": 340,
                        "nanos": 900000000
                    },
                    "travellerPrices": [
                        {
                            "travellerPriceBreakdown": {
                                "total": {
                                    "currencyCode": "USD",
                                    "units": 340,
                                    "nanos": 900000000
                                },
                                "baseFare": {
                                    "currencyCode": "USD",
                                    "units": 203,
                                    "nanos": 0
                                },
                                "fee": {
                                    "currencyCode": "USD",
                                    "units": 0,
                                    "nanos": 0
                                },
                                "tax": {
                                    "currencyCode": "USD",
                                    "units": 137,
                                    "nanos": 900000000
                                },
                                "totalRounded": {
                                    "currencyCode": "USD",
                                    "nanos": 0,
                                    "units": 341
                                },
                                "discount": {
                                    "currencyCode": "USD",
                                    "units": 0,
                                    "nanos": 0
                                },
                                "totalWithoutDiscount": {
                                    "currencyCode": "USD",
                                    "units": 340,
                                    "nanos": 900000000
                                },
                                "totalWithoutDiscountRounded": {
                                    "currencyCode": "USD",
                                    "nanos": 0,
                                    "units": 341
                                }
                            },
                            "travellerReference": "1",
                            "travellerType": "ADULT"
                        }
                    ]
                }
            ],
            "atolProtectedStatus": "NONE",
            "searchId": "41BDCCAA5A6783710F3390BDCEE10742",
            "displayOptions": {
                "brandedFaresShownByDefault": false,
                "directFlightsOnlyFilterIgnored": false,
                "hideFlexiblePricesBanner": false
            },
            "isOffersCabinClassExtended": false,
            "searchCriteria": {
                "cabinClass": "ECONOMY"
            }
        }
    }
]

2025-08-25 12:17:25,822 - evaluation_logger_Cross-260 - INFO - Function Calls: 
[
    {
        "name": "Taxi_Search_Location",
        "arguments": {
            "query": "Schiphol Airport"
        }
    },
    {
        "name": "Taxi_Search_Location",
        "arguments": {
            "query": "Van Gogh Museum"
        }
    }
]

2025-08-25 12:17:25,822 - evaluation_logger_Cross-260 - INFO - Golden Function Call: 
[
    {
        "name": "Taxi_Search_Location",
        "arguments": {
            "query": "Schiphol Airport"
        }
    },
    {
        "name": "Taxi_Search_Location",
        "arguments": {
            "query": "Van Gogh Museum"
        }
    },
    {
        "name": "Search_Taxi",
        "arguments": {
            "pick_up_place_id": "ChIJLRb94DThxUcRiPHO8YMV1cc",
            "drop_off_place_id": "ChIJX1rTlu8JxkcRGsV8-a4oKMI",
            "pick_up_date": "2024-11-23",
            "pick_up_time": "19:30"
        }
    }
]

2025-08-25 12:17:25,822 - evaluation_logger_Cross-260 - INFO - Start compare_single_call: 
{'name': 'Taxi_Search_Location', 'arguments': {'query': 'Schiphol Airport'}}
{'name': 'Taxi_Search_Location', 'arguments': {'query': 'Schiphol Airport'}}
2025-08-25 12:17:25,823 - evaluation_logger_Cross-260 - INFO - Rule-based compare success.
2025-08-25 12:17:25,823 - evaluation_logger_Cross-260 - INFO - Start compare_single_call: 
{'name': 'Taxi_Search_Location', 'arguments': {'query': 'Van Gogh Museum'}}
{'name': 'Taxi_Search_Location', 'arguments': {'query': 'Van Gogh Museum'}}
2025-08-25 12:17:25,823 - evaluation_logger_Cross-260 - INFO - Rule-based compare success.
2025-08-25 12:17:25,823 - evaluation_logger_Cross-260 - INFO - Success matched: [{'name': 'Taxi_Search_Location', 'arguments': {'query': 'Schiphol Airport'}}, {'name': 'Taxi_Search_Location', 'arguments': {'query': 'Van Gogh Museum'}}]
2025-08-25 12:17:25,823 - evaluation_logger_Cross-260 - INFO - Observations:
[
    {
        "status": true,
        "message": "Success",
        "data": [
            {
                "iata": "AMS",
                "countryCode": "nl",
                "googlePlaceId": "ChIJLRb94DThxUcRiPHO8YMV1cc",
                "name": "Schiphol Airport",
                "latitude": 52.3085,
                "country": "Netherlands",
                "longitude": 4.76249,
                "types": "airport",
                "city": "Amsterdam"
            }
        ]
    },
    {
        "status": true,
        "message": "Success",
        "data": [
            {
                "longitude": 4.880778,
                "name": "Van Gogh Museum",
                "googlePlaceId": "ChIJX1rTlu8JxkcRGsV8-a4oKMI",
                "latitude": 52.358562,
                "city": "Amsterdam",
                "country": "Netherlands",
                "countryCode": "nl",
                "types": "museum"
            }
        ]
    }
]

2025-08-25 12:17:37,348 - evaluation_logger_Cross-260 - INFO - Function Calls: 
[
    {
        "name": "Search_Taxi",
        "arguments": {
            "pick_up_place_id": "ChIJLRb94DThxUcRiPHO8YMV1cc",
            "drop_off_place_id": "ChIJX1rTlu8JxkcRGsV8-a4oKMI",
            "pick_up_date": "2024-11-23",
            "pick_up_time": "19:30"
        }
    }
]

2025-08-25 12:17:37,348 - evaluation_logger_Cross-260 - INFO - Golden Function Call: 
[
    {
        "name": "Search_Taxi",
        "arguments": {
            "drop_off_place_id": "ChIJX1rTlu8JxkcRGsV8-a4oKMI",
            "pick_up_date": "2024-11-23",
            "pick_up_place_id": "ChIJLRb94DThxUcRiPHO8YMV1cc",
            "pick_up_time": "19:30"
        }
    }
]

2025-08-25 12:17:37,349 - evaluation_logger_Cross-260 - INFO - Start compare_single_call: 
{'name': 'Search_Taxi', 'arguments': {'drop_off_place_id': 'ChIJX1rTlu8JxkcRGsV8-a4oKMI', 'pick_up_date': '2024-11-23', 'pick_up_place_id': 'ChIJLRb94DThxUcRiPHO8YMV1cc', 'pick_up_time': '19:30'}}
{'name': 'Search_Taxi', 'arguments': {'drop_off_place_id': 'ChIJX1rTlu8JxkcRGsV8-a4oKMI', 'pick_up_date': '2024-11-23', 'pick_up_place_id': 'ChIJLRb94DThxUcRiPHO8YMV1cc', 'pick_up_time': '19:30'}}
2025-08-25 12:17:37,349 - evaluation_logger_Cross-260 - INFO - Rule-based compare success.
2025-08-25 12:17:37,349 - evaluation_logger_Cross-260 - INFO - Success matched: [{'name': 'Search_Taxi', 'arguments': {'drop_off_place_id': 'ChIJX1rTlu8JxkcRGsV8-a4oKMI', 'pick_up_date': '2024-11-23', 'pick_up_place_id': 'ChIJLRb94DThxUcRiPHO8YMV1cc', 'pick_up_time': '19:30'}}]
2025-08-25 12:17:37,349 - evaluation_logger_Cross-260 - INFO - Observations:
[
    {
        "status": true,
        "message": "Success",
        "data": {
            "results": [
                {
                    "nonRefundable": false,
                    "janusResultReference": "1",
                    "discountType": "NONE",
                    "resultId": "28d05b0a-ccfb-4456-aada-fdb017dbcb15",
                    "supplierId": 68,
                    "passengerCapacity": 3,
                    "duration": 20,
                    "price": {
                        "currencyCode": "USD",
                        "amount": "52.96"
                    },
                    "drivingDistance": 14.32,
                    "meetGreet": true,
                    "cancellationLeadTimeMinutes": 120,
                    "legPriceBreakdown": [
                        {
                            "journeyDirection": "OUTBOUND",
                            "supplierName": "Deluxe Taxi Amsterdam",
                            "price": {
                                "amount": "52.96",
                                "currencyCode": "USD"
                            },
                            "supplierId": 68,
                            "supplierLocationId": 108
                        }
                    ],
                    "category": "Standard",
                    "supplierName": "Deluxe Taxi Amsterdam",
                    "bags": 2,
                    "description": "Standard",
                    "descriptionLocalised": "Perfect for solo travellers, couples and small families.",
                    "priceRuleId": 100814,
                    "vehicleType": "STANDARD",
                    "categoryLocalised": "Standard",
                    "geniusDiscount": false
                },
                {
                    "supplierId": 68,
                    "nonRefundable": false,
                    "resultId": "f3f15a1e-34aa-4f1d-8b34-233f54f526c2",
                    "discountType": "NONE",
                    "janusResultReference": "5",
                    "drivingDistance": 14.32,
                    "price": {
                        "amount": "54.29",
                        "currencyCode": "USD"
                    },
                    "meetGreet": true,
                    "cancellationLeadTimeMinutes": 120,
                    "duration": 20,
                    "passengerCapacity": 4,
                    "category": "People Carrier",
                    "legPriceBreakdown": [
                        {
                            "journeyDirection": "OUTBOUND",
                            "supplierName": "Deluxe Taxi Amsterdam",
                            "supplierId": 68,
                            "supplierLocationId": 108,
                            "price": {
                                "currencyCode": "USD",
                                "amount": "54.29"
                            }
                        }
                    ],
                    "geniusDiscount": false,
                    "categoryLocalised": "People carrier",
                    "vehicleType": "LARGE",
                    "descriptionLocalised": "Great choice for families.",
                    "priceRuleId": 19469,
                    "description": "People Carrier",
                    "bags": 3,
                    "supplierName": "Deluxe Taxi Amsterdam"
                },
                {
                    "category": "Executive",
                    "legPriceBreakdown": [
                        {
                            "supplierLocationId": 106579,
                            "supplierId": 102562,
                            "price": {
                                "amount": "57.90",
                                "currencyCode": "USD"
                            },
                            "supplierName": "I.A.S. Taxi",
                            "journeyDirection": "OUTBOUND"
                        }
                    ],
                    "vehicleType": "EXECUTIVE",
                    "categoryLocalised": "Executive",
                    "geniusDiscount": false,
                    "supplierName": "I.A.S. Taxi",
                    "bags": 2,
                    "description": "Executive",
                    "priceRuleId": 19466,
                    "descriptionLocalised": "Plenty of space to travel in comfort.",
                    "discountType": "NONE",
                    "janusResultReference": "2",
                    "resultId": "795c1cdc-c54e-45d4-ab34-94eedab78bb0",
                    "nonRefundable": false,
                    "supplierId": 102562,
                    "duration": 20,
                    "cancellationLeadTimeMinutes": 1440,
                    "price": {
                        "currencyCode": "USD",
                        "amount": "57.90"
                    },
                    "drivingDistance": 14.32,
                    "meetGreet": true,
                    "passengerCapacity": 4
                },
                {
                    "passengerCapacity": 4,
                    "duration": 20,
                    "price": {
                        "amount": "60.80",
                        "currencyCode": "USD"
                    },
                    "drivingDistance": 14.32,
                    "meetGreet": true,
                    "cancellationLeadTimeMinutes": 1440,
                    "nonRefundable": false,
                    "resultId": "9e205e5a-b106-454f-8fea-ab598162403a",
                    "discountType": "NONE",
                    "janusResultReference": "14",
                    "supplierId": 102562,
                    "bags": 2,
                    "supplierName": "I.A.S. Taxi",
                    "priceRuleId": 119508,
                    "descriptionLocalised": "100% Electric",
                    "description": "Electric Standard",
                    "vehicleType": "STANDARD",
                    "geniusDiscount": false,
                    "categoryLocalised": "Electric Standard",
                    "legPriceBreakdown": [
                        {
                            "supplierName": "I.A.S. Taxi",
                            "journeyDirection": "OUTBOUND",
                            "supplierLocationId": 106579,
                            "supplierId": 102562,
                            "price": {
                                "currencyCode": "USD",
                                "amount": "60.80"
                            }
                        }
                    ],
                    "category": "Electric Standard"
                },
                {
                    "passengerCapacity": 8,
                    "duration": 20,
                    "drivingDistance": 14.32,
                    "meetGreet": true,
                    "price": {
                        "amount": "64.34",
                        "currencyCode": "USD"
                    },
                    "cancellationLeadTimeMinutes": 120,
                    "nonRefundable": false,
                    "discountType": "NONE",
                    "janusResultReference": "6",
                    "resultId": "9b1be674-4785-4e9b-bbcb-e52edd140cdc",
                    "supplierId": 68,
                    "supplierName": "Deluxe Taxi Amsterdam",
                    "bags": 6,
                    "description": "Large People Carrier",
                    "priceRuleId": 19470,
                    "descriptionLocalised": "Ideal for small groups.",
                    "vehicleType": "LARGE",
                    "categoryLocalised": "Large people carrier",
                    "geniusDiscount": false,
                    "legPriceBreakdown": [
                        {
                            "journeyDirection": "OUTBOUND",
                            "supplierName": "Deluxe Taxi Amsterdam",
                            "price": {
                                "currencyCode": "USD",
                                "amount": "64.34"
                            },
                            "supplierId": 68,
                            "supplierLocationId": 108
                        }
                    ],
                    "category": "Large People Carrier"
                }
            ],
            "journeys": [
                {
                    "pickupLocation": {
                        "description": "Aankomstpassage 1, 1118 AX Schiphol, Netherlands",
                        "name": "Schiphol Airport (AMS), Aankomstpassage 1, 1118 AX Schiphol, Netherlands",
                        "locationId": "ChIJLRb94DThxUcRiPHO8YMV1cc",
                        "airportCode": "AMS",
                        "locationType": "AIRPORT",
                        "postcode": "1118 AX",
                        "establishment": "Schiphol Airport (AMS)",
                        "timezone": "Europe/Amsterdam",
                        "city": "Schiphol",
                        "country": "NL"
                    },
                    "janusSearchReference": "46b7c61b-d77f-4f23-bc7b-eba7c28191b6",
                    "journeyDirection": "OUTBOUND",
                    "dropOffLocation": {
                        "locationType": "GEO",
                        "city": "Amsterdam",
                        "country": "NL",
                        "establishment": "Van Gogh Museum",
                        "postcode": "1071 DJ",
                        "locationId": "ChIJX1rTlu8JxkcRGsV8-a4oKMI",
                        "name": "Van Gogh Museum, Museumplein 6, 1071 DJ Amsterdam, Netherlands",
                        "description": "Museumplein 6, 1071 DJ Amsterdam, Netherlands"
                    },
                    "requestedPickupDateTime": "2024-11-23T19:30:00"
                }
            ]
        }
    }
]

2025-08-25 12:21:04,758 - evaluation_logger_Cross-260 - INFO - Final Response: <｜begin▁of▁sentence｜># 1. 什么是 TypeScript

TypeScript 是 JavaScript 的一个超集，主要提供了类型系统和对 ES6 的支持，它由 Microsoft 开发，代码开源于 GitHub 上。

它的第一个版本发布于 2012 年 10 月，经历了多次更新后，现在已成为前端社区中不可忽视的力量，不仅在 Microsoft 内部得到广泛运用，而且 Google 开发的 Angular 从 2.0 开始就使用了 TypeScript 作为开发语言，Vue 3.0 也使用 TypeScript 进行了重构。

TypeScript 发展至今，已经成为大型项目的标配，其提供的静态类型系统，大大增强了代码的可读性以及可维护性；同时，它提供最新的和不断发展的 JavaScript 特性，能让我们建立更健壮的组件。

## TypeScript 的特点

TypeScript 主要有 3 大特点：

- **始于 JavaScript，归于 JavaScript**

TypeScript 可以编译出纯净、 简洁的 JavaScript 代码，并且可以运行在任何浏览器上、Node.js 环境中和任何支持 ECMAScript 3（或更高版本）的 JavaScript 引擎中。

- **强大的类型系统**

类型系统允许 JavaScript 开发者在开发 JavaScript 应用程序时使用高效的开发工具和常用操作比如静态检查和代码重构。

- **先进的 JavaScript**

TypeScript 提供最新的和不断发展的 JavaScript 特性，包括那些来自 2015 年的 ECMAScript 和未来的提案中的特性，比如异步功能和 Decorators，以帮助建立健壮的组件。

## 总结

TypeScript 在社区的流行度越来越高，它非常适用于一些大型项目，也非常适用于一些基础库，极大地帮助我们提升了开发效率和体验。

# 2. 安装 TypeScript

TypeScript 的命令行工具安装方法如下：

```bash
npm install -g typescript
```

以上命令会在全局环境下安装 `tsc` 命令，安装完成之后，我们就可以在任何地方执行 `tsc` 命令了。

编译一个 TypeScript 文件很简单：

```bash
tsc hello.ts
```

我们约定使用 TypeScript 编写的文件以 `.ts` 为后缀，用 TypeScript 编写 React 时，以 `.tsx` 为后缀。

## 编辑器

TypeScript 最大的优势之一便是增强了编辑器和 IDE 的功能，包括代码补全、接口提示、跳转到定义、重构等。

主流的编辑器都支持 TypeScript，这里我推荐使用 [Visual Studio Code](https://code.visualstudio.com/)。

它是一款开源，跨终端的轻量级编辑器，内置了对 TypeScript 的支持。

另外它本身也是用 TypeScript 编写的。

下载安装：https://code.visualstudio.com/

安装其他编辑器或 IDE 的支持，请查看 [TypeScript Editor Support](https://github.com/Microsoft/TypeScript/wiki/TypeScript-Editor-Support)。

# 3. Hello TypeScript

我们从一个简单的例子开始。

将以下代码复制到 `hello.ts` 中：

```ts
function sayHello(person: string) {
    return 'Hello, ' + person;
}

let user = 'Tom';
console.log(sayHello(user));
```

然后执行

```bash
tsc hello.ts
```

这时候会生成一个编译好的文件 `hello.js`：

```js
function sayHello(person) {
    return 'Hello, ' + person;
}
var user = 'Tom';
console.log(sayHello(user));
```

在 TypeScript 中，我们使用 `:` 指定变量的类型，`:` 的前后有没有空格都可以。

上述例子中，我们用 `:` 指定 `person` 参数类型为 `string`。但是编译为 js 之后，并没有什么检查的代码被插入进来。

这是因为 **TypeScript 只会在编译时对类型进行静态检查，如果发现有错误，编译的时候就会报错**。而在运行时，与普通的 JavaScript 文件一样，不会对类型进行检查。

如果我们需要保证运行时的参数类型，还是得手动对类型进行判断：

```ts
function sayHello(person: string) {
    if (typeof person === 'string') {
        return 'Hello, ' + person;
    } else {
        throw new Error('person is not a string');
    }
}

let user = 'Tom';
console.log(sayHello(user));
```

> `let` 是 ES6 中的关键字，和 `var` 类似，用于定义一个局部变量，可以参阅 [let 和 const 命令](http://es6.ruanyifeng.com/#docs/let)。

下面尝试把这段代码编译一下：

```ts
function sayHello(person: string) {
    return 'Hello, ' + person;
}

let user = [0, 1, 2];
console.log(sayHello(user));
```

编辑器中会提示错误，编译的时候也会出错：

```bash
hello.ts:6:22 - error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'string'.
```

但是还是生成了 js 文件：

```js
function sayHello(person) {
    return 'Hello, ' + person;
}
var user = [0, 1, 2];
console.log(sayHello(user));
```

这是因为 **TypeScript 编译的时候即使报错了，还是会生成编译结果**，我们仍然可以使用这个编译之后的文件。

如果要在报错的时候终止 js 文件的生成，可以在 `tsconfig.json` 中配置 `noEmitOnError` 即可。关于 `tsconfig.json`，请参阅[官方手册](http://www.typescriptlang.org/docs/handbook/tsconfig-json.html)（[中文版](https://zhongsp.gitbooks.io/typescript-handbook/content/doc/handbook/tsconfig.json.html)）。

# 4. 基础

## 原始数据类型

JavaScript 的类型分为两种：原始数据类型（Primitive data types）和对象类型（Object types）。

原始数据类型包括：布尔值、数值、字符串、`null`、`undefined` 以及 ES6 中的新类型 [`Symbol`](http://es6.ruanyifeng.com/#docs/symbol) 和 ES10 中的新类型 [`BigInt`](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/BigInt)。

本节主要介绍**前五种**原始数据类型在 TypeScript 中的应用。

### 布尔值

布尔值是最基础的数据类型，在 TypeScript 中，使用 `boolean` 定义布尔值类型：

```ts
let isDone: boolean = false;

// 编译通过
// 后面约定，未强调编译错误的代码片段，默认为编译通过
```

注意，使用构造函数 `Boolean` 创造的对象**不是**布尔值：

```ts
let createdByNewBoolean: boolean = new Boolean(1);

// Type 'Boolean' is not assignable to type 'boolean'.
//   'boolean' is a primitive, but 'Boolean' is a wrapper object. Prefer using 'boolean' when possible.
```

事实上 `new Boolean()` 返回的是一个 `Boolean` 对象：

```ts
let createdByNewBoolean: Boolean = new Boolean(1);
```

直接调用 `Boolean` 也可以返回一个 `boolean` 类型：

```ts
let createdByBoolean: boolean = Boolean(1);
```

在 TypeScript 中，`boolean` 是 JavaScript 中的基本类型，而 `Boolean` 是 JavaScript 中的构造函数。其他基本类型（除了 `null` 和 `undefined`）一样，不再赘述。

### 数值

使用 `number` 定义数值类型：

```ts
let decLiteral: number = 6;
let hexLiteral: number = 0xf00d;
// ES6 中的二进制表示法
let binaryLiteral: number = 0b1010;
// ES6 中的八进制表示法
let octalLiteral: number = 0o744;
let notANumber: number = NaN;
let infinityNumber: number = Infinity;
```

编译结果：

```js
var decLiteral = 6;
var hexLiteral = 0xf00d;
// ES6 中的二进制表示法
var binaryLiteral = 10;
// ES6 中的八进制表示法
var octalLiteral = 484;
var notANumber = NaN;
var infinityNumber = Infinity;
```

其中 `0b1010` 和 `0o744` 是 [ES6 中的二进制和八进制表示法](http://es6.ruanyifeng.com/#docs/number#二进制和八进制表示法)，它们会被编译为十进制数字。

### 字符串

使用 `string` 定义字符串类型：

```ts
let myName: string = 'Tom';
let myAge: number = 25;

// 模板字符串
let sentence: string = `Hello, my name is ${myName}.
I'll be ${myAge + 1} years old next month.`;
```

编译结果：

```js
var myName = 'Tom';
var myAge = 25;
// 模板字符串
var sentence = "Hello, my name is " + myName + ".\nI'll be " + (myAge + 1) + " years old next month.";
```

其中 ` 用来定义 [ES6 中的模板字符串](http://es6.ruanyifeng.com/#docs/string#模板字符串)，`${expr}` 用来在模板字符串中嵌入表达式。

### 空值

JavaScript 没有空值（Void）的概念，在 TypeScript 中，可以用 `void` 表示没有任何返回值的函数：

```ts
function alertName(): void {
    alert('My name is Tom');
}
```

声明一个 `void` 类型的变量没有什么用，因为你只能将它赋值为 `undefined` 和 `null`（只在 --strictNullChecks 未指定时）：

```ts
let unusable: void = undefined;
```

### Null 和 Undefined

在 TypeScript 中，可以使用 `null` 和 `undefined` 来定义这两个原始数据类型：

```ts
let u: undefined = undefined;
let n: null = null;
```

与 `void` 的区别是，`undefined` 和 `null` 是所有类型的子类型。也就是说 `undefined` 类型的变量，可以赋值给 `number` 类型的变量：

```ts
// 这样不会报错
let num: number = undefined;
```

```ts
// 这样也不会报错
let u: undefined;
let num: number = u;
```

而 `void` 类型的变量不能赋值给 `number` 类型的变量：

```ts
let u: void;
let num: number = u;

// Type 'void' is not assignable to type 'number'.
```

## 任意值

任意值（Any）用来表示允许赋值为任意类型。

### 什么是任意值类型

如果是一个普通类型，在赋值过程中改变类型是不被允许的：

```ts
let myFavoriteNumber: string = 'seven';
myFavoriteNumber = 7;

// index.ts(2,1): error TS2322: Type 'number' is not assignable to type 'string'.
```

但如果是 `any` 类型，则允许被赋值为任意类型。

```ts
let myFavoriteNumber: any = 'seven';
myFavoriteNumber = 7;
```

### 任意值的属性和方法

在任意值上访问任何属性都是允许的：

```ts
let anyThing: any = 'hello';
console.log(anyThing.myName);
console.log(anyThing.myName.firstName);
```

也允许调用任何方法：

```ts
let anyThing: any = 'Tom';
anyThing.setName('Jerry');
anyThing.setName('Jerry').sayHello();
anyThing.myName.setFirstName('Cat');
```

可以认为，**声明一个变量为任意值之后，对它的任何操作，返回的内容的类型都是任意值**。

### 未声明类型的变量

**变量如果在声明的时候，未指定其类型，那么它会被识别为任意值类型**：

```ts
let something;
something = 'seven';
something = 7;

something.setName('Tom');
```

等价于

```ts
let something: any;
something = 'seven';
something = 7;

something.setName('Tom');
```

## 类型推论

如果没有明确的指定类型，那么 TypeScript 会依照类型推论（Type Inference）的规则推断出一个类型。

### 什么是类型推论

以下代码虽然没有指定类型，但是会在编译的时候报错：

```ts
let myFavoriteNumber = 'seven';
myFavoriteNumber = 7;

// index.ts(2,1): error TS2322: Type 'number' is not assignable to type 'string'.
```

事实上，它等价于：

```ts
let myFavoriteNumber: string = 'seven';
myFavoriteNumber = 7;

// index.ts(2,1): error TS2322: Type 'number' is not assignable to type 'string'.
```

TypeScript 会在没有明确的指定类型的时候推测出一个类型，这就是类型推论。

**如果定义的时候没有赋值，不管之后有没有赋值，都会被推断成 `any` 类型而完全不被类型检查**：

```ts
let myFavoriteNumber;
myFavoriteNumber = 'seven';
myFavoriteNumber = 7;
```

## 联合类型

联合类型（Union Types）表示取值可以为多种类型中的一种。

### 简单的例子

```ts
let myFavoriteNumber: string | number;
myFavoriteNumber = 'seven';
myFavoriteNumber = 7;
```

```ts
let myFavoriteNumber: string | number;
myFavoriteNumber = true;

// index.ts(2,1): error TS2322: Type 'boolean' is not assignable to type 'string | number'.
//   Type 'boolean' is not assignable to type 'number'.
```

联合类型使用 `|` 分隔每个类型。

这里的 `let myFavoriteNumber: string | number` 的含义是，允许 `myFavoriteNumber` 的类型是 `string` 或者 `number`，但是不能是其他类型。

### 访问联合类型的属性或方法

当 TypeScript 不确定一个联合类型的变量到底是哪个类型的时候，我们**只能访问此联合类型的所有类型里共有的属性或方法**：

```ts
function getLength(something: string | number): number {
    return something.length;
}

// index.ts(2,22): error TS2339: Property 'length' does not exist on type 'string | number'.
//   Property 'length' does not exist on type 'number'.
```

上例中，`length` 不是 `string` 和 `number` 的共有属性，所以会报错。

访问 `string` 和 `number` 的共有属性是没问题的：

```ts
function getString(something: string | number): string {
    return something.toString();
}
```

联合类型的变量在被赋值的时候，会根据类型推论的规则推断出一个类型：

```ts
let myFavoriteNumber: string | number;
myFavoriteNumber = 'seven';
console.log(myFavoriteNumber.length); // 5
myFavoriteNumber = 7;
console.log(myFavoriteNumber.length); // 编译时报错

// index.ts(5,30): error TS2339: Property 'length' does not exist on type 'number'.
```

上例中，第二行的 `myFavoriteNumber` 被推断成了 `string`，访问它的 `length` 属性不会报错。

而第四行的 `myFavoriteNumber` 被推断成了 `number`，访问它的 `length` 属性时就报错了。

## 对象的类型——接口

在 TypeScript 中，我们使用接口（Interfaces）来定义对象的类型。

### 什么是接口

在面向对象语言中，接口（Interfaces）是一个很重要的概念，它是对行为的抽象，而具体如何行动需要由类（classes）去实现（implement）。

TypeScript 中的接口是一个非常灵活的概念，除了可用于[对类的一部分行为进行抽象](https://ts.xcatliu.com/advanced/class-and-interfaces.html#类实现接口)外，也常用于对「对象的形状（Shape）」进行描述。

### 简单的例子

```ts
interface Person {
    name: string;
    age: number;
}

let tom: Person = {
    name: 'Tom',
    age: 25
};
```

上面的例子中，我们定义了一个接口 `Person`，接着定义了一个变量 `tom`，它的类型是 `Person`。这样，我们就约束了 `tom` 的形状必须和接口 `Person` 一致。

接口一般首字母大写。[有的编程语言中会建议接口的名称加上 `I` 前缀](https://msdn.microsoft.com/en-us/library/8bc1fexb(v=vs.71).aspx)。

定义的变量比接口少了一些属性是不允许的：

```ts
interface Person {
    name: string;
    age: number;
}

let tom: Person = {
    name: 'Tom'
};

// index.ts(6,5): error TS2322: Type '{ name: string; }' is not assignable to type 'Person'.
//   Property 'age' is missing in type '{ name: string; }'.
```

多一些属性也是不允许的：

```ts
interface Person {
    name: string;
    age: number;
}

let tom: Person = {
    name: 'Tom',
    age: 25,
    gender: 'male'
};

// index.ts(9,5): error TS2322: Type '{ name: string; age: number; gender: string; }' is not assignable to type 'Person'.
//   Object literal may only specify known properties, and 'gender' does not exist in type 'Person'.
```

可见，**赋值的时候，变量的形状必须和接口的形状保持一致**。

### 可选属性

有时我们希望不要完全匹配一个形状，那么可以用可选属性：

```ts
interface Person {
    name: string;
    age?: number;
}

let tom: Person = {
    name: 'Tom'
};
```

```ts
interface Person {
    name: string;
    age?: number;
}

let tom: Person = {
    name: 'Tom',
    age: 25
};
```

可选属性的含义是该属性可以不存在。

这时**仍然不允许添加未定义的属性**：

```ts
interface Person {
    name: string;
    age?: number;
}

let tom: Person = {
    name: 'Tom',
    age: 25,
    gender: 'male'
};

// index.ts(9,5): error TS2322: Type '{ name: string; age: number; gender: string; }' is not assignable to type 'Person'.
//   Object literal may only specify known properties, and 'gender' does not exist in type 'Person'.
```

### 任意属性

有时候我们希望一个接口允许有任意的属性，可以使用如下方式：

```ts
interface Person {
    name: string;
    age?: number;
    [propName: string]: any;
}

let tom: Person = {
    name: 'Tom',
    gender: 'male'
};
```

使用 `[propName: string]` 定义了任意属性取 `string` 类型的值。

需要注意的是，**一旦定义了任意属性，那么确定属性和可选属性的类型都必须是它的类型的子集**：

```ts
interface Person {
    name: string;
    age?: number;
    [propName: string]: string;
}

let tom: Person = {
    name: 'Tom',
    age: 25,
    gender: 'male'
};



2025-08-25 12:21:11,916 - evaluation_logger_Cross-260 - INFO - Complete Result: {'score': 0, 'reason': "The response does not address any of the requested information in the user's query."}
2025-08-25 12:21:18,185 - evaluation_logger_Cross-260 - INFO - Correct Result: {'score': 0, 'reason': 'All information in the response is incorrect.'}
2025-08-25 12:21:18,185 - evaluation_logger_Cross-260 - INFO - Message: Success.
2025-08-25 12:21:18,185 - evaluation_logger_Cross-260 - INFO - Success turn num = 4
2025-08-25 12:21:18,185 - evaluation_logger_Cross-260 - INFO - ----------------------------------------------------------------------------------------------------
