2025-08-25 12:01:18,350 - evaluation_logger_Cross-209 - INFO - Test Example Cross-209
2025-08-25 12:01:18,350 - evaluation_logger_Cross-209 - INFO - Query: I'm flying to Vienna for a five-day business trip on November 30, 2024. After my work is done, I'll travel to a nearby city for five days of fun. When the vacation is over, I'll fly back to Hamburg directly from there. Could you look up multi-stop flights that fit my needs?
2025-08-25 12:01:26,940 - evaluation_logger_Cross-209 - INFO - Function Calls: 
[
    {
        "name": "Search_Flight_Location",
        "arguments": {
            "query": "Vienna"
        }
    },
    {
        "name": "Search_Flight_Location",
        "arguments": {
            "query": "Hamburg"
        }
    }
]

2025-08-25 12:01:26,940 - evaluation_logger_Cross-209 - INFO - Golden Function Call: 
[
    {
        "name": "Search_Flight_Location",
        "arguments": {
            "query": "Vienna"
        }
    },
    {
        "name": "Search_Flight_Location",
        "arguments": {
            "query": "Hamburg"
        }
    },
    {
        "name": "Location_to_Lat_Long",
        "arguments": {
            "query": "Vienna"
        }
    },
    {
        "name": "Get_Nearby_Cities",
        "arguments": {
            "latitude": "48.20806959999999",
            "longitude": "16.3713095"
        }
    }
]

2025-08-25 12:01:26,940 - evaluation_logger_Cross-209 - INFO - Start compare_single_call: 
{'name': 'Search_Flight_Location', 'arguments': {'query': 'Vienna'}}
{'name': 'Search_Flight_Location', 'arguments': {'query': 'Vienna'}}
2025-08-25 12:01:26,940 - evaluation_logger_Cross-209 - INFO - Rule-based compare success.
2025-08-25 12:01:26,940 - evaluation_logger_Cross-209 - INFO - Start compare_single_call: 
{'name': 'Search_Flight_Location', 'arguments': {'query': 'Hamburg'}}
{'name': 'Search_Flight_Location', 'arguments': {'query': 'Hamburg'}}
2025-08-25 12:01:26,940 - evaluation_logger_Cross-209 - INFO - Rule-based compare success.
2025-08-25 12:01:26,940 - evaluation_logger_Cross-209 - INFO - Success matched: [{'name': 'Search_Flight_Location', 'arguments': {'query': 'Vienna'}}, {'name': 'Search_Flight_Location', 'arguments': {'query': 'Hamburg'}}]
2025-08-25 12:01:26,940 - evaluation_logger_Cross-209 - INFO - Observations:
[
    {
        "status": true,
        "message": "Success",
        "data": [
            {
                "id": "VIE.AIRPORT",
                "type": "AIRPORT",
                "name": "Vienna International Airport",
                "code": "VIE",
                "city": "VIE",
                "cityName": "Vienna",
                "regionName": "Vienna (state)",
                "country": "AT",
                "countryName": "Austria",
                "countryNameShort": "Austria",
                "distanceToCity": {
                    "value": 17.030826851704422,
                    "unit": "km"
                },
                "parent": "VIE"
            }
        ]
    },
    {
        "status": true,
        "message": "Success",
        "data": [
            {
                "id": "HAM.AIRPORT",
                "type": "AIRPORT",
                "name": "Hamburg Airport",
                "code": "HAM",
                "city": "HAM",
                "cityName": "Hamburg",
                "regionName": "Hansestadt Hamburg",
                "country": "DE",
                "countryName": "Germany",
                "countryNameShort": "Germany",
                "distanceToCity": {
                    "value": 9.237113843348254,
                    "unit": "km"
                },
                "parent": "HAM"
            }
        ]
    }
]

2025-08-25 12:01:35,491 - evaluation_logger_Cross-209 - INFO - Function Calls: 
[
    {
        "name": "Location_to_Lat_Long",
        "arguments": {
            "query": "Vienna"
        }
    }
]

2025-08-25 12:01:35,491 - evaluation_logger_Cross-209 - INFO - Golden Function Call: 
[
    {
        "name": "Location_to_Lat_Long",
        "arguments": {
            "query": "Vienna"
        }
    },
    {
        "name": "Get_Nearby_Cities",
        "arguments": {
            "latitude": "48.20806959999999",
            "longitude": "16.3713095"
        }
    },
    {
        "name": "Search_Flight_Location",
        "arguments": {
            "query": "Bratislava"
        }
    }
]

2025-08-25 12:01:35,491 - evaluation_logger_Cross-209 - INFO - Start compare_single_call: 
{'name': 'Location_to_Lat_Long', 'arguments': {'query': 'Vienna'}}
{'name': 'Location_to_Lat_Long', 'arguments': {'query': 'Vienna'}}
2025-08-25 12:01:35,491 - evaluation_logger_Cross-209 - INFO - Rule-based compare success.
2025-08-25 12:01:35,491 - evaluation_logger_Cross-209 - INFO - Success matched: [{'name': 'Location_to_Lat_Long', 'arguments': {'query': 'Vienna'}}]
2025-08-25 12:01:35,492 - evaluation_logger_Cross-209 - INFO - Observations:
[
    {
        "status": true,
        "message": "Success",
        "data": [
            {
                "formatted_address": "Vienna, Austria",
                "geometry": {
                    "location": {
                        "lat": 48.20806959999999,
                        "lng": 16.3713095
                    },
                    "viewport": {
                        "northeast": {
                            "lat": 48.322563,
                            "lng": 16.5774545
                        },
                        "southwest": {
                            "lat": 48.1179032,
                            "lng": 16.1818304
                        }
                    }
                },
                "name": "Vienna",
                "place_id": "ChIJn8o2UZ4HbUcRRluiUYrlwv0",
                "reference": "ChIJn8o2UZ4HbUcRRluiUYrlwv0",
                "types": [
                    "locality",
                    "political"
                ]
            }
        ]
    }
]

2025-08-25 12:01:44,932 - evaluation_logger_Cross-209 - INFO - Function Calls: 
[
    {
        "name": "Get_Nearby_Cities",
        "arguments": {
            "latitude": "48.20806959999999",
            "longitude": "16.3713095"
        }
    }
]

2025-08-25 12:01:44,932 - evaluation_logger_Cross-209 - INFO - Golden Function Call: 
[
    {
        "name": "Get_Nearby_Cities",
        "arguments": {
            "latitude": "48.20806959999999",
            "longitude": "16.3713095"
        }
    },
    {
        "name": "Search_Flight_Location",
        "arguments": {
            "query": "Bratislava"
        }
    },
    {
        "name": "Search_Flights_Multi_Stops",
        "arguments": {
            "legs": [
                {
                    "fromId": "HAM.AIRPORT",
                    "toId": "VIE.AIRPORT",
                    "date": "2024-11-30"
                },
                {
                    "fromId": "BTS.AIRPORT",
                    "toId": "HAM.AIRPORT",
                    "date": "2024-12-10"
                }
            ]
        }
    }
]

2025-08-25 12:01:44,932 - evaluation_logger_Cross-209 - INFO - Start compare_single_call: 
{'name': 'Get_Nearby_Cities', 'arguments': {'latitude': '48.20806959999999', 'longitude': '16.3713095'}}
{'name': 'Get_Nearby_Cities', 'arguments': {'latitude': '48.20806959999999', 'longitude': '16.3713095'}}
2025-08-25 12:01:44,932 - evaluation_logger_Cross-209 - INFO - Rule-based compare success.
2025-08-25 12:01:44,932 - evaluation_logger_Cross-209 - INFO - Success matched: [{'name': 'Get_Nearby_Cities', 'arguments': {'latitude': '48.20806959999999', 'longitude': '16.3713095'}}]
2025-08-25 12:01:44,933 - evaluation_logger_Cross-209 - INFO - Observations:
[
    {
        "status": true,
        "message": "Success",
        "data": [
            {
                "name": "Bratislava",
                "dest_type": "city",
                "latitude": 48.143262,
                "dest_id": -840999,
                "nr_hotels": 902,
                "region": "Bratislavský kraj",
                "country": "Slovakia",
                "cc1": "sk",
                "longitude": 17.108228
            }
        ]
    }
]

2025-08-25 12:01:53,982 - evaluation_logger_Cross-209 - INFO - Function Calls: 
[
    {
        "name": "Search_Flight_Location",
        "arguments": {
            "query": "Bratislava"
        }
    }
]

2025-08-25 12:01:53,982 - evaluation_logger_Cross-209 - INFO - Golden Function Call: 
[
    {
        "name": "Search_Flight_Location",
        "arguments": {
            "query": "Bratislava"
        }
    },
    {
        "name": "Search_Flights_Multi_Stops",
        "arguments": {
            "legs": [
                {
                    "fromId": "HAM.AIRPORT",
                    "toId": "VIE.AIRPORT",
                    "date": "2024-11-30"
                },
                {
                    "fromId": "BTS.AIRPORT",
                    "toId": "HAM.AIRPORT",
                    "date": "2024-12-10"
                }
            ]
        }
    }
]

2025-08-25 12:01:53,982 - evaluation_logger_Cross-209 - INFO - Start compare_single_call: 
{'name': 'Search_Flight_Location', 'arguments': {'query': 'Bratislava'}}
{'name': 'Search_Flight_Location', 'arguments': {'query': 'Bratislava'}}
2025-08-25 12:01:53,982 - evaluation_logger_Cross-209 - INFO - Rule-based compare success.
2025-08-25 12:01:53,982 - evaluation_logger_Cross-209 - INFO - Success matched: [{'name': 'Search_Flight_Location', 'arguments': {'query': 'Bratislava'}}]
2025-08-25 12:01:53,982 - evaluation_logger_Cross-209 - INFO - Observations:
[
    {
        "status": true,
        "message": "Success",
        "data": [
            {
                "id": "BTS.AIRPORT",
                "type": "AIRPORT",
                "name": "Bratislava Airport",
                "code": "BTS",
                "city": "BTS",
                "cityName": "Bratislava",
                "regionName": "Bratislavský kraj",
                "country": "SK",
                "countryName": "Slovakia",
                "countryNameShort": "Slovakia",
                "distanceToCity": {
                    "value": 7.4151241459045965,
                    "unit": "km"
                },
                "parent": "BTS"
            }
        ]
    }
]

2025-08-25 12:02:07,059 - evaluation_logger_Cross-209 - INFO - Function Calls: 
[
    {
        "name": "Search_Flights_Multi_Stops",
        "arguments": {
            "legs": [
                {
                    "fromId": "HAM.AIRPORT",
                    "toId": "VIE.AIRPORT",
                    "date": "2024-11-30"
                },
                {
                    "fromId": "BTS.AIRPORT",
                    "toId": "HAM.AIRPORT",
                    "date": "2024-12-10"
                }
            ]
        }
    }
]

2025-08-25 12:02:07,059 - evaluation_logger_Cross-209 - INFO - Golden Function Call: 
[
    {
        "name": "Search_Flights_Multi_Stops",
        "arguments": {
            "legs": [
                {
                    "fromId": "HAM.AIRPORT",
                    "toId": "VIE.AIRPORT",
                    "date": "2024-11-30"
                },
                {
                    "fromId": "BTS.AIRPORT",
                    "toId": "HAM.AIRPORT",
                    "date": "2024-12-10"
                }
            ]
        }
    }
]

2025-08-25 12:02:07,059 - evaluation_logger_Cross-209 - INFO - Start compare_single_call: 
{'name': 'Search_Flights_Multi_Stops', 'arguments': {'legs': [{'fromId': 'HAM.AIRPORT', 'toId': 'VIE.AIRPORT', 'date': '2024-11-30'}, {'fromId': 'BTS.AIRPORT', 'toId': 'HAM.AIRPORT', 'date': '2024-12-10'}]}}
{'name': 'Search_Flights_Multi_Stops', 'arguments': {'legs': [{'fromId': 'HAM.AIRPORT', 'toId': 'VIE.AIRPORT', 'date': '2024-11-30'}, {'fromId': 'BTS.AIRPORT', 'toId': 'HAM.AIRPORT', 'date': '2024-12-10'}]}}
2025-08-25 12:02:07,060 - evaluation_logger_Cross-209 - INFO - Rule-based compare success.
2025-08-25 12:02:07,060 - evaluation_logger_Cross-209 - INFO - Success matched: [{'name': 'Search_Flights_Multi_Stops', 'arguments': {'legs': [{'fromId': 'HAM.AIRPORT', 'toId': 'VIE.AIRPORT', 'date': '2024-11-30'}, {'fromId': 'BTS.AIRPORT', 'toId': 'HAM.AIRPORT', 'date': '2024-12-10'}]}}]
2025-08-25 12:02:07,061 - evaluation_logger_Cross-209 - INFO - Observations:
[
    {
        "status": true,
        "message": "Success",
        "data": {
            "flightOffers": [
                {
                    "token": "d6a1f_H4sIAAAAAAAA_y2Q226jMBCGnya9WgzmTCWrIoG26YKzhEPU3ljgEAJN4wi7TdKn31GIxp75_l8jH2av1Ek-6vru0Hd7JbVviTqhRFerFnHxpe9GSI0Qn_2x0-t-1F_DtFrGlkFX1Z95kYPERhQvdKxrEPzx_am9KE2OnDz0TYtqogVBMKHkBMepfxcjcZH9aqzfct-5WVwoYiPHWhe2S6PQm8yRvKSuV1Q3tSXp4nxJotib6tKjZSxpaUhayEvRn6_0CvtXmnRxVuVhKelz6NGC5lWUmcXwkZT9Gaf4raTRx4p-qs0Kn-Z5f6mzUsi0qDI6yGsxZHI9pDIp4pkV3S5uObwdIdsL8E2LWhLfNSfmivjTF8VWkTyN_r3cuxQxfdu0HmR7aLnqxfFveyXxxvMcQ4MRih_T1hK2CRzbcTWYY8vBeGfQYbtYw3gykpm5OMlvqzsCzKwQVscMBAG0B8IIA9UsLFEWoDgD0bBgDoWzIIWyZVbTODVQy4K65QA7ZkPuGb6fM7DlBsov28rdl3n6DxsDK2QYAgAA",
                    "segments": [
                        {
                            "departureAirport": {
                                "type": "AIRPORT",
                                "code": "HAM",
                                "name": "Hamburg Airport",
                                "city": "HAM",
                                "cityName": "Hamburg",
                                "country": "DE",
                                "countryName": "Germany",
                                "province": "Hansestadt Hamburg"
                            },
                            "arrivalAirport": {
                                "type": "AIRPORT",
                                "code": "VIE",
                                "name": "Vienna International Airport",
                                "city": "VIE",
                                "cityName": "Vienna",
                                "country": "AT",
                                "countryName": "Austria",
                                "province": "Wien (bundesland)"
                            },
                            "departureTime": "2024-11-30T06:30:00",
                            "arrivalTime": "2024-11-30T08:00:00",
                            "legs": [
                                {
                                    "departureTime": "2024-11-30T06:30:00",
                                    "arrivalTime": "2024-11-30T08:00:00",
                                    "departureAirport": {
                                        "type": "AIRPORT",
                                        "code": "HAM",
                                        "name": "Hamburg Airport",
                                        "city": "HAM",
                                        "cityName": "Hamburg",
                                        "country": "DE",
                                        "countryName": "Germany",
                                        "province": "Hansestadt Hamburg"
                                    },
                                    "arrivalAirport": {
                                        "type": "AIRPORT",
                                        "code": "VIE",
                                        "name": "Vienna International Airport",
                                        "city": "VIE",
                                        "cityName": "Vienna",
                                        "country": "AT",
                                        "countryName": "Austria",
                                        "province": "Wien (bundesland)"
                                    },
                                    "cabinClass": "ECONOMY",
                                    "flightInfo": {
                                        "flightNumber": 7750,
                                        "carrierInfo": {
                                            "operatingCarrier": "EW",
                                            "marketingCarrier": "EW"
                                        }
                                    },
                                    "carriers": [
                                        "EW",
                                        "EW"
                                    ],
                                    "carriersData": [
                                        {
                                            "name": "Eurowings",
                                            "code": "EW"
                                        },
                                        {
                                            "name": "Eurowings",
                                            "code": "EW"
                                        }
                                    ],
                                    "totalTime": 5400,
                                    "amenities": [
                                        {
                                            "category": "AIRCRAFT",
                                            "model": "A320"
                                        },
                                        {
                                            "category": "ENTERTAINMENT",
                                            "cost": "paid"
                                        },
                                        {
                                            "category": "FOOD",
                                            "cost": "paid",
                                            "type": "light_meal"
                                        },
                                        {
                                            "category": "WIFI",
                                            "cost": "paid"
                                        }
                                    ]
                                }
                            ],
                            "totalTime": 5400,
                            "isAtolProtected": false,
                            "showWarningDestinationAirport": true,
                            "showWarningOriginAirport": false
                        },
                        {
                            "departureAirport": {
                                "type": "AIRPORT",
                                "code": "BTS",
                                "name": "Bratislava Airport",
                                "city": "BTS",
                                "cityName": "Bratislava",
                                "country": "SK",
                                "countryName": "Slovakia",
                                "province": "Bratislavský kraj"
                            },
                            "arrivalAirport": {
                                "type": "AIRPORT",
                                "code": "HAM",
                                "name": "Hamburg Airport",
                                "city": "HAM",
                                "cityName": "Hamburg",
                                "country": "DE",
                                "countryName": "Germany",
                                "province": "Hansestadt Hamburg"
                            },
                            "departureTime": "2024-12-10T15:45:00",
                            "arrivalTime": "2024-12-11T11:25:00",
                            "legs": [
                                {
                                    "departureTime": "2024-12-10T15:45:00",
                                    "arrivalTime": "2024-12-10T17:20:00",
                                    "departureAirport": {
                                        "type": "AIRPORT",
                                        "code": "BTS",
                                        "name": "Bratislava Airport",
                                        "city": "BTS",
                                        "cityName": "Bratislava",
                                        "country": "SK",
                                        "countryName": "Slovakia",
                                        "province": "Bratislavský kraj"
                                    },
                                    "arrivalAirport": {
                                        "type": "AIRPORT",
                                        "code": "LTN",
                                        "name": "London Luton Airport",
                                        "city": "LON",
                                        "cityName": "London",
                                        "country": "GB",
                                        "countryName": "United Kingdom",
                                        "province": "Greater London"
                                    },
                                    "cabinClass": "ECONOMY",
                                    "flightInfo": {
                                        "flightNumber": 5456,
                                        "carrierInfo": {
                                            "operatingCarrier": "W9",
                                            "marketingCarrier": "W9"
                                        }
                                    },
                                    "carriers": [
                                        "W9",
                                        "W9"
                                    ],
                                    "carriersData": [
                                        {
                                            "name": "Wizz Air UK",
                                            "code": "W9"
                                        },
                                        {
                                            "name": "Wizz Air UK",
                                            "code": "W9"
                                        }
                                    ],
                                    "totalTime": 9300,
                                    "amenities": [
                                        {
                                            "category": "AIRCRAFT",
                                            "model": "32Q"
                                        },
                                        {
                                            "category": "FOOD",
                                            "cost": "paid",
                                            "type": "light_meal"
                                        }
                                    ],
                                    "vi": {
                                        "protected": true,
                                        "baggageCollection": true,
                                        "airportChange": true
                                    }
                                },
                                {
                                    "departureTime": "2024-12-11T08:50:00",
                                    "arrivalTime": "2024-12-11T11:25:00",
                                    "departureAirport": {
                                        "type": "AIRPORT",
                                        "code": "LHR",
                                        "name": "London Heathrow Airport",
                                        "city": "LON",
                                        "cityName": "London",
                                        "country": "GB",
                                        "countryName": "United Kingdom",
                                        "province": "Greater London"
                                    },
                                    "arrivalAirport": {
                                        "type": "AIRPORT",
                                        "code": "HAM",
                                        "name": "Hamburg Airport",
                                        "city": "HAM",
                                        "cityName": "Hamburg",
                                        "country": "DE",
                                        "countryName": "Germany",
                                        "province": "Hansestadt Hamburg"
                                    },
                                    "cabinClass": "ECONOMY",
                                    "flightInfo": {
                                        "flightNumber": 7461,
                                        "carrierInfo": {
                                            "operatingCarrier": "EW",
                                            "marketingCarrier": "EW"
                                        }
                                    },
                                    "carriers": [
                                        "EW",
                                        "EW"
                                    ],
                                    "carriersData": [
                                        {
                                            "name": "Eurowings",
                                            "code": "EW"
                                        },
                                        {
                                            "name": "Eurowings",
                                            "code": "EW"
                                        }
                                    ],
                                    "totalTime": 5700,
                                    "amenities": [
                                        {
                                            "category": "AIRCRAFT",
                                            "model": "A319"
                                        },
                                        {
                                            "category": "ENTERTAINMENT",
                                            "cost": "paid"
                                        },
                                        {
                                            "category": "FOOD",
                                            "cost": "paid",
                                            "type": "light_meal"
                                        },
                                        {
                                            "category": "WIFI",
                                            "cost": "paid"
                                        }
                                    ]
                                }
                            ],
                            "totalTime": 70800,
                            "isAtolProtected": false,
                            "isVirtualInterlining": true,
                            "showWarningDestinationAirport": false,
                            "showWarningOriginAirport": true
                        }
                    ]
                },
                {
                    "token": "d6a1f_H4sIAAAAAAAA_1VQ23LaMBD9muSpliXfnRlNB2xDHHwp8W2cF40Rxhho1FpqAH99haEPnaPdPeeMLqvdC_GLv6jq7tR3e8GVPxx0TLCuES2g7Ke6G2TaMHbsPzu16Qf1dRaXYaDDJC2_zfNMSgT9wFORqkjQl_p7exEKHyh-7jctaLDiuu6dcoo1vVo-xIAtYLzC97fMMSeLMoENYOrvuWElXv5xNwe8TBbzQp_UFsfe-RL5AY9zfp5qfx7TsZxHfplMsQilXqSRH-r_Ih1rGHkoK_qzKE4hj8q3LB2LsTitYXI0tAyFPMmTrPTXWn74iMqDaNYF49VxsZJvoMKv7bg8raKgHiMPXqZWWkoxAsCwXTRp1nCMdPveJ6MCO_dfs63AWez_WD62CawhDVnPvD21VPTsc9VecVDZtgkVOVX2pRlKRCrXNExLkaNtqTTqmwHhf4ZhImgrCD2MJ837_XW8OpYkT_pMro5AMEHyveToBskbMivA2gUIZSCrpLEh7lwWStxYli3RqGFZkrXEdsxGkh0xZO4Jetx2IOHt3Eicwboi5y-h5-L8RAIAAA..",
                    "segments": [
                        {
                            "departureAirport": {
                                "type": "AIRPORT",
                                "code": "HAM",
                                "name": "Hamburg Airport",
                                "city": "HAM",
                                "cityName": "Hamburg",
                                "country": "DE",
                                "countryName": "Germany",
                                "province": "Hansestadt Hamburg"
                            },
                            "arrivalAirport": {
                                "type": "AIRPORT",
                                "code": "VIE",
                                "name": "Vienna International Airport",
                                "city": "VIE",
                                "cityName": "Vienna",
                                "country": "AT",
                                "countryName": "Austria",
                                "province": "Wien (bundesland)"
                            },
                            "departureTime": "2024-11-30T06:30:00",
                            "arrivalTime": "2024-11-30T08:00:00",
                            "legs": [
                                {
                                    "departureTime": "2024-11-30T06:30:00",
                                    "arrivalTime": "2024-11-30T08:00:00",
                                    "departureAirport": {
                                        "type": "AIRPORT",
                                        "code": "HAM",
                                        "name": "Hamburg Airport",
                                        "city": "HAM",
                                        "cityName": "Hamburg",
                                        "country": "DE",
                                        "countryName": "Germany",
                                        "province": "Hansestadt Hamburg"
                                    },
                                    "arrivalAirport": {
                                        "type": "AIRPORT",
                                        "code": "VIE",
                                        "name": "Vienna International Airport",
                                        "city": "VIE",
                                        "cityName": "Vienna",
                                        "country": "AT",
                                        "countryName": "Austria",
                                        "province": "Wien (bundesland)"
                                    },
                                    "cabinClass": "ECONOMY",
                                    "flightInfo": {
                                        "flightNumber": 7750,
                                        "carrierInfo": {
                                            "operatingCarrier": "EW",
                                            "marketingCarrier": "EW"
                                        }
                                    },
                                    "carriers": [
                                        "EW",
                                        "EW"
                                    ],
                                    "carriersData": [
                                        {
                                            "name": "Eurowings",
                                            "code": "EW"
                                        },
                                        {
                                            "name": "Eurowings",
                                            "code": "EW"
                                        }
                                    ],
                                    "totalTime": 5400,
                                    "amenities": [
                                        {
                                            "category": "AIRCRAFT",
                                            "model": "A320"
                                        },
                                        {
                                            "category": "ENTERTAINMENT",
                                            "cost": "paid"
                                        },
                                        {
                                            "category": "FOOD",
                                            "cost": "paid",
                                            "type": "light_meal"
                                        },
                                        {
                                            "category": "WIFI",
                                            "cost": "paid"
                                        }
                                    ]
                                }
                            ],
                            "totalTime": 5400,
                            "isAtolProtected": false,
                            "showWarningDestinationAirport": true,
                            "showWarningOriginAirport": false
                        },
                        {
                            "departureAirport": {
                                "type": "AIRPORT",
                                "code": "BTS",
                                "name": "Bratislava Airport",
                                "city": "BTS",
                                "cityName": "Bratislava",
                                "country": "SK",
                                "countryName": "Slovakia",
                                "province": "Bratislavský kraj"
                            },
                            "arrivalAirport": {
                                "type": "AIRPORT",
                                "code": "HAM",
                                "name": "Hamburg Airport",
                                "city": "HAM",
                                "cityName": "Hamburg",
                                "country": "DE",
                                "countryName": "Germany",
                                "province": "Hansestadt Hamburg"
                            },
                            "departureTime": "2024-12-10T15:45:00",
                            "arrivalTime": "2024-12-11T20:15:00",
                            "legs": [
                                {
                                    "departureTime": "2024-12-10T15:45:00",
                                    "arrivalTime": "2024-12-10T17:20:00",
                                    "departureAirport": {
                                        "type": "AIRPORT",
                                        "code": "BTS",
                                        "name": "Bratislava Airport",
                                        "city": "BTS",
                                        "cityName": "Bratislava",
                                        "country": "SK",
                                        "countryName": "Slovakia",
                                        "province": "Bratislavský kraj"
                                    },
                                    "arrivalAirport": {
                                        "type": "AIRPORT",
                                        "code": "LTN",
                                        "name": "London Luton Airport",
                                        "city": "LON",
                                        "cityName": "London",
                                        "country": "GB",
                                        "countryName": "United Kingdom",
                                        "province": "Greater London"
                                    },
                                    "cabinClass": "ECONOMY",
                                    "flightInfo": {
                                        "flightNumber": 5456,
                                        "carrierInfo": {
                                            "operatingCarrier": "W9",
                                            "marketingCarrier": "W9"
                                        }
                                    },
                                    "carriers": [
                                        "W9",
                                        "W9"
                                    ],
                                    "carriersData": [
                                        {
                                            "name": "Wizz Air UK",
                                            "code": "W9"
                                        },
                                        {
                                            "name": "Wizz Air UK",
                                            "code": "W9"
                                        }
                                    ],
                                    "totalTime": 9300,
                                    "amenities": [
                                        {
                                            "category": "AIRCRAFT",
                                            "model": "32Q"
                                        },
                                        {
                                            "category": "FOOD",
                                            "cost": "paid",
                                            "type": "light_meal"
                                        }
                                    ],
                                    "vi": {
                                        "protected": true,
                                        "baggageCollection": true
                                    }
                                },
                                {
                                    "departureTime": "2024-12-10T22:40:00",
                                    "arrivalTime": "2024-12-11T02:45:00",
                                    "departureAirport": {
                                        "type": "AIRPORT",
                                        "code": "LTN",
                                        "name": "London Luton Airport",
                                        "city": "LON",
                                        "cityName": "London",
                                        "country": "GB",
                                        "countryName": "United Kingdom",
                                        "province": "Greater London"
                                    },
                                    "arrivalAirport": {
                                        "type": "AIRPORT",
                                        "code": "TIA",
                                        "name": "Tirana International Airport Mother Teresa",
                                        "city": "TIA",
                                        "cityName": "Tirana",
                                        "country": "AL",
                                        "countryName": "Albania",
                                        "province": "Qarku i Tiranes"
                                    },
                                    "cabinClass": "ECONOMY",
                                    "flightInfo": {
                                        "flightNumber": 5006,
                                        "carrierInfo": {
                                            "operatingCarrier": "W9",
                                            "marketingCarrier": "W9"
                                        }
                                    },
                                    "carriers": [
                                        "W9",
                                        "W9"
                                    ],
                                    "carriersData": [
                                        {
                                            "name": "Wizz Air UK",
                                            "code": "W9"
                                        },
                                        {
                                            "name": "Wizz Air UK",
                                            "code": "W9"
                                        }
                                    ],
                                    "totalTime": 11100,
                                    "amenities": [
                                        {
                                            "category": "AIRCRAFT",
                                            "model": "32Q"
                                        },
                                        {
                                            "category": "FOOD",
                                            "cost": "paid",
                                            "type": "light_meal"
                                        }
                                    ],
                                    "vi": {
                                        "protected": true,
                                        "baggageCollection": true
                                    }
                                },
                                {
                                    "departureTime": "2024-12-11T17:20:00",
                                    "arrivalTime": "2024-12-11T20:15:00",
                                    "departureAirport": {
                                        "type": "AIRPORT",
                                        "code": "TIA",
                                        "name": "Tirana International Airport Mother Teresa",
                                        "city": "TIA",
                                        "cityName": "Tirana",
                                        "country": "AL",
                                        "countryName": "Albania",
                                        "province": "Qarku i Tiranes"
                                    },
                                    "arrivalAirport": {
                                        "type": "AIRPORT",
                                        "code": "HAM",
                                        "name": "Hamburg Airport",
                                        "city": "HAM",
                                        "cityName": "Hamburg",
                                        "country": "DE",
                                        "countryName": "Germany",
                                        "province": "Hansestadt Hamburg"
                                    },
                                    "cabinClass": "ECONOMY",
                                    "flightInfo": {
                                        "flightNumber": 5107,
                                        "carrierInfo": {
                                            "operatingCarrier": "W4",
                                            "marketingCarrier": "W4"
                                        }
                                    },
                                    "carriers": [
                                        "W4",
                                        "W4"
                                    ],
                                    "carriersData": [
                                        {
                                            "name": "Wizz Air Malta",
                                            "code": "W4"
                                        },
                                        {
                                            "name": "Wizz Air Malta",
                                            "code": "W4"
                                        }
                                    ],
                                    "totalTime": 10500,
                                    "amenities": [
                                        {
                                            "category": "AIRCRAFT",
                                            "model": "A321"
                                        },
                                        {
                                            "category": "FOOD",
                                            "cost": "paid",
                                            "type": "light_meal"
                                        }
                                    ]
                                }
                            ],
                            "totalTime": 102600,
                            "isAtolProtected": false,
                            "isVirtualInterlining": true,
                            "showWarningDestinationAirport": false,
                            "showWarningOriginAirport": true
                        }
                    ]
                },
                {
                    "token": "d6a1f_H4sIAAAAAAAA_0VQa5OaMBT9NbufSkh4ys5kOgjosvKoy2volwxGRNRuWpKtyq9vRNvOyb33nDN53Ny9ED_5i6ruTn23F1z55KBjgnWNaAFlP9TdINOGsWP_0alNP6ivblyGgQ6TtPwyzzMpEfQDT0WqIkFf6q_tRSh8oPi537SgwYrjOHfKKdb0avkQA7aA8Qrf37KZOVmUCWwAU3_PDSvxA_9uDniZLOaFPqktjr3zJfIDHuf8PNX-PKZjOY_8MpliEUq9SCM_1P9GOtYw8lBW9GdRnEIelW9ZOhZjcVrD5GhoGQp5kidZ6a-1_PA9Kg-iWReMV8fFSr6BCr-24_K0ioJ6jDx4mVppKcUIAMN20KRZwzHS7XufjAo8u_-abQXOYv_b8rFNYA1pyHrm7amlomcfq_aKg8q2TajIqbLfmqFEpHJMw7QUOdqWSqO-GRBqCkL_DMNE0P5vPGner-G6aQdJnnRXro5AMEHyveToBskb4hZg7QDXBVkl9YY4c1kocWJZtkSjhmVJ1hJ7ZjaS7Ighc0_Q47IDCW_nRjIbrCua_QFqFF9LQwIAAA..",
                    "segments": [
                        {
                            "departureAirport": {
                                "type": "AIRPORT",
                                "code": "HAM",
                                "name": "Hamburg Airport",
                                "city": "HAM",
                                "cityName": "Hamburg",
                                "country": "DE",
                                "countryName": "Germany",
                                "province": "Hansestadt Hamburg"
                            },
                            "arrivalAirport": {
                                "type": "AIRPORT",
                                "code": "VIE",
                                "name": "Vienna International Airport",
                                "city": "VIE",
                                "cityName": "Vienna",
                                "country": "AT",
                                "countryName": "Austria",
                                "province": "Wien (bundesland)"
                            },
                            "departureTime": "2024-11-30T06:30:00",
                            "arrivalTime": "2024-11-30T08:00:00",
                            "legs": [
                                {
                                    "departureTime": "2024-11-30T06:30:00",
                                    "arrivalTime": "2024-11-30T08:00:00",
                                    "departureAirport": {
                                        "type": "AIRPORT",
                                        "code": "HAM",
                                        "name": "Hamburg Airport",
                                        "city": "HAM",
                                        "cityName": "Hamburg",
                                        "country": "DE",
                                        "countryName": "Germany",
                                        "province": "Hansestadt Hamburg"
                                    },
                                    "arrivalAirport": {
                                        "type": "AIRPORT",
                                        "code": "VIE",
                                        "name": "Vienna International Airport",
                                        "city": "VIE",
                                        "cityName": "Vienna",
                                        "country": "AT",
                                        "countryName": "Austria",
                                        "province": "Wien (bundesland)"
                                    },
                                    "cabinClass": "ECONOMY",
                                    "flightInfo": {
                                        "flightNumber": 7750,
                                        "carrierInfo": {
                                            "operatingCarrier": "EW",
                                            "marketingCarrier": "EW"
                                        }
                                    },
                                    "carriers": [
                                        "EW",
                                        "EW"
                                    ],
                                    "carriersData": [
                                        {
                                            "name": "Eurowings",
                                            "code": "EW"
                                        },
                                        {
                                            "name": "Eurowings",
                                            "code": "EW"
                                        }
                                    ],
                                    "totalTime": 5400,
                                    "amenities": [
                                        {
                                            "category": "AIRCRAFT",
                                            "model": "A320"
                                        },
                                        {
                                            "category": "ENTERTAINMENT",
                                            "cost": "paid"
                                        },
                                        {
                                            "category": "FOOD",
                                            "cost": "paid",
                                            "type": "light_meal"
                                        },
                                        {
                                            "category": "WIFI",
                                            "cost": "paid"
                                        }
                                    ]
                                }
                            ],
                            "totalTime": 5400,
                            "isAtolProtected": false,
                            "showWarningDestinationAirport": true,
                            "showWarningOriginAirport": false
                        },
                        {
                            "departureAirport": {
                                "type": "AIRPORT",
                                "code": "BTS",
                                "name": "Bratislava Airport",
                                "city": "BTS",
                                "cityName": "Bratislava",
                                "country": "SK",
                                "countryName": "Slovakia",
                                "province": "Bratislavský kraj"
                            },
                            "arrivalAirport": {
                                "type": "AIRPORT",
                                "code": "HAM",
                                "name": "Hamburg Airport",
                                "city": "HAM",
                                "cityName": "Hamburg",
                                "country": "DE",
                                "countryName": "Germany",
                                "province": "Hansestadt Hamburg"
                            },
                            "departureTime": "2024-12-10T15:45:00",
                            "arrivalTime": "2024-12-11T20:15:00",
                            "legs": [
                                {
                                    "departureTime": "2024-12-10T15:45:00",
                                    "arrivalTime": "2024-12-10T17:20:00",
                                    "departureAirport": {
                                        "type": "AIRPORT",
                                        "code": "BTS",
                                        "name": "Bratislava Airport",
                                        "city": "BTS",
                                        "cityName": "Bratislava",
                                        "country": "SK",
                                        "countryName": "Slovakia",
                                        "province": "Bratislavský kraj"
                                    },
                                    "arrivalAirport": {
                                        "type": "AIRPORT",
                                        "code": "LTN",
                                        "name": "London Luton Airport",
                                        "city": "LON",
                                        "cityName": "London",
                                        "country": "GB",
                                        "countryName": "United Kingdom",
                                        "province": "Greater London"
                                    },
                                    "cabinClass": "ECONOMY",
                                    "flightInfo": {
                                        "flightNumber": 5456,
                                        "carrierInfo": {
                                            "operatingCarrier": "W9",
                                            "marketingCarrier": "W9"
                                        }
                                    },
                                    "carriers": [
                                        "W9",
                                        "W9"
                                    ],
                                    "carriersData": [
                                        {
                                            "name": "Wizz Air UK",
                                            "code": "W9"
                                        },
                                        {
                                            "name": "Wizz Air UK",
                                            "code": "W9"
                                        }
                                    ],
                                    "totalTime": 9300,
                                    "amenities": [
                                        {
                                            "category": "AIRCRAFT",
                                            "model": "32Q"
                                        },
                                        {
                                            "category": "FOOD",
                                            "cost": "paid",
                                            "type": "light_meal"
                                        }
                                    ],
                                    "vi": {
                                        "protected": true,
                                        "baggageCollection": true
                                    }
                                },
                                {
                                    "departureTime": "2024-12-11T06:10:00",
                                    "arrivalTime": "2024-12-11T10:15:00",
                                    "departureAirport": {
                                        "type": "AIRPORT",
                                        "code": "LTN",
                                        "name": "London Luton Airport",
                                        "city": "LON",
                                        "cityName": "London",
                                        "country": "GB",
                                        "countryName": "United Kingdom",
                                        "province": "Greater London"
                                    },
                                    "arrivalAirport": {
                                        "type": "AIRPORT",
                                        "code": "TIA",
                                        "name": "Tirana International Airport Mother Teresa",
                                        "city": "TIA",
                                        "cityName": "Tirana",
                                        "country": "AL",
                                        "countryName": "Albania",
                                        "province": "Qarku i Tiranes"
                                    },
                                    "cabinClass": "ECONOMY",
                                    "flightInfo": {
                                        "flightNumber": 5002,
                                        "carrierInfo": {
                                            "operatingCarrier": "W9",
                                            "marketingCarrier": "W9"
                                        }
                                    },
                                    "carriers": [
                                        "W9",
                                        "W9"
                                    ],
                                    "carriersData": [
                                        {
                                            "name": "Wizz Air UK",
                                            "code": "W9"
                                        },
                                        {
                                            "name": "Wizz Air UK",
                                            "code": "W9"
                                        }
                                    ],
                                    "totalTime": 11100,
                                    "amenities": [
                                        {
                                            "category": "AIRCRAFT",
                                            "model": "32Q"
                                        },
                                        {
                                            "category": "FOOD",
                                            "cost": "paid",
                                            "type": "light_meal"
                                        }
                                    ],
                                    "vi": {
                                        "protected": true,
                                        "baggageCollection": true
                                    }
                                },
                                {
                                    "departureTime": "2024-12-11T17:20:00",
                                    "arrivalTime": "2024-12-11T20:15:00",
                                    "departureAirport": {
                                        "type": "AIRPORT",
                                        "code": "TIA",
                                        "name": "Tirana International Airport Mother Teresa",
                                        "city": "TIA",
                                        "cityName": "Tirana",
                                        "country": "AL",
                                        "countryName": "Albania",
                                        "province": "Qarku i Tiranes"
                                    },
                                    "arrivalAirport": {
                                        "type": "AIRPORT",
                                        "code": "HAM",
                                        "name": "Hamburg Airport",
                                        "city": "HAM",
                                        "cityName": "Hamburg",
                                        "country": "DE",
                                        "countryName": "Germany",
                                        "province": "Hansestadt Hamburg"
                                    },
                                    "cabinClass": "ECONOMY",
                                    "flightInfo": {
                                        "flightNumber": 5107,
                                        "carrierInfo": {
                                            "operatingCarrier": "W4",
                                            "marketingCarrier": "W4"
                                        }
                                    },
                                    "carriers": [
                                        "W4",
                                        "W4"
                                    ],
                                    "carriersData": [
                                        {
                                            "name": "Wizz Air Malta",
                                            "code": "W4"
                                        },
                                        {
                                            "name": "Wizz Air Malta",
                                            "code": "W4"
                                        }
                                    ],
                                    "totalTime": 10500,
                                    "amenities": [
                                        {
                                            "category": "AIRCRAFT",
                                            "model": "A321"
                                        },
                                        {
                                            "category": "FOOD",
                                            "cost": "paid",
                                            "type": "light_meal"
                                        }
                                    ]
                                }
                            ],
                            "totalTime": 102600,
                            "isAtolProtected": false,
                            "isVirtualInterlining": true,
                            "showWarningDestinationAirport": false,
                            "showWarningOriginAirport": true
                        }
                    ]
                },
                {
                    "token": "d6a1f_H4sIAAAAAAAA_y2Q25KiMBCGn8a5WgKBcJqq1JQCo44c1kGknJsURkQG10xBdlGefluxutP_93eqcuiTlD_dq6oez3V1kp3yt0OVkKIqZIm4-KMeWyh7IZr6UqlF3aqLabRdBoYWJ9tfs00KFmt-4KlYVSD46-6tvEqlazl9qfclKqjiuu6IHad4sXaepqUWIgvt8yN1zEeLC0kJMo3PDbFi38jHZkvnKzzHy4c70Mjrr6Ef2KMu74o3aY-TIRjAG_eVDDst9HCa1b2W-R2O8EcW-19J3Mg49LMhO6-1uCF6ind23ryvwvefWVr313g71ZMhItntOo9uvYzWE8OHfFxdcng9QsR28cOLoqOO-WQuqTN-UhwkTSP_9_y5I6lBbNt86cpzyWUtLqvyRpMUW44CMxT_dKKkLHdNYloKDLLk0NixILeJhRWMx0Y40b1LeTueGoCJMYWsmIYggE5AGGGggnkxWrsogHdP98ydgXDmRiAHRlxT04FKtnctAnBk91oz_Dznmy1zkIHZBe7q7_-e_czxGQIAAA..",
                    "segments": [
                        {
                            "departureAirport": {
                                "type": "AIRPORT",
                                "code": "HAM",
                                "name": "Hamburg Airport",
                                "city": "HAM",
                                "cityName": "Hamburg",
                                "country": "DE",
                                "countryName": "Germany",
                                "province": "Hansestadt Hamburg"
                            },
                            "arrivalAirport": {
                                "type": "AIRPORT",
                                "code": "VIE",
                                "name": "Vienna International Airport",
                                "city": "VIE",
                                "cityName": "Vienna",
                                "country": "AT",
                                "countryName": "Austria",
                                "province": "Wien (bundesland)"
                            },
                            "departureTime": "2024-11-30T07:35:00",
                            "arrivalTime": "2024-11-30T09:10:00",
                            "legs": [
                                {
                                    "departureTime": "2024-11-30T07:35:00",
                                    "arrivalTime": "2024-11-30T09:10:00",
                                    "departureAirport": {
                                        "type": "AIRPORT",
                                        "code": "HAM",
                                        "name": "Hamburg Airport",
                                        "city": "HAM",
                                        "cityName": "Hamburg",
                                        "country": "DE",
                                        "countryName": "Germany",
                                        "province": "Hansestadt Hamburg"
                                    },
                                    "arrivalAirport": {
                                        "type": "AIRPORT",
                                        "code": "VIE",
                                        "name": "Vienna International Airport",
                                        "city": "VIE",
                                        "cityName": "Vienna",
                                        "country": "AT",
                                        "countryName": "Austria",
                                        "province": "Wien (bundesland)"
                                    },
                                    "cabinClass": "ECONOMY",
                                    "flightInfo": {
                                        "flightNumber": 168,
                                        "planeType": "320",
                                        "carrierInfo": {
                                            "operatingCarrier": "OS",
                                            "marketingCarrier": "OS"
                                        }
                                    },
                                    "carriers": [
                                        "OS",
                                        "OS"
                                    ],
                                    "carriersData": [
                                        {
                                            "name": "Austrian Airlines",
                                            "code": "OS"
                                        },
                                        {
                                            "name": "Austrian Airlines",
                                            "code": "OS"
                                        }
                                    ],
                                    "totalTime": 5700,
                                    "amenities": [
                                        {
                                            "category": "AIRCRAFT",
                                            "model": "A320"
                                        },
                                        {
                                            "category": "FOOD",
                                            "cost": "paid",
                                            "type": "light_meal"
                                        },
                                        {
                                            "category": "POWER",
                                            "cost": "free",
                                            "type": [
                                                "usb_port"
                                            ]
                                        },
                                        {
                                            "category": "WIFI",
                                            "cost": "paid"
                                        }
                                    ],
                                    "departureTerminal": "2",
                                    "arrivalTerminal": "3"
                                }
                            ],
                            "totalTime": 5700,
                            "isAtolProtected": false,
                            "showWarningDestinationAirport": true,
                            "showWarningOriginAirport": false
                        },
                        {
                            "departureAirport": {
                                "type": "AIRPORT",
                                "code": "BTS",
                                "name": "Bratislava Airport",
                                "city": "BTS",
                                "cityName": "Bratislava",
                                "country": "SK",
                                "countryName": "Slovakia",
                                "province": "Bratislavský kraj"
                            },
                            "arrivalAirport": {
                                "type": "AIRPORT",
                                "code": "HAM",
                                "name": "Hamburg Airport",
                                "city": "HAM",
                                "cityName": "Hamburg",
                                "country": "DE",
                                "countryName": "Germany",
                                "province": "Hansestadt Hamburg"
                            },
                            "departureTime": "2024-12-10T15:45:00",
                            "arrivalTime": "2024-12-11T11:25:00",
                            "legs": [
                                {
                                    "departureTime": "2024-12-10T15:45:00",
                                    "arrivalTime": "2024-12-10T17:20:00",
                                    "departureAirport": {
                                        "type": "AIRPORT",
                                        "code": "BTS",
                                        "name": "Bratislava Airport",
                                        "city": "BTS",
                                        "cityName": "Bratislava",
                                        "country": "SK",
                                        "countryName": "Slovakia",
                                        "province": "Bratislavský kraj"
                                    },
                                    "arrivalAirport": {
                                        "type": "AIRPORT",
                                        "code": "LTN",
                                        "name": "London Luton Airport",
                                        "city": "LON",
                                        "cityName": "London",
                                        "country": "GB",
                                        "countryName": "United Kingdom",
                                        "province": "Greater London"
                                    },
                                    "cabinClass": "ECONOMY",
                                    "flightInfo": {
                                        "flightNumber": 5456,
                                        "carrierInfo": {
                                            "operatingCarrier": "W9",
                                            "marketingCarrier": "W9"
                                        }
                                    },
                                    "carriers": [
                                        "W9",
                                        "W9"
                                    ],
                                    "carriersData": [
                                        {
                                            "name": "Wizz Air UK",
                                            "code": "W9"
                                        },
                                        {
                                            "name": "Wizz Air UK",
                                            "code": "W9"
                                        }
                                    ],
                                    "totalTime": 9300,
                                    "amenities": [
                                        {
                                            "category": "AIRCRAFT",
                                            "model": "32Q"
                                        },
                                        {
                                            "category": "FOOD",
                                            "cost": "paid",
                                            "type": "light_meal"
                                        }
                                    ],
                                    "vi": {
                                        "protected": true,
                                        "baggageCollection": true,
                                        "airportChange": true
                                    }
                                },
                                {
                                    "departureTime": "2024-12-11T08:50:00",
                                    "arrivalTime": "2024-12-11T11:25:00",
                                    "departureAirport": {
                                        "type": "AIRPORT",
                                        "code": "LHR",
                                        "name": "London Heathrow Airport",
                                        "city": "LON",
                                        "cityName": "London",
                                        "country": "GB",
                                        "countryName": "United Kingdom",
                                        "province": "Greater London"
                                    },
                                    "arrivalAirport": {
                                        "type": "AIRPORT",
                                        "code": "HAM",
                                        "name": "Hamburg Airport",
                                        "city": "HAM",
                                        "cityName": "Hamburg",
                                        "country": "DE",
                                        "countryName": "Germany",
                                        "province": "Hansestadt Hamburg"
                                    },
                                    "cabinClass": "ECONOMY",
                                    "flightInfo": {
                                        "flightNumber": 7461,
                                        "carrierInfo": {
                                            "operatingCarrier": "EW",
                                            "marketingCarrier": "EW"
                                        }
                                    },
                                    "carriers": [
                                        "EW",
                                        "EW"
                                    ],
                                    "carriersData": [
                                        {
                                            "name": "Eurowings",
                                            "code": "EW"
                                        },
                                        {
                                            "name": "Eurowings",
                                            "code": "EW"
                                        }
                                    ],
                                    "totalTime": 5700,
                                    "amenities": [
                                        {
                                            "category": "AIRCRAFT",
                                            "model": "A319"
                                        },
                                        {
                                            "category": "ENTERTAINMENT",
                                            "cost": "paid"
                                        },
                                        {
                                            "category": "FOOD",
                                            "cost": "paid",
                                            "type": "light_meal"
                                        },
                                        {
                                            "category": "WIFI",
                                            "cost": "paid"
                                        }
                                    ]
                                }
                            ],
                            "totalTime": 70800,
                            "isAtolProtected": false,
                            "isVirtualInterlining": true,
                            "showWarningDestinationAirport": false,
                            "showWarningOriginAirport": true
                        }
                    ]
                },
                {
                    "token": "d6a1f_H4sIAAAAAAAA_0VQbW-bMBD-Ne2nYTAYiCtZUxJYm9SQEd6UfbGIQwgkqyfsNSm_fg5Ems6-50Xns30npf7IF9M8XtrmpKTxV4JGKNFUqgZc_DaPvU57Ic7tR2NWbW--zaNiFTpWvCm-LbJUS2gF4dKEpqGDv-y-1zdlyJ6T53Zfg4oYGOOJSk5gGM0eoiceQG_Wdp3O3NHiQhEEXGebIS8O8Hoye_IaeX5WjOpAouX1RoNQRpm8jthevzZDsaBBEdMg96Mcyajj9-3HXSJpsU5psE02Qz7kl8SKz8hO4UrGWZwWQWJn3S9adKpKciHL84933RPmwc6PLo1Nw91Al9ZtvLrm-vUAIB_DUYtKkplnT5wrMps-KQ6KpFHw8_VRpYgDHd9-lvWl5qoVH-_1FwlL33ctQw9RfNrIoKzELnI9Q0-y5trYsbC0kQcNCCcjvhuW4_03nuxlf-jbz1aTJ2euV8MsMIbmJ83hPTSv2DwHCQYhBTTTes_wQgNnONJwYMi2vJlmNaswvB8-MqRzy-CjWcdWpYaB-da5afE__IuIQzICAAA.",
                    "segments": [
                        {
                            "departureAirport": {
                                "type": "AIRPORT",
                                "code": "HAM",
                                "name": "Hamburg Airport",
                                "city": "HAM",
                                "cityName": "Hamburg",
                                "country": "DE",
                                "countryName": "Germany",
                                "province": "Hansestadt Hamburg"
                            },
                            "arrivalAirport": {
                                "type": "AIRPORT",
                                "code": "VIE",
                                "name": "Vienna International Airport",
                                "city": "VIE",
                                "cityName": "Vienna",
                                "country": "AT",
                                "countryName": "Austria",
                                "province": "Wien (bundesland)"
                            },
                            "departureTime": "2024-11-30T06:30:00",
                            "arrivalTime": "2024-11-30T08:00:00",
                            "legs": [
                                {
                                    "departureTime": "2024-11-30T06:30:00",
                                    "arrivalTime": "2024-11-30T08:00:00",
                                    "departureAirport": {
                                        "type": "AIRPORT",
                                        "code": "HAM",
                                        "name": "Hamburg Airport",
                                        "city": "HAM",
                                        "cityName": "Hamburg",
                                        "country": "DE",
                                        "countryName": "Germany",
                                        "province": "Hansestadt Hamburg"
                                    },
                                    "arrivalAirport": {
                                        "type": "AIRPORT",
                                        "code": "VIE",
                                        "name": "Vienna International Airport",
                                        "city": "VIE",
                                        "cityName": "Vienna",
                                        "country": "AT",
                                        "countryName": "Austria",
                                        "province": "Wien (bundesland)"
                                    },
                                    "cabinClass": "ECONOMY",
                                    "flightInfo": {
                                        "flightNumber": 7750,
                                        "carrierInfo": {
                                            "operatingCarrier": "EW",
                                            "marketingCarrier": "EW"
                                        }
                                    },
                                    "carriers": [
                                        "EW",
                                        "EW"
                                    ],
                                    "carriersData": [
                                        {
                                            "name": "Eurowings",
                                            "code": "EW"
                                        },
                                        {
                                            "name": "Eurowings",
                                            "code": "EW"
                                        }
                                    ],
                                    "totalTime": 5400,
                                    "amenities": [
                                        {
                                            "category": "AIRCRAFT",
                                            "model": "A320"
                                        },
                                        {
                                            "category": "ENTERTAINMENT",
                                            "cost": "paid"
                                        },
                                        {
                                            "category": "FOOD",
                                            "cost": "paid",
                                            "type": "light_meal"
                                        },
                                        {
                                            "category": "WIFI",
                                            "cost": "paid"
                                        }
                                    ]
                                }
                            ],
                            "totalTime": 5400,
                            "isAtolProtected": false,
                            "showWarningDestinationAirport": true,
                            "showWarningOriginAirport": false
                        },
                        {
                            "departureAirport": {
                                "type": "AIRPORT",
                                "code": "BTS",
                                "name": "Bratislava Airport",
                                "city": "BTS",
                                "cityName": "Bratislava",
                                "country": "SK",
                                "countryName": "Slovakia",
                                "province": "Bratislavský kraj"
                            },
                            "arrivalAirport": {
                                "type": "AIRPORT",
                                "code": "HAM",
                                "name": "Hamburg Airport",
                                "city": "HAM",
                                "cityName": "Hamburg",
                                "country": "DE",
                                "countryName": "Germany",
                                "province": "Hansestadt Hamburg"
                            },
                            "departureTime": "2024-12-10T15:45:00",
                            "arrivalTime": "2024-12-11T14:20:00",
                            "legs": [
                                {
                                    "departureTime": "2024-12-10T15:45:00",
                                    "arrivalTime": "2024-12-10T17:20:00",
                                    "departureAirport": {
                                        "type": "AIRPORT",
                                        "code": "BTS",
                                        "name": "Bratislava Airport",
                                        "city": "BTS",
                                        "cityName": "Bratislava",
                                        "country": "SK",
                                        "countryName": "Slovakia",
                                        "province": "Bratislavský kraj"
                                    },
                                    "arrivalAirport": {
                                        "type": "AIRPORT",
                                        "code": "LTN",
                                        "name": "London Luton Airport",
                                        "city": "LON",
                                        "cityName": "London",
                                        "country": "GB",
                                        "countryName": "United Kingdom",
                                        "province": "Greater London"
                                    },
                                    "cabinClass": "ECONOMY",
                                    "flightInfo": {
                                        "flightNumber": 5456,
                                        "carrierInfo": {
                                            "operatingCarrier": "W9",
                                            "marketingCarrier": "W9"
                                        }
                                    },
                                    "carriers": [
                                        "W9",
                                        "W9"
                                    ],
                                    "carriersData": [
                                        {
                                            "name": "Wizz Air UK",
                                            "code": "W9"
                                        },
                                        {
                                            "name": "Wizz Air UK",
                                            "code": "W9"
                                        }
                                    ],
                                    "totalTime": 9300,
                                    "amenities": [
                                        {
                                            "category": "AIRCRAFT",
                                            "model": "32Q"
                                        },
                                        {
                                            "category": "FOOD",
                                            "cost": "paid",
                                            "type": "light_meal"
                                        }
                                    ],
                                    "vi": {
                                        "protected": true,
                                        "baggageCollection": true,
                                        "airportChange": true
                                    }
                                },
                                {
                                    "departureTime": "2024-12-11T08:45:00",
                                    "arrivalTime": "2024-12-11T11:20:00",
                                    "departureAirport": {
                                        "type": "AIRPORT",
                                        "code": "LHR",
                                        "name": "London Heathrow Airport",
                                        "city": "LON",
                                        "cityName": "London",
                                        "country": "GB",
                                        "countryName": "United Kingdom",
                                        "province": "Greater London"
                                    },
                                    "arrivalAirport": {
                                        "type": "AIRPORT",
                                        "code": "STR",
                                        "name": "Stuttgart Airport",
                                        "city": "STR",
                                        "cityName": "Stuttgart",
                                        "country": "DE",
                                        "countryName": "Germany",
                                        "province": "Baden-Württemberg"
                                    },
                                    "cabinClass": "ECONOMY",
                                    "flightInfo": {
                                        "flightNumber": 2461,
                                        "carrierInfo": {
                                            "operatingCarrier": "EW",
                                            "marketingCarrier": "EW"
                                        }
                                    },
                                    "carriers": [
                                        "EW",
                                        "EW"
                                    ],
                                    "carriersData": [
                                        {
                                            "name": "Eurowings",
                                            "code": "EW"
                                        },
                                        {
                                            "name": "Eurowings",
                                            "code": "EW"
                                        }
                                    ],
                                    "totalTime": 5700,
                                    "amenities": [
                                        {
                                            "category": "AIRCRAFT",
                                            "model": "32N"
                                        },
                                        {
                                            "category": "FOOD",
                                            "cost": "paid",
                                            "type": "light_meal"
                                        }
                                    ]
                                },
                                {
                                    "departureTime": "2024-12-11T13:05:00",
                                    "arrivalTime": "2024-12-11T14:20:00",
                                    "departureAirport": {
                                        "type": "AIRPORT",
                                        "code": "STR",
                                        "name": "Stuttgart Airport",
                                        "city": "STR",
                                        "cityName": "Stuttgart",
                                        "country": "DE",
                                        "countryName": "Germany",
                                        "province": "Baden-Württemberg"
                                    },
                                    "arrivalAirport": {
                                        "type": "AIRPORT",
                                        "code": "HAM",
                                        "name": "Hamburg Airport",
                                        "city": "HAM",
                                        "cityName": "Hamburg",
                                        "country": "DE",
                                        "countryName": "Germany",
                                        "province": "Hansestadt Hamburg"
                                    },
                                    "cabinClass": "ECONOMY",
                                    "flightInfo": {
                                        "flightNumber": 2036,
                                        "carrierInfo": {
                                            "operatingCarrier": "EW",
                                            "marketingCarrier": "EW"
                                        }
                                    },
                                    "carriers": [
                                        "EW",
                                        "EW"
                                    ],
                                    "carriersData": [
                                        {
                                            "name": "Eurowings",
                                            "code": "EW"
                                        },
                                        {
                                            "name": "Eurowings",
                                            "code": "EW"
                                        }
                                    ],
                                    "totalTime": 4500,
                                    "amenities": [
                                        {
                                            "category": "AIRCRAFT",
                                            "model": "A320"
                                        },
                                        {
                                            "category": "ENTERTAINMENT",
                                            "cost": "paid"
                                        },
                                        {
                                            "category": "FOOD",
                                            "cost": "paid",
                                            "type": "light_meal"
                                        },
                                        {
                                            "category": "WIFI",
                                            "cost": "paid"
                                        }
                                    ]
                                }
                            ],
                            "totalTime": 81300,
                            "isAtolProtected": false,
                            "isVirtualInterlining": true,
                            "showWarningDestinationAirport": false,
                            "showWarningOriginAirport": true
                        }
                    ]
                }
            ],
            "flightDeals": [
                {
                    "key": "CHEAPEST",
                    "offerToken": "d6a1f_H4sIAAAAAAAA_2WRYW_aMBCGf037aXHsYBJSyZpoQtsUJwVMgrIvVjAhBLK6w-4C-fVzAFWbpvPdve8j2zrZO60_1INtb5u62mllfSpQSS2rQpdAyJ_29mjKWspD_V7ZRX20X8ZxFk0GMHnLvj0umbEIhpPARrZlQjzk38uTttRRkPt6XYKCWL7vX6USBHuz4GaOxAX4BS5e2Wh4QUJqgsFwsFhiNwkYvcIjeU4CSNHFbUgctC0Nxypm7YmGE8940yMVn1tIw9RLUqj6ZHWLlqzPE4s7dU7O7f_ZKZ02kaLZK6PhYkIDxNK6_WJvXdqlzRwmB-wwlKpkmbAsnDvL_Q-a7XUxT6VaHZ6mZg6UhrkXZwdIJ3lHA3i6jFsKQRAA2POv48tCEXhVQpPR9VnkRhMWh7Pn2x5NHAR9516VTSl0Ld-n5ZmsXOR6rmWeXf52sJVzA7zR4C8Q5sgdOBZEYSkMmPGVP8RD1zK_cwF5DyD8B-Ahgp6FbkfyOyfQHwjXjRF3g7FZFYfgK4zf3Tzqw_iCxxFYJeBpCuY-QIgBtjJ4zf1H0wT3Y9M23BHQwUaV3PNEL7a8rzVHt3v3POrPdXy0qxv31x_s-ZUGlQIAAA..",
                    "price": {
                        "currencyCode": "USD",
                        "units": 210,
                        "nanos": 920000000
                    },
                    "travellerPrices": [
                        {
                            "travellerPriceBreakdown": {
                                "total": {
                                    "currencyCode": "USD",
                                    "units": 210,
                                    "nanos": 920000000
                                },
                                "baseFare": {
                                    "currencyCode": "USD",
                                    "units": 182,
                                    "nanos": 30000000
                                },
                                "fee": {
                                    "currencyCode": "USD",
                                    "units": 0,
                                    "nanos": 0
                                },
                                "tax": {
                                    "currencyCode": "USD",
                                    "units": 28,
                                    "nanos": 890000000
                                },
                                "totalRounded": {
                                    "currencyCode": "USD",
                                    "nanos": 0,
                                    "units": 211
                                },
                                "discount": {
                                    "currencyCode": "USD",
                                    "units": 0,
                                    "nanos": 0
                                },
                                "totalWithoutDiscount": {
                                    "currencyCode": "USD",
                                    "units": 210,
                                    "nanos": 920000000
                                },
                                "totalWithoutDiscountRounded": {
                                    "currencyCode": "USD",
                                    "nanos": 0,
                                    "units": 211
                                }
                            },
                            "travellerReference": "1",
                            "travellerType": "ADULT"
                        }
                    ]
                },
                {
                    "key": "FASTEST",
                    "offerToken": "d6a1f_H4sIAAAAAAAA_y2Q226jMBCGnya9WgzmTCWrIoG26YKzhEPU3ljgEAJN4wi7TdKn31GIxp75_l8jH2av1Ek-6vru0Hd7JbVviTqhRFerFnHxpe9GSI0Qn_2x0-t-1F_DtFrGlkFX1Z95kYPERhQvdKxrEPzx_am9KE2OnDz0TYtqogVBMKHkBMepfxcjcZH9aqzfct-5WVwoYiPHWhe2S6PQm8yRvKSuV1Q3tSXp4nxJotib6tKjZSxpaUhayEvRn6_0CvtXmnRxVuVhKelz6NGC5lWUmcXwkZT9Gaf4raTRx4p-qs0Kn-Z5f6mzUsi0qDI6yGsxZHI9pDIp4pkV3S5uObwdIdsL8E2LWhLfNSfmivjTF8VWkTyN_r3cuxQxfdu0HmR7aLnqxfFveyXxxvMcQ4MRih_T1hK2CRzbcTWYY8vBeGfQYbtYw3gykpm5OMlvqzsCzKwQVscMBAG0B8IIA9UsLFEWoDgD0bBgDoWzIIWyZVbTODVQy4K65QA7ZkPuGb6fM7DlBsov28rdl3n6DxsDK2QYAgAA",
                    "price": {
                        "currencyCode": "USD",
                        "units": 284,
                        "nanos": 230000000
                    },
                    "travellerPrices": [
                        {
                            "travellerPriceBreakdown": {
                                "total": {
                                    "currencyCode": "USD",
                                    "units": 284,
                                    "nanos": 230000000
                                },
                                "baseFare": {
                                    "currencyCode": "USD",
                                    "units": 284,
                                    "nanos": 230000000
                                },
                                "fee": {
                                    "currencyCode": "USD",
                                    "units": 0,
                                    "nanos": 0
                                },
                                "tax": {
                                    "currencyCode": "USD",
                                    "units": 0,
                                    "nanos": 0
                                },
                                "totalRounded": {
                                    "currencyCode": "USD",
                                    "nanos": 0,
                                    "units": 285
                                },
                                "discount": {
                                    "currencyCode": "USD",
                                    "units": 0,
                                    "nanos": 0
                                },
                                "totalWithoutDiscount": {
                                    "currencyCode": "USD",
                                    "units": 284,
                                    "nanos": 230000000
                                },
                                "totalWithoutDiscountRounded": {
                                    "currencyCode": "USD",
                                    "nanos": 0,
                                    "units": 285
                                }
                            },
                            "travellerReference": "1",
                            "travellerType": "ADULT"
                        }
                    ]
                },
                {
                    "key": "BEST",
                    "offerToken": "d6a1f_H4sIAAAAAAAA_y2Q226jMBCGnya9WgzmTCWrIoG26YKzhEPU3ljgEAJN4wi7TdKn31GIxp75_l8jH2av1Ek-6vru0Hd7JbVviTqhRFerFnHxpe9GSI0Qn_2x0-t-1F_DtFrGlkFX1Z95kYPERhQvdKxrEPzx_am9KE2OnDz0TYtqogVBMKHkBMepfxcjcZH9aqzfct-5WVwoYiPHWhe2S6PQm8yRvKSuV1Q3tSXp4nxJotib6tKjZSxpaUhayEvRn6_0CvtXmnRxVuVhKelz6NGC5lWUmcXwkZT9Gaf4raTRx4p-qs0Kn-Z5f6mzUsi0qDI6yGsxZHI9pDIp4pkV3S5uObwdIdsL8E2LWhLfNSfmivjTF8VWkTyN_r3cuxQxfdu0HmR7aLnqxfFveyXxxvMcQ4MRih_T1hK2CRzbcTWYY8vBeGfQYbtYw3gykpm5OMlvqzsCzKwQVscMBAG0B8IIA9UsLFEWoDgD0bBgDoWzIIWyZVbTODVQy4K65QA7ZkPuGb6fM7DlBsov28rdl3n6DxsDK2QYAgAA",
                    "price": {
                        "currencyCode": "USD",
                        "units": 284,
                        "nanos": 230000000
                    },
                    "travellerPrices": [
                        {
                            "travellerPriceBreakdown": {
                                "total": {
                                    "currencyCode": "USD",
                                    "units": 284,
                                    "nanos": 230000000
                                },
                                "baseFare": {
                                    "currencyCode": "USD",
                                    "units": 284,
                                    "nanos": 230000000
                                },
                                "fee": {
                                    "currencyCode": "USD",
                                    "units": 0,
                                    "nanos": 0
                                },
                                "tax": {
                                    "currencyCode": "USD",
                                    "units": 0,
                                    "nanos": 0
                                },
                                "totalRounded": {
                                    "currencyCode": "USD",
                                    "nanos": 0,
                                    "units": 285
                                },
                                "discount": {
                                    "currencyCode": "USD",
                                    "units": 0,
                                    "nanos": 0
                                },
                                "totalWithoutDiscount": {
                                    "currencyCode": "USD",
                                    "units": 284,
                                    "nanos": 230000000
                                },
                                "totalWithoutDiscountRounded": {
                                    "currencyCode": "USD",
                                    "nanos": 0,
                                    "units": 285
                                }
                            },
                            "travellerReference": "1",
                            "travellerType": "ADULT"
                        }
                    ]
                }
            ],
            "atolProtectedStatus": "NONE",
            "searchId": "2E39D546DAF814D891844873A7D250CB",
            "displayOptions": {
                "brandedFaresShownByDefault": false,
                "directFlightsOnlyFilterIgnored": false,
                "hideFlexiblePricesBanner": false
            },
            "isOffersCabinClassExtended": false,
            "searchCriteria": {
                "cabinClass": "ECONOMY"
            },
            "priceAlertStatus": {
                "isEligible": false,
                "isSearchEligible": false
            }
        }
    }
]

2025-08-25 12:04:35,034 - evaluation_logger_Cross-209 - INFO - Final Response: <｜begin▁of▁sentence｜># 1. 概述

本文，我们来分享 [《精尽 Spring Boot 源码分析 —— SpringApplication》](http://svip.iocoder.cn/Spring-Boot/SpringApplication/) 的**初始化**的源码解析。

在 SpringApplication 实例对象创建时，会进行一些初始化的工作。虽然说，它并没有**真正**开始 Spring 应用的启动，但是初始化了一些启动需要的变量，是 Spring 应用启动的**基础**。

# 2. 构造方法

SpringApplication 的构造方法，主要代码如下：

```java
// SpringApplication.java

/**
 * 资源加载器
 */
private ResourceLoader resourceLoader;
/**
 * 主要的 Java Config 类的数组
 */
private Set<Class<?>> primarySources;
/**
 * 应用上下文类型
 */
private Class<? extends ConfigurableApplicationContext> applicationContextClass;
/**
 * Web 应用类型
 */
private WebApplicationType webApplicationType;
/**
 * 初始化器集合
 */
private List<ApplicationContextInitializer<?>> initializers;
/**
 * 监听器集合
 */
private List<ApplicationListener<?>> listeners;

public SpringApplication(ResourceLoader resourceLoader, Class<?>... primarySources) {
	this.resourceLoader = resourceLoader;
	Assert.notNull(primarySources, "PrimarySources must not be null");
	this.primarySources = new LinkedHashSet<>(Arrays.asList(primarySources));
	// <1> 判断 Web 应用类型
	this.webApplicationType = WebApplicationType.deduceFromClasspath();
	// <2> 设置初始化器
	setInitializers((Collection) getSpringFactoriesInstances(ApplicationContextInitializer.class));
	// <3> 设置监听器
	setListeners((Collection) getSpringFactoriesInstances(ApplicationListener.class));
	// <4> 设置应用上下文类
	this.applicationContextClass = deduceMainApplicationContextClass();
}
```

- `resourceLoader` 属性，资源加载器。可以暂时不理解，后续文章会详细解析。

- `primarySources` 属性，主要的 Java Config 类的数组。在文初提供的示例，就是 `DemoApplication` 类。

- `applicationContextClass` 属性，应用上下文类型。详细解析，见 [「2.4 deduceMainApplicationContextClass」](http://svip.iocoder.cn/Spring-Boot/SpringApplication/#) 。

- `webApplicationType` 属性，Web 应用类型。详细解析，见 [「2.1 WebApplicationType」](http://svip.iocoder.cn/Spring-Boot/SpringApplication/#) 。

- `initializers` 属性，ApplicationContextInitializer 数组。详细解析，见 [「2.2 setInitializers」](http://svip.iocoder.cn/Spring-Boot/SpringApplication/#) 。

- `listeners` 属性，ApplicationListener 数组。详细解析，见 [「2.3 setListeners」](http://svip.iocoder.cn/Spring-Boot/SpringApplication/#) 。

- `<1>` 处，调用 `WebApplicationType#deduceFromClasspath()` 方法，通过 classpath ，判断 Web 应用类型。详细解析，见 [「2.1 WebApplicationType」](http://svip.iocoder.cn/Spring-Boot/SpringApplication/#) 。

- `<2>` 处，设置初始化器。详细解析，见 [「2.2 setInitializers」](http://svip.iocoder.cn/Spring-Boot/SpringApplication/#) 。

- `<3>` 处，设置监听器。详细解析，见 [「2.3 setListeners」](http://svip.iocoder.cn/Spring-Boot/SpringApplication/#) 。

- `<4>` 处，调用 `#deduceMainApplicationContextClass()` 方法，获得应用上下文类型。详细解析，见 [「2.4 deduceMainApplicationContextClass」](http://svip.iocoder.cn/Spring-Boot/SpringApplication/#) 。

## 2.1 WebApplicationType

`org.springframework.boot.WebApplicationType` ，Web 应用类型枚举。代码如下：

```java
// WebApplicationType.java

public enum WebApplicationType {

	/**
	 * 非 Web 项目
	 */
	NONE,
	/**
	 * Servlet Web 项目
	 */
	SERVLET,
	/**
	 * Reactive Web 项目
	 */
	REACTIVE;

}
```

- 一共有三种类型。

### 2.1.1 deduceFromClasspath

`#deduceFromClasspath()` 方法，通过 classpath ，判断 Web 应用类型。代码如下：

```java
// WebApplicationType.java

private static final String[] SERVLET_INDICATOR_CLASSES = { "javax.servlet.Servlet",
		"org.springframework.web.context.ConfigurableWebApplicationContext" };

private static final String WEBMVC_INDICATOR_CLASS = "org.springframework.web.servlet.DispatcherServlet";
private static final String WEBFLUX_INDICATOR_CLASS = "org.springframework.web.reactive.DispatcherHandler";
private static final String JERSEY_INDICATOR_CLASS = "org.glassfish.jersey.servlet.ServletContainer";

static WebApplicationType deduceFromClasspath() {
    // REACTIVE 相关类存在
	if (ClassUtils.isPresent(WEBFLUX_INDICATOR_CLASS, null) && !ClassUtils.isPresent(WEBMVC_INDICATOR_CLASS, null)
			&& !ClassUtils.isPresent(JERSEY_INDICATOR_CLASS, null)) {
		return WebApplicationType.REACTIVE;
	}
    // SERVLET 相关类不存在
	for (String className : SERVLET_INDICATOR_CLASSES) {
		if (!ClassUtils.isPresent(className, null)) {
			return WebApplicationType.NONE;
		}
	}
    // 默认返回 SERVLET
	return WebApplicationType.SERVLET;
}
```

- 通过判断是否存在对应的类，来判断类型。

## 2.2 setInitializers

`#setInitializers(Collection<? extends ApplicationContextInitializer<?>> initializers)` 方法，设置初始化器。代码如下：

```java
// SpringApplication.java

public void setInitializers(Collection<? extends ApplicationContextInitializer<?>> initializers) {
	this.initializers = new ArrayList<>();
	this.initializers.addAll(initializers);
}
```

- 那么，初始化器是怎么获取到的呢？答案在 `#getSpringFactoriesInstances(Class<T> type)` 方法。代码如下：

  ```java
  // SpringApplication.java
  
  private <T> Collection<T> getSpringFactoriesInstances(Class<T> type) {
  	return getSpringFactoriesInstances(type, new Class<?>[] {});
  }
  
  private <T> Collection<T> getSpringFactoriesInstances(Class<T> type, Class<?>[] parameterTypes, Object... args) {
  	ClassLoader classLoader = getClassLoader();
  	// Use names and ensure unique to protect against duplicates
  	// <1> 加载指定类型对应的，在 `META-INF/spring.factories` 里的类名的数组
  	Set<String> names = new LinkedHashSet<>(SpringFactoriesLoader.loadFactoryNames(type, classLoader));
  	// <2> 创建对象
  	List<T> instances = createSpringFactoriesInstances(type, parameterTypes, classLoader, args, names);
  	// <3> 排序
  	AnnotationAwareOrderComparator.sort(instances);
  	return instances;
  }
  ```

  - `<1>` 处，调用 `SpringFactoriesLoader#loadFactoryNames(Class<?> factoryClass, ClassLoader classLoader)` 方法，加载指定类型对应的，在 `META-INF/spring.factories` 里的类名的数组。

    - 在 `spring-boot` 项目中的 `spring-boot-autoconfigure` 模块，`META-INF/spring.factories` 文件，就有 ApplicationContextInitializer 的配置。如下：

      ```properties
      # Initializers
      org.springframework.context.ApplicationContextInitializer=\
      org.springframework.boot.autoconfigure.SharedMetadataReaderFactoryContextInitializer,\
      org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener
      ```

    - 在 `spring-boot` 项目中的 `spring-boot` 模块，`META-INF/spring.factories` 文件，也有 ApplicationContextInitializer 的配置。如下：

      ```properties
      # Initializers
      org.springframework.context.ApplicationContextInitializer=\
      org.springframework.boot.context.ConfigurationWarningsApplicationContextInitializer,\
      org.springframework.boot.context.ContextIdApplicationContextInitializer,\
      org.springframework.boot.context.config.DelegatingApplicationContextInitializer,\
      org.springframework.boot.web.context.ServerPortInfoApplicationContextInitializer
      ```

    - 这样，我们就获得了 6 个 ApplicationContextInitializer 实现类。

  - `<2>` 处，调用 `#createSpringFactoriesInstances(Class<T> type, Class<?>[] parameterTypes, ClassLoader classLoader, Object[] args, Set<String> names)` 方法，创建对象。代码如下：

    ```java
    // SpringApplication.java
    
    private <T> List<T> createSpringFactoriesInstances(Class<T> type, Class<?>[] parameterTypes,
    		ClassLoader classLoader, Object[] args, Set<String> names) {
    	List<T> instances = new ArrayList<>(names.size());
    	for (String name : names) {
    		try {
    			Class<?> instanceClass = ClassUtils.forName(name, classLoader);
    			Assert.isAssignable(type, instanceClass);
    			Constructor<?> constructor = instanceClass.getDeclaredConstructor(parameterTypes);
    			T instance = (T) BeanUtils.instantiateClass(constructor, args);
    			instances.add(instance);
    		} catch (Throwable ex) {
    			throw new IllegalArgumentException("Cannot instantiate " + type + " : " + name, ex);
    		}
    	}
    	return instances;
    }
    ```

    - 通过反射，创建对象。

  - `<3>` 处，调用 `AnnotationAwareOrderComparator#sort(List<?> list)` 方法，排序对象。后续文章，详细解析。

- 这样，我们就获得了 `initializers` 属性。

## 2.3 setListeners

`#setListeners(Collection<? extends ApplicationListener<?>> listeners)` 方法，设置监听器。代码如下：

```java
// SpringApplication.java

public void setListeners(Collection<? extends ApplicationListener<?>> listeners) {
	this.listeners = new ArrayList<>();
	this.listeners.addAll(listeners);
}
```

- 那么，监听器是怎么获取到的呢？答案也是 `#getSpringFactoriesInstances(Class<T> type)` 方法。

  - 在 `spring-boot` 项目中的 `spring-boot` 模块，`META-INF/spring.factories` 文件，有 ApplicationListener 的配置。如下：

    ```properties
    # Application Listeners
    org.springframework.context.ApplicationListener=\
    org.springframework.boot.ClearCachesApplicationListener,\
    org.springframework.boot.builder.ParentContextCloserApplicationListener,\
    org.springframework.boot.context.FileEncodingApplicationListener,\
    org.springframework.boot.context.config.AnsiOutputApplicationListener,\
    org.springframework.boot.context.config.ConfigFileApplicationListener,\
    org.springframework.boot.context.config.DelegatingApplicationListener,\
    org.springframework.boot.context.logging.ClasspathLoggingApplicationListener,\
    org.springframework.boot.context.logging.LoggingApplicationListener,\
    org.springframework.boot.liquibase.LiquibaseServiceApplicationListener
    ```

  - 这样，我们就获得了 9 个 ApplicationListener 实现类。

- 这样，我们就获得了 `listeners` 属性。

## 2.4 deduceMainApplicationContextClass

`#deduceMainApplicationContextClass()` 方法，获得应用上下文类型。代码如下：

```java
// SpringApplication.java

private Class<? extends ConfigurableApplicationContext> deduceMainApplicationContextClass() {
	try {
		switch (this.webApplicationType) {
		case SERVLET:
			return Class.forName(DEFAULT_SERVLET_WEB_CONTEXT_CLASS) // "org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext"
					.asSubclass(ConfigurableApplicationContext.class);
		case REACTIVE:
			return Class.forName(DEFAULT_REACTIVE_WEB_CONTEXT_CLASS) // "org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext"
					.asSubclass(ConfigurableApplicationContext.class);
		default:
			return Class.forName(DEFAULT_CONTEXT_CLASS) // "org.springframework.context.annotation.AnnotationConfigApplicationContext"
					.asSubclass(ConfigurableApplicationContext.class);
		}
	} catch (ClassNotFoundException ex) {
		throw new IllegalStateException("Unable create a default ApplicationContext, " + "please specify an ApplicationContextClass", ex);
	}
}
```

- 根据 `webApplicationType` 类型，获得对应的 ApplicationContext 实现类。

# 3. 小结

至此，我们已经完成了 SpringApplication 的初始化。后续，我们将开始正式解析 Spring 应用的启动。

另外，本文涉及到的 ApplicationContextInitializer 和 ApplicationListener ，我们会在后续的文章中，详细解析。

2025-08-25 12:04:42,666 - evaluation_logger_Cross-209 - INFO - Complete Result: {'score': 0, 'reason': "The response does not address any of the requested information about multi-stop flights for the user's trip."}
2025-08-25 12:04:49,424 - evaluation_logger_Cross-209 - INFO - Correct Result: {'score': 0, 'reason': 'All information in the response is incorrect.'}
2025-08-25 12:04:49,424 - evaluation_logger_Cross-209 - INFO - Message: Success.
2025-08-25 12:04:49,424 - evaluation_logger_Cross-209 - INFO - Success turn num = 4
2025-08-25 12:04:49,424 - evaluation_logger_Cross-209 - INFO - ----------------------------------------------------------------------------------------------------
