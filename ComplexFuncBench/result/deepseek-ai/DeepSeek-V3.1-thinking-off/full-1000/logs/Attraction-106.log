2025-08-25 13:08:31,499 - evaluation_logger_Attraction-106 - INFO - Test Example Attraction-106
2025-08-25 13:08:31,499 - evaluation_logger_Attraction-106 - INFO - Query: Could you find some tour routes in Seville and provide detailed information about the sightseeing activities?
2025-08-25 13:08:38,925 - evaluation_logger_Attraction-106 - INFO - Function Calls: 
[
    {
        "name": "Search_Attraction_Location",
        "arguments": {
            "query": "Seville"
        }
    }
]

2025-08-25 13:08:38,925 - evaluation_logger_Attraction-106 - INFO - Golden Function Call: 
[
    {
        "name": "Search_Attraction_Location",
        "arguments": {
            "query": "Seville"
        }
    },
    {
        "name": "Search_Attractions",
        "arguments": {
            "id": "eyJ1ZmkiOi00MDI4NDl9"
        }
    }
]

2025-08-25 13:08:38,925 - evaluation_logger_Attraction-106 - INFO - Start compare_single_call: 
{'name': 'Search_Attraction_Location', 'arguments': {'query': 'Seville'}}
{'name': 'Search_Attraction_Location', 'arguments': {'query': 'Seville'}}
2025-08-25 13:08:38,925 - evaluation_logger_Attraction-106 - INFO - Rule-based compare success.
2025-08-25 13:08:38,925 - evaluation_logger_Attraction-106 - INFO - Success matched: [{'name': 'Search_Attraction_Location', 'arguments': {'query': 'Seville'}}]
2025-08-25 13:08:38,925 - evaluation_logger_Attraction-106 - INFO - Observations:
[
    {
        "status": true,
        "message": "Success",
        "data": {
            "destinations": [
                {
                    "id": "eyJ1ZmkiOi00MDI4NDl9",
                    "__typename": "AttractionsSearchDestinationSuggestion",
                    "ufi": -402849,
                    "country": "Spain",
                    "cityName": "Seville",
                    "productCount": 735,
                    "cc1": "es"
                },
                {
                    "id": "eyJ1ZmkiOi0zOTA3ODd9",
                    "__typename": "AttractionsSearchDestinationSuggestion",
                    "ufi": -390787,
                    "country": "Spain",
                    "cityName": "Málaga",
                    "productCount": 667,
                    "cc1": "es"
                },
                {
                    "id": "eyJ1ZmkiOi0zOTA2MjV9",
                    "__typename": "AttractionsSearchDestinationSuggestion",
                    "ufi": -390625,
                    "country": "Spain",
                    "cityName": "Madrid",
                    "productCount": 1204,
                    "cc1": "es"
                }
            ]
        }
    }
]

2025-08-25 13:08:49,355 - evaluation_logger_Attraction-106 - INFO - Function Calls: 
[
    {
        "name": "Search_Attractions",
        "arguments": {
            "id": "eyJ1ZmkiOi00MDI4NDl9"
        }
    }
]

2025-08-25 13:08:49,355 - evaluation_logger_Attraction-106 - INFO - Golden Function Call: 
[
    {
        "name": "Search_Attractions",
        "arguments": {
            "id": "eyJ1ZmkiOi00MDI4NDl9"
        }
    },
    {
        "name": "Get_Attraction_Details",
        "arguments": {
            "slug": "prkwdl8okl52-royal-alcazar-of-seville-admission"
        }
    }
]

2025-08-25 13:08:49,355 - evaluation_logger_Attraction-106 - INFO - Start compare_single_call: 
{'name': 'Search_Attractions', 'arguments': {'id': 'eyJ1ZmkiOi00MDI4NDl9'}}
{'name': 'Search_Attractions', 'arguments': {'id': 'eyJ1ZmkiOi00MDI4NDl9'}}
2025-08-25 13:08:49,356 - evaluation_logger_Attraction-106 - INFO - Rule-based compare success.
2025-08-25 13:08:49,356 - evaluation_logger_Attraction-106 - INFO - Success matched: [{'name': 'Search_Attractions', 'arguments': {'id': 'eyJ1ZmkiOi00MDI4NDl9'}}]
2025-08-25 13:08:49,356 - evaluation_logger_Attraction-106 - INFO - Observations:
[
    {
        "status": true,
        "message": "Success",
        "data": {
            "__typename": "AttractionsProductSearchResponse",
            "products": [
                {
                    "__typename": "AttractionsProduct",
                    "cancellationPolicy": {
                        "__typename": "AttractionsCancellationPolicy",
                        "hasFreeCancellation": false
                    },
                    "id": "PRKwDL8Okl52",
                    "name": "Royal Alcázar of Seville Admission",
                    "slug": "prkwdl8okl52-royal-alcazar-of-seville-admission",
                    "shortDescription": "A ticket providing admission to a palace associated with the Spanish royal family",
                    "representativePrice": {
                        "__typename": "AttractionsPrice",
                        "chargeAmount": 20.09,
                        "currency": "USD",
                        "publicAmount": 20.09
                    },
                    "reviewsStats": {
                        "__typename": "AttractionsProductReviewStats",
                        "allReviewsCount": 0,
                        "percentage": "0",
                        "combinedNumericStats": {
                            "__typename": "AttractionsProductCombinedReviewStats",
                            "average": 4.6,
                            "total": 551
                        }
                    },
                    "ufiDetails": {
                        "__typename": "AttractionLocationResponse",
                        "bCityName": "Seville",
                        "ufi": -402849
                    },
                    "offers": [
                        {
                            "__typename": "Offer",
                            "items": [
                                {
                                    "__typename": "OfferItem",
                                    "id": "OIhUp7wtu6B7"
                                },
                                {
                                    "__typename": "OfferItem",
                                    "id": "OIaVKWd9HrAH"
                                }
                            ]
                        }
                    ],
                    "supportedFeatures": {
                        "__typename": "AttractionsProductSupportedFeatures",
                        "nativeApp": true
                    },
                    "flags": [
                        {
                            "__typename": "AttractionsProductFlags",
                            "flag": "bestseller",
                            "value": true,
                            "rank": 1
                        }
                    ]
                }
            ],
            "filterStats": {
                "__typename": "FilterStats",
                "unfilteredProductCount": 735,
                "filteredProductCount": 735
            },
            "sorters": [
                {
                    "__typename": "AttractionsSorterOption",
                    "name": "Our top picks",
                    "value": "trending"
                },
                {
                    "__typename": "AttractionsSorterOption",
                    "name": "Most popular",
                    "value": "attr_book_score"
                },
                {
                    "__typename": "AttractionsSorterOption",
                    "name": "Lowest price",
                    "value": "lowest_price"
                }
            ],
            "defaultSorter": {
                "__typename": "AttractionsSorterOption",
                "name": "Our top picks",
                "value": "trending"
            },
            "filterOptions": {
                "__typename": "FilterOptions",
                "typeFilters": [
                    {
                        "__typename": "FilterOption",
                        "name": "Tours",
                        "tagname": "tours",
                        "productCount": 150
                    },
                    {
                        "__typename": "FilterOption",
                        "name": "Museums, arts & culture",
                        "tagname": "museums-arts-culture",
                        "productCount": 84
                    },
                    {
                        "__typename": "FilterOption",
                        "name": "Nature & outdoor",
                        "tagname": "nature-outdoor",
                        "productCount": 80
                    },
                    {
                        "__typename": "FilterOption",
                        "name": "Entertainment & tickets",
                        "tagname": "entertainment-tickets",
                        "productCount": 61
                    },
                    {
                        "__typename": "FilterOption",
                        "name": "Food & drinks",
                        "tagname": "food-drinks",
                        "productCount": 22
                    }
                ],
                "labelFilters": [
                    {
                        "__typename": "FilterOption",
                        "name": "Free cancellation",
                        "tagname": "free_cancellation",
                        "productCount": 619
                    }
                ],
                "ufiFilters": [
                    {
                        "__typename": "FilterOption",
                        "name": "Seville",
                        "tagname": "-402849",
                        "productCount": 730
                    },
                    {
                        "__typename": "FilterOption",
                        "name": "Carmona",
                        "tagname": "-376218",
                        "productCount": 4
                    },
                    {
                        "__typename": "FilterOption",
                        "name": "Valencina de la Concepcion",
                        "tagname": "-406144",
                        "productCount": 1
                    }
                ],
                "priceFilters": [
                    {
                        "__typename": "FilterOption",
                        "name": "US$0 - US$22",
                        "tagname": "b0",
                        "productCount": 73
                    },
                    {
                        "__typename": "FilterOption",
                        "name": "US$22 - US$44",
                        "tagname": "b1",
                        "productCount": 142
                    },
                    {
                        "__typename": "FilterOption",
                        "name": "US$44 - US$83",
                        "tagname": "b2",
                        "productCount": 128
                    },
                    {
                        "__typename": "FilterOption",
                        "name": "US$83 - US$138",
                        "tagname": "b3",
                        "productCount": 111
                    },
                    {
                        "__typename": "FilterOption",
                        "name": "US$138+",
                        "tagname": "b4",
                        "productCount": 297
                    }
                ]
            }
        }
    }
]

2025-08-25 13:08:59,314 - evaluation_logger_Attraction-106 - INFO - Function Calls: 
[
    {
        "name": "Get_Attraction_Details",
        "arguments": {
            "slug": "prkwdl8okl52-royal-alcazar-of-seville-admission"
        }
    }
]

2025-08-25 13:08:59,314 - evaluation_logger_Attraction-106 - INFO - Golden Function Call: 
[
    {
        "name": "Get_Attraction_Details",
        "arguments": {
            "slug": "prkwdl8okl52-royal-alcazar-of-seville-admission"
        }
    }
]

2025-08-25 13:08:59,314 - evaluation_logger_Attraction-106 - INFO - Start compare_single_call: 
{'name': 'Get_Attraction_Details', 'arguments': {'slug': 'prkwdl8okl52-royal-alcazar-of-seville-admission'}}
{'name': 'Get_Attraction_Details', 'arguments': {'slug': 'prkwdl8okl52-royal-alcazar-of-seville-admission'}}
2025-08-25 13:08:59,314 - evaluation_logger_Attraction-106 - INFO - Rule-based compare success.
2025-08-25 13:08:59,314 - evaluation_logger_Attraction-106 - INFO - Success matched: [{'name': 'Get_Attraction_Details', 'arguments': {'slug': 'prkwdl8okl52-royal-alcazar-of-seville-admission'}}]
2025-08-25 13:08:59,314 - evaluation_logger_Attraction-106 - INFO - Observations:
[
    {
        "status": true,
        "message": "Success",
        "data": {
            "__typename": "AttractionsProduct",
            "additionalInfo": "Please bring your ticket with you to the attraction.\n\nBe aware that operators may cancel for unforeseen reasons.\n\nYou need to be 18 years or older to book or be accompanied by an adult. ",
            "applicableTerms": [
                {
                    "__typename": "TermsConditions",
                    "policyProvider": "Booking.com"
                },
                {
                    "__typename": "TermsConditions",
                    "policyProvider": "Klook"
                }
            ],
            "cancellationPolicy": {
                "__typename": "AttractionsCancellationPolicy",
                "hasFreeCancellation": false
            },
            "description": "This skip-the-line ticket will provide you with admission to the Royal Alcázar of Seville – a UNESCO listed palace associated with the Spanish royal family. You'll have the chance to admire gothic and rennaissance-era architecture throughout the palace, wander through opulent courtyards and Islamic archways, as well as see a 16th-century tiled altar. During the tour, you'll also be able to learn more about the construction of the building and the illustrious history of the Spanish royal family.",
            "flags": [
                {
                    "__typename": "AttractionsProductFlags",
                    "flag": "bestseller",
                    "value": true,
                    "rank": 1
                }
            ],
            "id": "PRKwDL8Okl52",
            "isBookable": true,
            "name": "Royal Alcázar of Seville Admission",
            "offers": [
                {
                    "__typename": "Offer",
                    "availabilityType": "date_time",
                    "id": "OFSfHeLoKnjc"
                }
            ],
            "onSiteRequirements": {
                "__typename": "OnSiteRequirements"
            },
            "operatedBy": "Klook",
            "representativePrice": {
                "__typename": "AttractionsPrice",
                "chargeAmount": 20.03,
                "currency": "USD",
                "publicAmount": 20.03
            },
            "reviews": {
                "__typename": "AttractionsGetReviewsResponse",
                "total": 550,
                "reviews": [
                    {
                        "__typename": "AttractionsReview",
                        "id": "RSTsHWB2unzY",
                        "epochMs": 1729630235000,
                        "language": "fr",
                        "numericRating": 5,
                        "user": {
                            "__typename": "AttractionsReviewUser",
                            "name": "Gerard",
                            "cc1": "fr"
                        }
                    },
                    {
                        "__typename": "AttractionsReview",
                        "id": "RSJ47BC2aHjN",
                        "epochMs": 1729590131000,
                        "language": "en-gb",
                        "numericRating": 4,
                        "user": {
                            "__typename": "AttractionsReviewUser",
                            "name": "Brian",
                            "cc1": "gb"
                        }
                    },
                    {
                        "__typename": "AttractionsReview",
                        "id": "RSBLncHWrrag",
                        "epochMs": 1729581485000,
                        "language": "en-gb",
                        "numericRating": 5,
                        "user": {
                            "__typename": "AttractionsReviewUser",
                            "name": "Jeremy",
                            "cc1": "gb"
                        }
                    },
                    {
                        "__typename": "AttractionsReview",
                        "id": "RSBoLRO3WOGv",
                        "content": "Mooie vertrekken in diverse stijlen, waarbij wij de Moorse versieringen het mooist vonden. Wat een vakmanschap, wat een toewijding! Mooie, afwisselende tuin met bijzondere planten. In die tuin kan je ook lunchen, tussen pauwen die onbekommerd tussen de tafeltjes door lopen.",
                        "epochMs": 1729525810000,
                        "language": "nl",
                        "numericRating": 4,
                        "user": {
                            "__typename": "AttractionsReviewUser",
                            "name": "Claire",
                            "cc1": "nl"
                        }
                    },
                    {
                        "__typename": "AttractionsReview",
                        "id": "RSyQFZrl9uki",
                        "epochMs": 1729501790000,
                        "numericRating": 5
                    }
                ]
            },
            "reviewsStats": {
                "__typename": "AttractionsProductReviewStats",
                "allReviewsCount": 0,
                "percentage": "0",
                "combinedNumericStats": {
                    "__typename": "AttractionsProductCombinedReviewStats",
                    "average": 4.6,
                    "total": 551
                }
            },
            "shortDescription": "A ticket providing admission to a palace associated with the Spanish royal family",
            "slug": "prkwdl8okl52-royal-alcazar-of-seville-admission",
            "supportedFeatures": {
                "__typename": "AttractionsProductSupportedFeatures",
                "nativeApp": true,
                "nativeAppBookProcess": false,
                "liveAvailabilityCheckSupported": true
            },
            "ufiDetails": {
                "__typename": "AttractionLocationResponse",
                "ufi": -402849,
                "bCityName": "Seville"
            }
        }
    }
]

2025-08-25 13:12:10,783 - evaluation_logger_Attraction-106 - INFO - Final Response: <｜begin▁of▁sentence｜># 1. 概述

本文，我们来分享 [MyBatis 的脚本模块](https://github.com/mybatis/mybatis-3/tree/master/src/main/java/org/apache/ibatis/scripting)，对应 `scripting` 包。如下图所示：[![`scripting` 包](http://static.iocoder.cn/images/MyBatis/2020_02_15/01.png)](http://static.iocoder.cn/images/MyBatis/2020_02_15/01.png)`scripting` 包

在 [《精尽 MyBatis 源码解析 —— 项目结构一览》](http://svip.iocoder.cn/MyBatis/intro) 中，简单介绍了这个模块如下：

> 拼凑 SQL 语句是一件烦琐且易出错的过程，MyBatis 支持动态 SQL 功能，通过 MyBatis 提供的各种动态 SQL 标签，如`<if>`、`<where>`、`<trim>` 等，组合成复杂的 SQL 语句。

本文涉及的类如下图所示：![类图](http://static.iocoder.cn/images/MyBatis/2020_02_15/02.png)

- 可能一开始，看着图有点懵。淡定，我们就是要把它们梳理清楚。

# 2. LanguageDriver

`org.apache.ibatis.scripting.LanguageDriver` ，语言驱动接口。代码如下：

```java
// LanguageDriver.java

public interface LanguageDriver {

    /**
     * Creates a {@link ParameterHandler} that passes the actual parameters to the the JDBC statement.
     *
     * 创建 ParameterHandler 对象。
     *
     * @param mappedStatement The mapped statement that is being executed
     * @param parameterObject The input parameter object (can be null)
     * @param boundSql The resulting SQL once the dynamic language has been executed.
     * @return the parameter handler
     * @see DefaultParameterHandler
     */
    ParameterHandler createParameterHandler(MappedStatement mappedStatement, Object parameterObject, BoundSql boundSql);

    /**
     * Creates an {@link SqlSource} that will hold the statement read from a mapper xml file.
     * It is called during startup, when the mapped statement is read from a class or an xml file.
     *
     * 创建 SqlSource 对象，从 Mapper XML 配置的 Statement 标签中，即 <select /> 等。
     *
     * @param configuration The MyBatis configuration
     * @param script XNode parsed from a XML file
     * @param parameterType input parameter type got from a mapper method or specified in the parameterType xml attribute. Can be null.
     * @return the sql source
     */
    SqlSource createSqlSource(Configuration configuration, XNode script, Class<?> parameterType);

    /**
     * Creates an {@link SqlSource} that will hold the statement read from an annotation.
     * It is called during startup, when the mapped statement is read from a class or an xml file.
     *
     * 创建 SqlSource 对象，从方法注解配置，即 @Select 等。
     *
     * @param configuration The MyBatis configuration
     * @param script The content of the annotation
     * @param parameterType input parameter type got from a mapper method or specified in the parameterType xml attribute. Can be null.
     * @return the sql source
     */
    SqlSource createSqlSource(Configuration configuration, String script, Class<?> parameterType);

}
```

- 一共有两个实现类，分别是 `org.apache.ibatis.scripting.xmltags.XMLLanguageDriver` 和 `org.apache.ibatis.scripting.defaults.RawLanguageDriver` 。默认情况下，使用 XMLLanguageDriver 类。
- 关于 SqlSource 和 ParameterHandler 类，我们在后续的文章中，详细解析。

## 2.1 XMLLanguageDriver

`org.apache.ibatis.scripting.xmltags.XMLLanguageDriver` ，实现 LanguageDriver 接口，XML 语言驱动实现类。

### 2.1.1 createSqlSource

`#createSqlSource(Configuration configuration, XNode script, Class<?> parameterType)` **实现**方法，创建 SqlSource 对象。代码如下：

```java
// XMLLanguageDriver.java

@Override
public SqlSource createSqlSource(Configuration configuration, XNode script, Class<?> parameterType) {
    // 创建 XMLScriptBuilder 对象，执行解析
    XMLScriptBuilder builder = new XMLScriptBuilder(configuration, script, parameterType);
    return builder.parseScriptNode();
}
```

- 创建 XMLScriptBuilder 对象，执行 `XMLScriptBuilder#parseScriptNode()` 方法，执行解析。

`#createSqlSource(Configuration configuration, String script, Class<?> parameterType)` **实现**方法，创建 SqlSource 对象。代码如下：

```java
// XMLLanguageDriver.java

@Override
public SqlSource createSqlSource(Configuration configuration, String script, Class<?> parameterType) {
    // 如果是 <script> 开头，使用 XML 配置的方式，使用动态 SQL 
    if (script.startsWith("<script>")) {
        // 创建 XPathParser 对象，解析出 <script /> 节点
        XPathParser parser = new XPathParser(script, false, configuration.getVariables(), new XMLMapperEntityResolver());
        // 调用上面的 #createSqlSource(Configuration configuration, XNode script, Class<?> parameterType) 方法
        return createSqlSource(configuration, parser.evalNode("/script"), parameterType);
    } else {
        // 如果是变量，则替换成对应的值
        // issue #127
        script = PropertyParser.parse(script, configuration.getVariables());
        // 创建 TextSqlNode 对象
        TextSqlNode textSqlNode = new TextSqlNode(script);
        // 如果是动态 SQL ，则创建 DynamicSqlSource 对象
        if (textSqlNode.isDynamic()) {
            return new DynamicSqlSource(configuration, textSqlNode);
        // 如果不是动态 SQL ，则创建 RawSqlSource 对象
        } else {
            return new RawSqlSource(configuration, script, parameterType);
        }
    }
}
```

- 根据 `script` 是否以 `<script>` 开头，分成两种情况。但是最终都会将 `script` 解析成对应的 SqlSource 对象。

### 2.1.2 createParameterHandler

`#createParameterHandler(MappedStatement mappedStatement, Object parameterObject, BoundSql boundSql)` **实现**方法，创建 ParameterHandler 对象。代码如下：

```java
// XMLLanguageDriver.java

@Override
public ParameterHandler createParameterHandler(MappedStatement mappedStatement, Object parameterObject, BoundSql boundSql) {
    // 创建 DefaultParameterHandler 对象
    return new DefaultParameterHandler(mappedStatement, parameterObject, boundSql);
}
```

## 2.2 RawLanguageDriver

`org.apache.ibatis.scripting.defaults.RawLanguageDriver` ，继承 XMLLanguageDriver 类，**Raw** 语言驱动实现类。

### 2.2.1 createSqlSource

`#createSqlSource(Configuration configuration, XNode script, Class<?> parameterType)` **实现**方法，创建 SqlSource 对象。代码如下：

```java
// RawLanguageDriver.java

@Override
public SqlSource createSqlSource(Configuration configuration, XNode script, Class<?> parameterType) {
    // 调用父类，创建 SqlSource 对象
    SqlSource source = super.createSqlSource(configuration, script, parameterType);
    // 创建 RawSqlSource 对象
    checkIsNotDynamic(source);
    return source;
}
```

- 调用父类 XMLLanguageDriver 的 `#createSqlSource(Configuration configuration, XNode script, Class<?> parameterType)` 方法，创建 SqlSource 对象。
- 调用 `#checkIsNotDynamic(SqlSource source)` 方法，校验创建的是 **RawSqlSource** 对象。代码如下：

```java
// RawLanguageDriver.java

private void checkIsNotDynamic(SqlSource source) {
    if (!RawSqlSource.class.equals(source.getClass())) {
        throw new BuilderException("Dynamic content is not allowed when using RAW language");
    }
}
```

`#createSqlSource(Configuration configuration, String script, Class<?> parameterType)` **实现**方法，创建 SqlSource 对象。代码如下：

```java
// RawLanguageDriver.java

@Override
public SqlSource createSqlSource(Configuration configuration, String script, Class<?> parameterType) {
    // 调用父类，创建 SqlSource 对象
    SqlSource source = super.createSqlSource(configuration, script, parameterType);
    // 创建 RawSqlSource 对象
    checkIsNotDynamic(source);
    return source;
}
```

- 和 `#createSqlSource(Configuration configuration, XNode script, Class<?> parameterType)` 方法的思路一致。

### 2.2.2 createParameterHandler

`#createParameterHandler(MappedStatement mappedStatement, Object parameterObject, BoundSql boundSql)` **实现**方法，创建 ParameterHandler 对象。代码如下：

```java
// RawLanguageDriver.java

@Override
public ParameterHandler createParameterHandler(MappedStatement mappedStatement, Object parameterObject, BoundSql boundSql) {
    // 创建 DefaultParameterHandler 对象
    return new DefaultParameterHandler(mappedStatement, parameterObject, boundSql);
}
```

## 2.3 LanguageDriverRegistry

`org.apache.ibatis.scripting.LanguageDriverRegistry` ，LanguageDriver 注册表。代码如下：

```java
// LanguageDriverRegistry.java

public class LanguageDriverRegistry {

    /**
     * LanguageDriver 映射
     */
    private final Map<Class<? extends LanguageDriver>, LanguageDriver> LANGUAGE_DRIVER_MAP = new HashMap<>();
    /**
     * 默认的 LanguageDriver 类
     */
    private Class<? extends LanguageDriver> defaultDriverClass;

    /**
     * 注册 LanguageDriver 类
     *
     * @param cls 类
     */
    public void register(Class<? extends LanguageDriver> cls) {
        if (cls == null) {
            throw new IllegalArgumentException("null is not a valid Language Driver");
        }
        // 创建 cls 对应的对象，并添加到 LANGUAGE_DRIVER_MAP 中
        if (!LANGUAGE_DRIVER_MAP.containsKey(cls)) {
            try {
                LANGUAGE_DRIVER_MAP.put(cls, cls.newInstance());
            } catch (Exception ex) {
                throw new ScriptingException("Failed to load language driver for " + cls.getName(), ex);
            }
        }
    }

    /**
     * 注册 LanguageDriver 对象
     *
     * @param instance 对象
     */
    public void register(LanguageDriver instance) {
        if (instance == null) {
            throw new IllegalArgumentException("null is not a valid Language Driver");
        }
        Class<? extends LanguageDriver> cls = instance.getClass();
        if (!LANGUAGE_DRIVER_MAP.containsKey(cls)) {
            LANGUAGE_DRIVER_MAP.put(cls, instance);
        }
    }

    /**
     * 获取 LanguageDriver 对象
     *
     * @param cls 类
     * @return LanguageDriver 对象
     */
    public LanguageDriver getDriver(Class<? extends LanguageDriver> cls) {
        return LANGUAGE_DRIVER_MAP.get(cls);
    }

    /**
     * 获取默认的 LanguageDriver 对象
     *
     * @return LanguageDriver 对象
     */
    public LanguageDriver getDefaultDriver() {
        return getDriver(getDefaultDriverClass());
    }

    // ... defaultDriverClass 相关的 getting/setting 方法，省略
}
```

- 比较简单，胖友自己看看。

在 Configuration 中，有一个 `languageRegistry` 属性，就是 LanguageDriverRegistry 类型。代码如下：

```java
// Configuration.java

/**
 * LanguageDriverRegistry 对象
 */
protected final LanguageDriverRegistry languageRegistry = new LanguageDriverRegistry();
```

- 在 Configuration 的构造方法中，会进行初始化。代码如下：

  ```java
  // Configuration.java
  
  public Configuration() {
      // ... 省略其它代码
      // 注册默认的 LanguageDriver 类
      languageRegistry.setDefaultDriverClass(XMLLanguageDriver.class);
      languageRegistry.register(RawLanguageDriver.class);
  }
  ```

# 3. SQL 节点

> 本小节，我们会看到如图的所有的类。![类图](http://static.iocoder.cn/images/MyBatis/2020_02_15/03.png)

## 3.1 SqlNode

`org.apache.ibatis.scripting.xmltags.SqlNode` ，SQL 节点接口。每个 XML Node 会解析成对应的 SQL Node 对象。代码如下：

```java
// SqlNode.java

public interface SqlNode {

    /**
     * 应用当前 SQL Node 节点
     *
     * @param context 上下文
     * @return 当前 SQL Node 节点是否应用成功。
     */
    boolean apply(DynamicContext context);

}
```

### 3.1.1 MixedSqlNode

`org.apache.ibatis.scripting.xmltags.MixedSqlNode` ，实现 SqlNode 接口，混合的 SqlNode 实现类。代码如下：

```java
// MixedSqlNode.java

public class MixedSqlNode implements SqlNode {

    /**
     * 内嵌的 SqlNode 数组
     */
    private final List<SqlNode> contents;

    public MixedSqlNode(List<SqlNode> contents) {
        this.contents = contents;
    }

    @Override
    public boolean apply(DynamicContext context) {
        // 遍历 SqlNode 数组，应用 apply 方法
        for (SqlNode sqlNode : contents) {
            sqlNode.apply(context);
        }
        return true;
    }

}
```

### 3.1.2 StaticTextSqlNode

`org.apache.ibatis.scripting.xmltags.StaticTextSqlNode` ，实现 SqlNode 接口，静态文本的 SqlNode 实现类。代码如下：

```java
// StaticTextSqlNode.java

public class StaticTextSqlNode implements SqlNode {

    /**
     * 静态文本
     */
    private final String text;

    public StaticTextSqlNode(String text) {
        this.text = text;
    }

    @Override
    public boolean apply(DynamicContext context) {
        // 直接拼接到 context 中
        context.appendSql(text);
        return true;
    }

}
```

### 3.1.3 TextSqlNode

`org.apache.ibatis.scripting.xmltags.TextSqlNode` ，实现 SqlNode 接口，文本的 SqlNode 实现类。相比 StaticTextSqlNode 的实现来说，TextSqlNode 不确定是否为静态文本，所以提供 `#isDynamic()` 方法，进行判断。代码如下：

```java
// TextSqlNode.java

public class TextSqlNode implements SqlNode {

    /**
     * 文本
     */
    private final String text;
    /**
     * 目前该属性只在单元测试中使用了，暂时无视
     */
    private final Pattern injectionFilter;

    public TextSqlNode(String text) {
        this(text, null);
    }

    public TextSqlNode(String text, Pattern injectionFilter) {
        this.text = text;
        this.injectionFilter = injectionFilter;
    }

    /**
     * @return 是否为动态 SQL
     */
    public boolean isDynamic() {
        // <1> 创建 DynamicCheckerTokenParser 对象
        DynamicCheckerTokenParser checker = new DynamicCheckerTokenParser();
        // <2> 创建 GenericTokenParser 对象
        GenericTokenParser parser = createParser(checker);
        // <3> 执行解析
        parser.parse(text);
        // <4> 判断是否为动态 SQL
        return checker.isDynamic();
    }

    @Override
    public boolean apply(DynamicContext context) {
        // <1> 创建 BindingTokenParser 对象
        GenericTokenParser parser = createParser(new BindingTokenParser(context, injectionFilter));
        // <2> 执行解析
        context.appendSql(parser.parse(text));
        return true;
    }

    private GenericTokenParser createParser(TokenHandler handler) {
        return new GenericTokenParser("${", "}", handler);
    }

}
```

- `#isDynamic()` 方法，判断是否为动态 SQL 。解析过程中，如果发现有 `${}` 对，则认为是动态 SQL 。代码如下：

  ```java
  // TextSqlNode.java
  
  private static class DynamicCheckerTokenParser implements TokenHandler {
  
      /**
       * 是否为动态 SQL
       */
      private boolean isDynamic;
  
      public DynamicCheckerTokenParser() {
          // Prevent Synthetic Access
      }
  
      public boolean isDynamic() {
          return isDynamic;
      }
  
      @Override
      public String handleToken(String content) {
          // 当检测到 token ，标记为动态 SQL
          this.isDynamic = true;
          return null;
      }
  }
  ```

- `#apply(DynamicContext context)` 方法，解析文本，并拼接到 DynamicContext 中。其中，BindingTokenParser 是 TextSqlNode 的内部类，继承 TokenHandler 接口，代码如下：

  ```java
  // TextSqlNode.java
  
  private static class BindingTokenParser implements TokenHandler {
  
      private DynamicContext context;
      private Pattern injectionFilter;
  
      public BindingTokenParser(DynamicContext context, Pattern injectionFilter) {
          this.context = context;
          this.injectionFilter = injectionFilter;
      }
  
      @Override
      public String handleToken(String content) {
          // 初始化 value 属性到 context 中
          Object parameter = context.getBindings().get("_parameter");
          if (parameter == null) {
              context.getBindings().put("value", null);
          } else if (SimpleTypeRegistry.isSimpleType(parameter.getClass())) {
              context.getBindings().put("value", parameter);
          }
          // 使用 OGNL 表达式，获得对应的值
          Object value = OgnlCache.getValue(content, context.getBindings());
          String srtValue = value == null ? "" : String.valueOf(value); // issue #274 return "" instead of "null"
          // 检测值是否匹配
          checkInjection(srtValue);
          return srtValue;
      }
  
      private void checkInjection(String value) {
          if (injectionFilter != null && !injectionFilter.matcher(value).matches()) {
              throw new ScriptingException("Invalid input. Please conform to regex" + injectionFilter.pattern());
          }
      }
  }
  ```

  - 通过 OGNL 表达式，获得对应的值。例如：`${username}` 时，`content = "username"` ，即获取 `"username"` 对应的值。

### 3.1.4 IfSqlNode

`org.apache.ibatis.scripting.xmltags.IfSqlNode` ，实现 SqlNode 接口，`<if />` 标签的 SqlNode 实现类。代码如下：

```java
// IfSqlNode.java

public class IfSqlNode implements SqlNode {

    /**
     * 表达式评估器
     */
    private final ExpressionEvaluator evaluator;
    /**
     * 判断表达式
     */
    private final String test;
    /**
     * 内嵌的

2025-08-25 13:12:17,155 - evaluation_logger_Attraction-106 - INFO - Complete Result: {'score': 0, 'reason': 'The response does not address any of the requested information about tour routes or sightseeing activities in Seville.'}
2025-08-25 13:12:23,308 - evaluation_logger_Attraction-106 - INFO - Correct Result: {'score': 0, 'reason': 'All information in the response is incorrect.'}
2025-08-25 13:12:23,308 - evaluation_logger_Attraction-106 - INFO - Message: Success.
2025-08-25 13:12:23,308 - evaluation_logger_Attraction-106 - INFO - Success turn num = 3
2025-08-25 13:12:23,308 - evaluation_logger_Attraction-106 - INFO - ----------------------------------------------------------------------------------------------------
